{
  "version": 3,
  "sources": ["../../../node_modules/tslib/tslib.js", "../../../node_modules/js-sha256/src/sha256.js", "(disabled):path", "(disabled):fs", "../../../node_modules/web-worker/cjs/browser.js", "../../../node_modules/tslib/modules/index.js", "../../../node_modules/apache-arrow/util/util/buffer.ts", "../../../node_modules/apache-arrow/util/util/utf8.ts", "../../../node_modules/apache-arrow/util/util/compat.ts", "../../../node_modules/apache-arrow/io/io/adapters.ts", "../../../node_modules/apache-arrow/enum.ts", "../../../node_modules/apache-arrow/util/util/vector.ts", "../../../node_modules/apache-arrow/util/util/pretty.ts", "../../../node_modules/apache-arrow/util/util/bn.ts", "../../../node_modules/apache-arrow/type.ts", "../../../node_modules/apache-arrow/visitor.ts", "../../../node_modules/apache-arrow/util/util/math.ts", "../../../node_modules/apache-arrow/visitor/visitor/set.ts", "../../../node_modules/apache-arrow/row/row/struct.ts", "../../../node_modules/apache-arrow/visitor/visitor/get.ts", "../../../node_modules/apache-arrow/row/row/map.ts", "../../../node_modules/apache-arrow/util/util/bit.ts", "../../../node_modules/apache-arrow/data.ts", "../../../node_modules/apache-arrow/util/util/chunk.ts", "../../../node_modules/apache-arrow/visitor/visitor/indexof.ts", "../../../node_modules/apache-arrow/visitor/visitor/iterator.ts", "../../../node_modules/apache-arrow/visitor/visitor/bytelength.ts", "../../../node_modules/apache-arrow/vector.ts", "../../../node_modules/apache-arrow/builder/builder/valid.ts", "../../../node_modules/apache-arrow/builder/builder/buffer.ts", "../../../node_modules/apache-arrow/builder.ts", "../../../node_modules/apache-arrow/fb/fb/block.ts", "../../../node_modules/flatbuffers/mjs/constants.js", "../../../node_modules/flatbuffers/mjs/utils.js", "../../../node_modules/flatbuffers/mjs/long.js", "../../../node_modules/flatbuffers/mjs/encoding.js", "../../../node_modules/flatbuffers/mjs/byte-buffer.js", "../../../node_modules/flatbuffers/mjs/builder.js", "../../../node_modules/apache-arrow/fb/fb/key-value.ts", "../../../node_modules/apache-arrow/fb/fb/metadata-version.ts", "../../../node_modules/apache-arrow/fb/fb/endianness.ts", "../../../node_modules/apache-arrow/fb/fb/dictionary-kind.ts", "../../../node_modules/apache-arrow/fb/fb/int.ts", "../../../node_modules/apache-arrow/fb/fb/dictionary-encoding.ts", "../../../node_modules/apache-arrow/fb/fb/binary.ts", "../../../node_modules/apache-arrow/fb/fb/bool.ts", "../../../node_modules/apache-arrow/fb/fb/date-unit.ts", "../../../node_modules/apache-arrow/fb/fb/date.ts", "../../../node_modules/apache-arrow/fb/fb/decimal.ts", "../../../node_modules/apache-arrow/fb/fb/time-unit.ts", "../../../node_modules/apache-arrow/fb/fb/fixed-size-binary.ts", "../../../node_modules/apache-arrow/fb/fb/fixed-size-list.ts", "../../../node_modules/apache-arrow/fb/fb/precision.ts", "../../../node_modules/apache-arrow/fb/fb/floating-point.ts", "../../../node_modules/apache-arrow/fb/fb/interval-unit.ts", "../../../node_modules/apache-arrow/fb/fb/interval.ts", "../../../node_modules/apache-arrow/fb/fb/list.ts", "../../../node_modules/apache-arrow/fb/fb/map.ts", "../../../node_modules/apache-arrow/fb/fb/null.ts", "../../../node_modules/apache-arrow/fb/fb/struct_.ts", "../../../node_modules/apache-arrow/fb/fb/time.ts", "../../../node_modules/apache-arrow/fb/fb/timestamp.ts", "../../../node_modules/apache-arrow/fb/fb/union-mode.ts", "../../../node_modules/apache-arrow/fb/fb/union.ts", "../../../node_modules/apache-arrow/fb/fb/utf8.ts", "../../../node_modules/apache-arrow/fb/fb/type.ts", "../../../node_modules/apache-arrow/fb/fb/field.ts", "../../../node_modules/apache-arrow/fb/fb/schema.ts", "../../../node_modules/apache-arrow/fb/fb/footer.ts", "../../../node_modules/apache-arrow/schema.ts", "../../../node_modules/apache-arrow/ipc/metadata/ipc/metadata/file.ts", "../../../node_modules/apache-arrow/io/io/interfaces.ts", "../../../node_modules/apache-arrow/io/io/stream.ts", "../../../node_modules/apache-arrow/io/io/file.ts", "../../../node_modules/apache-arrow/util/util/int.ts", "../../../node_modules/apache-arrow/visitor/visitor/vectorloader.ts", "../../../node_modules/apache-arrow/builder/builder/binary.ts", "../../../node_modules/apache-arrow/builder/builder/bool.ts", "../../../node_modules/apache-arrow/builder/builder/date.ts", "../../../node_modules/apache-arrow/builder/builder/decimal.ts", "../../../node_modules/apache-arrow/builder/builder/dictionary.ts", "../../../node_modules/apache-arrow/builder/builder/fixedsizebinary.ts", "../../../node_modules/apache-arrow/builder/builder/fixedsizelist.ts", "../../../node_modules/apache-arrow/builder/builder/float.ts", "../../../node_modules/apache-arrow/builder/builder/interval.ts", "../../../node_modules/apache-arrow/builder/builder/int.ts", "../../../node_modules/apache-arrow/builder/builder/list.ts", "../../../node_modules/apache-arrow/builder/builder/map.ts", "../../../node_modules/apache-arrow/builder/builder/null.ts", "../../../node_modules/apache-arrow/builder/builder/struct.ts", "../../../node_modules/apache-arrow/builder/builder/timestamp.ts", "../../../node_modules/apache-arrow/builder/builder/time.ts", "../../../node_modules/apache-arrow/builder/builder/union.ts", "../../../node_modules/apache-arrow/builder/builder/utf8.ts", "../../../node_modules/apache-arrow/visitor/visitor/builderctor.ts", "../../../node_modules/apache-arrow/factories.ts", "../../../node_modules/apache-arrow/visitor/visitor/typecomparator.ts", "../../../node_modules/apache-arrow/util/util/recordbatch.ts", "../../../node_modules/apache-arrow/table.ts", "../../../node_modules/apache-arrow/recordbatch.ts", "../../../node_modules/apache-arrow/fb/fb/body-compression-method.ts", "../../../node_modules/apache-arrow/fb/fb/compression-type.ts", "../../../node_modules/apache-arrow/fb/fb/body-compression.ts", "../../../node_modules/apache-arrow/fb/fb/buffer.ts", "../../../node_modules/apache-arrow/fb/fb/field-node.ts", "../../../node_modules/apache-arrow/fb/fb/record-batch.ts", "../../../node_modules/apache-arrow/fb/fb/dictionary-batch.ts", "../../../node_modules/apache-arrow/fb/fb/message-header.ts", "../../../node_modules/apache-arrow/fb/fb/message.ts", "../../../node_modules/apache-arrow/visitor/visitor/typeassembler.ts", "../../../node_modules/apache-arrow/ipc/metadata/ipc/metadata/json.ts", "../../../node_modules/apache-arrow/ipc/metadata/ipc/metadata/message.ts", "../../../node_modules/apache-arrow/ipc/ipc/message.ts", "../../../node_modules/apache-arrow/ipc/ipc/reader.ts", "../../../node_modules/apache-arrow/visitor/visitor/vectorassembler.ts", "../../../node_modules/apache-arrow/ipc/ipc/writer.ts", "../../../node_modules/apache-arrow/io/whatwg/io/whatwg/iterable.ts", "../../../node_modules/apache-arrow/io/whatwg/io/whatwg/builder.ts", "../../../node_modules/apache-arrow/io/whatwg/io/whatwg/reader.ts", "../../../node_modules/apache-arrow/io/whatwg/io/whatwg/writer.ts", "../../../node_modules/apache-arrow/ipc/ipc/serialization.ts", "../../../node_modules/apache-arrow/Arrow.ts", "../../../node_modules/apache-arrow/Arrow.dom.ts", "../src/bindings/connection.ts", "../src/bindings/udf_runtime.ts", "../src/bindings/runtime.ts", "../src/bindings/file_stats.ts", "../src/json_typedef.ts", "../src/bindings/bindings_base.ts", "../src/log.ts", "../../../node_modules/wasm-feature-detect/dist/esm/index.js", "../src/platform.ts", "../src/utils/s3_helper.ts", "../src/bindings/runtime_browser.ts", "../src/bindings/duckdb-mvp.js", "../src/bindings/bindings_browser_base.ts", "../src/bindings/bindings_browser_mvp.ts", "../src/bindings/duckdb-eh.js", "../src/bindings/bindings_browser_eh.ts", "../src/targets/duckdb-browser-blocking.ts", "../src/parallel/async_connection.ts", "../src/parallel/worker_request.ts", "../src/parallel/async_bindings.ts", "../src/worker.ts", "../test/all_types.test.ts", "../test/httpfs_test.ts", "../test/bindings.test.ts", "../test/batch_stream.test.ts", "../test/batch_stream_async.test.ts", "../test/filesystem.test.ts", "../test/table_test.ts", "../test/insert_arrow.test.ts", "../test/insert_json.test.ts", "../test/insert_csv.test.ts", "../test/tokenizer.test.ts", "../test/tablenames.test.ts", "../test/regression/github_332.test.ts", "../test/regression/github_334.test.ts", "../test/regression/github_393.test.ts", "../test/regression/github_448.test.ts", "../test/regression/github_470.test.ts", "../test/regression/github_477.test.ts", "../test/regression/index.ts", "../test/udf.test.ts", "../test/index_browser.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "", "", "/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;", "import tslib from '../tslib.js';\r\nconst {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n} = tslib;\r\nexport {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n};\r\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export const SIZEOF_SHORT = 2;\r\nexport const SIZEOF_INT = 4;\r\nexport const FILE_IDENTIFIER_LENGTH = 4;\r\nexport const SIZE_PREFIX_LENGTH = 4;\r\n", "export const int32 = new Int32Array(2);\r\nexport const float32 = new Float32Array(int32.buffer);\r\nexport const float64 = new Float64Array(int32.buffer);\r\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n", "export function createLong(low, high) {\r\n    return Long.create(low, high);\r\n}\r\nexport class Long {\r\n    constructor(low, high) {\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n    }\r\n    static create(low, high) {\r\n        // Special-case zero to avoid GC overhead for default values\r\n        return low == 0 && high == 0 ? Long.ZERO : new Long(low, high);\r\n    }\r\n    toFloat64() {\r\n        return (this.low >>> 0) + this.high * 0x100000000;\r\n    }\r\n    equals(other) {\r\n        return this.low == other.low && this.high == other.high;\r\n    }\r\n}\r\nLong.ZERO = new Long(0, 0);\r\n", "export var Encoding;\r\n(function (Encoding) {\r\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\r\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\r\n})(Encoding || (Encoding = {}));\r\n", "import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nimport { int32, isLittleEndian, float32, float64 } from \"./utils\";\r\nimport { Encoding } from \"./encoding\";\r\nexport class ByteBuffer {\r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(bytes_) {\r\n        this.bytes_ = bytes_;\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size) {\r\n        return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n    clear() {\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes() {\r\n        return this.bytes_;\r\n    }\r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position() {\r\n        return this.position_;\r\n    }\r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position) {\r\n        this.position_ = position;\r\n    }\r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity() {\r\n        return this.bytes_.length;\r\n    }\r\n    readInt8(offset) {\r\n        return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n    readUint8(offset) {\r\n        return this.bytes_[offset];\r\n    }\r\n    readInt16(offset) {\r\n        return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n    readUint16(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n    readInt32(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n    readUint32(offset) {\r\n        return this.readInt32(offset) >>> 0;\r\n    }\r\n    readInt64(offset) {\r\n        return new Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n    }\r\n    readUint64(offset) {\r\n        return new Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n    }\r\n    readFloat32(offset) {\r\n        int32[0] = this.readInt32(offset);\r\n        return float32[0];\r\n    }\r\n    readFloat64(offset) {\r\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n        return float64[0];\r\n    }\r\n    writeInt8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeUint8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeInt16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeUint16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeInt32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeUint32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeInt64(offset, value) {\r\n        this.writeInt32(offset, value.low);\r\n        this.writeInt32(offset + 4, value.high);\r\n    }\r\n    writeUint64(offset, value) {\r\n        this.writeUint32(offset, value.low);\r\n        this.writeUint32(offset + 4, value.high);\r\n    }\r\n    writeFloat32(offset, value) {\r\n        float32[0] = value;\r\n        this.writeInt32(offset, int32[0]);\r\n    }\r\n    writeFloat64(offset, value) {\r\n        float64[0] = value;\r\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\r\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\r\n    }\r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier() {\r\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\r\n            FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n        }\r\n        let result = \"\";\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos, vtable_offset) {\r\n        const vtable = bb_pos - this.readInt32(bb_pos);\r\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t, offset) {\r\n        t.bb_pos = offset + this.readInt32(offset);\r\n        t.bb = this;\r\n        return t;\r\n    }\r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset, opt_encoding) {\r\n        offset += this.readInt32(offset);\r\n        const length = this.readInt32(offset);\r\n        let result = '';\r\n        let i = 0;\r\n        offset += SIZEOF_INT;\r\n        if (opt_encoding === Encoding.UTF8_BYTES) {\r\n            return this.bytes_.subarray(offset, offset + length);\r\n        }\r\n        while (i < length) {\r\n            let codePoint;\r\n            // Decode UTF-8\r\n            const a = this.readUint8(offset + i++);\r\n            if (a < 0xC0) {\r\n                codePoint = a;\r\n            }\r\n            else {\r\n                const b = this.readUint8(offset + i++);\r\n                if (a < 0xE0) {\r\n                    codePoint =\r\n                        ((a & 0x1F) << 6) |\r\n                            (b & 0x3F);\r\n                }\r\n                else {\r\n                    const c = this.readUint8(offset + i++);\r\n                    if (a < 0xF0) {\r\n                        codePoint =\r\n                            ((a & 0x0F) << 12) |\r\n                                ((b & 0x3F) << 6) |\r\n                                (c & 0x3F);\r\n                    }\r\n                    else {\r\n                        const d = this.readUint8(offset + i++);\r\n                        codePoint =\r\n                            ((a & 0x07) << 18) |\r\n                                ((b & 0x3F) << 12) |\r\n                                ((c & 0x3F) << 6) |\r\n                                (d & 0x3F);\r\n                    }\r\n                }\r\n            }\r\n            // Encode UTF-16\r\n            if (codePoint < 0x10000) {\r\n                result += String.fromCharCode(codePoint);\r\n            }\r\n            else {\r\n                codePoint -= 0x10000;\r\n                result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\r\n     * if a string then return a new one\r\n     *\r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o, offset) {\r\n        if (typeof o === 'string') {\r\n            return this.__string(offset);\r\n        }\r\n        return this.__union(o, offset);\r\n    }\r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset) {\r\n        return offset + this.readInt32(offset);\r\n    }\r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset) {\r\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\r\n    }\r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset) {\r\n        return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n    __has_identifier(ident) {\r\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: file identifier must be length ' +\r\n                FILE_IDENTIFIER_LENGTH);\r\n        }\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            if (listAccessor(i) !== null) {\r\n                ret.push(listAccessor(i));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            const val = listAccessor(i);\r\n            if (val !== null) {\r\n                ret.push(val.unpack());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n", "import { ByteBuffer } from \"./byte-buffer\";\r\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nexport class Builder {\r\n    /**\r\n     * Create a FlatBufferBuilder.\r\n     */\r\n    constructor(opt_initial_size) {\r\n        /** Minimum alignment encountered so far. */\r\n        this.minalign = 1;\r\n        /** The vtable for the current table. */\r\n        this.vtable = null;\r\n        /** The amount of fields we're actually using. */\r\n        this.vtable_in_use = 0;\r\n        /** Whether we are currently serializing a table. */\r\n        this.isNested = false;\r\n        /** Starting offset of the current struct/table. */\r\n        this.object_start = 0;\r\n        /** List of offsets of all vtables. */\r\n        this.vtables = [];\r\n        /** For the current vector being built. */\r\n        this.vector_num_elems = 0;\r\n        /** False omits default values from the serialized data */\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n        let initial_size;\r\n        if (!opt_initial_size) {\r\n            initial_size = 1024;\r\n        }\r\n        else {\r\n            initial_size = opt_initial_size;\r\n        }\r\n        /**\r\n         * @type {ByteBuffer}\r\n         * @private\r\n         */\r\n        this.bb = ByteBuffer.allocate(initial_size);\r\n        this.space = initial_size;\r\n    }\r\n    clear() {\r\n        this.bb.clear();\r\n        this.space = this.bb.capacity();\r\n        this.minalign = 1;\r\n        this.vtable = null;\r\n        this.vtable_in_use = 0;\r\n        this.isNested = false;\r\n        this.object_start = 0;\r\n        this.vtables = [];\r\n        this.vector_num_elems = 0;\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n    }\r\n    /**\r\n     * In order to save space, fields that are set to their default value\r\n     * don't get serialized into the buffer. Forcing defaults provides a\r\n     * way to manually disable this optimization.\r\n     *\r\n     * @param forceDefaults true always serializes default values\r\n     */\r\n    forceDefaults(forceDefaults) {\r\n        this.force_defaults = forceDefaults;\r\n    }\r\n    /**\r\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n     * called finish(). The actual data starts at the ByteBuffer's current position,\r\n     * not necessarily at 0.\r\n     */\r\n    dataBuffer() {\r\n        return this.bb;\r\n    }\r\n    /**\r\n     * Get the bytes representing the FlatBuffer. Only call this after you've\r\n     * called finish().\r\n     */\r\n    asUint8Array() {\r\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n    }\r\n    /**\r\n     * Prepare to write an element of `size` after `additional_bytes` have been\r\n     * written, e.g. if you write a string, you need to align such the int length\r\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n     * you need to do is alignment, `additional_bytes` will be 0.\r\n     *\r\n     * @param size This is the of the new element to write\r\n     * @param additional_bytes The padding size\r\n     */\r\n    prep(size, additional_bytes) {\r\n        // Track the biggest thing we've ever aligned to.\r\n        if (size > this.minalign) {\r\n            this.minalign = size;\r\n        }\r\n        // Find the amount of alignment needed such that `size` is properly\r\n        // aligned after `additional_bytes`\r\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n        // Reallocate the buffer if needed.\r\n        while (this.space < align_size + size + additional_bytes) {\r\n            const old_buf_size = this.bb.capacity();\r\n            this.bb = Builder.growByteBuffer(this.bb);\r\n            this.space += this.bb.capacity() - old_buf_size;\r\n        }\r\n        this.pad(align_size);\r\n    }\r\n    pad(byte_size) {\r\n        for (let i = 0; i < byte_size; i++) {\r\n            this.bb.writeInt8(--this.space, 0);\r\n        }\r\n    }\r\n    writeInt8(value) {\r\n        this.bb.writeInt8(this.space -= 1, value);\r\n    }\r\n    writeInt16(value) {\r\n        this.bb.writeInt16(this.space -= 2, value);\r\n    }\r\n    writeInt32(value) {\r\n        this.bb.writeInt32(this.space -= 4, value);\r\n    }\r\n    writeInt64(value) {\r\n        this.bb.writeInt64(this.space -= 8, value);\r\n    }\r\n    writeFloat32(value) {\r\n        this.bb.writeFloat32(this.space -= 4, value);\r\n    }\r\n    writeFloat64(value) {\r\n        this.bb.writeFloat64(this.space -= 8, value);\r\n    }\r\n    /**\r\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int8` to add the the buffer.\r\n     */\r\n    addInt8(value) {\r\n        this.prep(1, 0);\r\n        this.writeInt8(value);\r\n    }\r\n    /**\r\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int16` to add the the buffer.\r\n     */\r\n    addInt16(value) {\r\n        this.prep(2, 0);\r\n        this.writeInt16(value);\r\n    }\r\n    /**\r\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int32` to add the the buffer.\r\n     */\r\n    addInt32(value) {\r\n        this.prep(4, 0);\r\n        this.writeInt32(value);\r\n    }\r\n    /**\r\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int64` to add the the buffer.\r\n     */\r\n    addInt64(value) {\r\n        this.prep(8, 0);\r\n        this.writeInt64(value);\r\n    }\r\n    /**\r\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float32` to add the the buffer.\r\n     */\r\n    addFloat32(value) {\r\n        this.prep(4, 0);\r\n        this.writeFloat32(value);\r\n    }\r\n    /**\r\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float64` to add the the buffer.\r\n     */\r\n    addFloat64(value) {\r\n        this.prep(8, 0);\r\n        this.writeFloat64(value);\r\n    }\r\n    addFieldInt8(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt8(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt16(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt16(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || !value.equals(defaultValue)) {\r\n            this.addInt64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldOffset(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addOffset(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n     */\r\n    addFieldStruct(voffset, value, defaultValue) {\r\n        if (value != defaultValue) {\r\n            this.nested(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structures are always stored inline, they need to be created right\r\n     * where they're used.  You'll get this assertion failure if you\r\n     * created it elsewhere.\r\n     */\r\n    nested(obj) {\r\n        if (obj != this.offset()) {\r\n            throw new Error('FlatBuffers: struct must be serialized inline.');\r\n        }\r\n    }\r\n    /**\r\n     * Should not be creating any other object, string or vector\r\n     * while an object is being constructed\r\n     */\r\n    notNested() {\r\n        if (this.isNested) {\r\n            throw new Error('FlatBuffers: object serialization must not be nested.');\r\n        }\r\n    }\r\n    /**\r\n     * Set the current vtable at `voffset` to the current location in the buffer.\r\n     */\r\n    slot(voffset) {\r\n        if (this.vtable !== null)\r\n            this.vtable[voffset] = this.offset();\r\n    }\r\n    /**\r\n     * @returns Offset relative to the end of the buffer.\r\n     */\r\n    offset() {\r\n        return this.bb.capacity() - this.space;\r\n    }\r\n    /**\r\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n     * the end of the new buffer (since we build the buffer backwards).\r\n     *\r\n     * @param bb The current buffer with the existing data\r\n     * @returns A new byte buffer with the old data copied\r\n     * to it. The data is located at the end of the buffer.\r\n     *\r\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n     * it a uint8Array we need to suppress the type check:\r\n     * @suppress {checkTypes}\r\n     */\r\n    static growByteBuffer(bb) {\r\n        const old_buf_size = bb.capacity();\r\n        // Ensure we don't grow beyond what fits in an int.\r\n        if (old_buf_size & 0xC0000000) {\r\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n        }\r\n        const new_buf_size = old_buf_size << 1;\r\n        const nbb = ByteBuffer.allocate(new_buf_size);\r\n        nbb.setPosition(new_buf_size - old_buf_size);\r\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n        return nbb;\r\n    }\r\n    /**\r\n     * Adds on offset, relative to where it will be written.\r\n     *\r\n     * @param offset The offset to add.\r\n     */\r\n    addOffset(offset) {\r\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\r\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\r\n    }\r\n    /**\r\n     * Start encoding a new object in the buffer.  Users will not usually need to\r\n     * call this directly. The FlatBuffers compiler will generate helper methods\r\n     * that call this method internally.\r\n     */\r\n    startObject(numfields) {\r\n        this.notNested();\r\n        if (this.vtable == null) {\r\n            this.vtable = [];\r\n        }\r\n        this.vtable_in_use = numfields;\r\n        for (let i = 0; i < numfields; i++) {\r\n            this.vtable[i] = 0; // This will push additional elements as needed\r\n        }\r\n        this.isNested = true;\r\n        this.object_start = this.offset();\r\n    }\r\n    /**\r\n     * Finish off writing the object that is under construction.\r\n     *\r\n     * @returns The offset to the object inside `dataBuffer`\r\n     */\r\n    endObject() {\r\n        if (this.vtable == null || !this.isNested) {\r\n            throw new Error('FlatBuffers: endObject called without startObject');\r\n        }\r\n        this.addInt32(0);\r\n        const vtableloc = this.offset();\r\n        // Trim trailing zeroes.\r\n        let i = this.vtable_in_use - 1;\r\n        // eslint-disable-next-line no-empty\r\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\r\n        const trimmed_size = i + 1;\r\n        // Write out the current vtable.\r\n        for (; i >= 0; i--) {\r\n            // Offset relative to the start of the table.\r\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n        }\r\n        const standard_fields = 2; // The fields below:\r\n        this.addInt16(vtableloc - this.object_start);\r\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\r\n        this.addInt16(len);\r\n        // Search for an existing vtable that matches the current one.\r\n        let existing_vtable = 0;\r\n        const vt1 = this.space;\r\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\r\n            const vt2 = this.bb.capacity() - this.vtables[i];\r\n            if (len == this.bb.readInt16(vt2)) {\r\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\r\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n                        continue outer_loop;\r\n                    }\r\n                }\r\n                existing_vtable = this.vtables[i];\r\n                break;\r\n            }\r\n        }\r\n        if (existing_vtable) {\r\n            // Found a match:\r\n            // Remove the current vtable.\r\n            this.space = this.bb.capacity() - vtableloc;\r\n            // Point table to existing vtable.\r\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n        }\r\n        else {\r\n            // No match:\r\n            // Add the location of the current vtable to the list of vtables.\r\n            this.vtables.push(this.offset());\r\n            // Point table to current vtable.\r\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n        }\r\n        this.isNested = false;\r\n        return vtableloc;\r\n    }\r\n    /**\r\n     * Finalize a buffer, poiting to the given `root_table`.\r\n     */\r\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\r\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\r\n        if (opt_file_identifier) {\r\n            const file_identifier = opt_file_identifier;\r\n            this.prep(this.minalign, SIZEOF_INT +\r\n                FILE_IDENTIFIER_LENGTH + size_prefix);\r\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\r\n                throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    FILE_IDENTIFIER_LENGTH);\r\n            }\r\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n                this.writeInt8(file_identifier.charCodeAt(i));\r\n            }\r\n        }\r\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\r\n        this.addOffset(root_table);\r\n        if (size_prefix) {\r\n            this.addInt32(this.bb.capacity() - this.space);\r\n        }\r\n        this.bb.setPosition(this.space);\r\n    }\r\n    /**\r\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\r\n     */\r\n    finishSizePrefixed(root_table, opt_file_identifier) {\r\n        this.finish(root_table, opt_file_identifier, true);\r\n    }\r\n    /**\r\n     * This checks a required field has been set in a given table that has\r\n     * just been constructed.\r\n     */\r\n    requiredField(table, field) {\r\n        const table_start = this.bb.capacity() - table;\r\n        const vtable_start = table_start - this.bb.readInt32(table_start);\r\n        const ok = this.bb.readInt16(vtable_start + field) != 0;\r\n        // If this fails, the caller will show what field needs to be set.\r\n        if (!ok) {\r\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n        }\r\n    }\r\n    /**\r\n     * Start a new array/vector of objects.  Users usually will not call\r\n     * this directly. The FlatBuffers compiler will create a start/end\r\n     * method for vector types in generated code.\r\n     *\r\n     * @param elem_size The size of each element in the array\r\n     * @param num_elems The number of elements in the array\r\n     * @param alignment The alignment of the array\r\n     */\r\n    startVector(elem_size, num_elems, alignment) {\r\n        this.notNested();\r\n        this.vector_num_elems = num_elems;\r\n        this.prep(SIZEOF_INT, elem_size * num_elems);\r\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n    }\r\n    /**\r\n     * Finish off the creation of an array and all its elements. The array must be\r\n     * created with `startVector`.\r\n     *\r\n     * @returns The offset at which the newly created array\r\n     * starts.\r\n     */\r\n    endVector() {\r\n        this.writeInt32(this.vector_num_elems);\r\n        return this.offset();\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\r\n     * already been seen, we return the offset of the already written string\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createSharedString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        if (!this.string_maps) {\r\n            this.string_maps = new Map();\r\n        }\r\n        if (this.string_maps.has(s)) {\r\n            return this.string_maps.get(s);\r\n        }\r\n        const offset = this.createString(s);\r\n        this.string_maps.set(s, offset);\r\n        return offset;\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        let utf8;\r\n        if (s instanceof Uint8Array) {\r\n            utf8 = s;\r\n        }\r\n        else {\r\n            utf8 = [];\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                let codePoint;\r\n                // Decode UTF-16\r\n                const a = s.charCodeAt(i++);\r\n                if (a < 0xD800 || a >= 0xDC00) {\r\n                    codePoint = a;\r\n                }\r\n                else {\r\n                    const b = s.charCodeAt(i++);\r\n                    codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n                }\r\n                // Encode UTF-8\r\n                if (codePoint < 0x80) {\r\n                    utf8.push(codePoint);\r\n                }\r\n                else {\r\n                    if (codePoint < 0x800) {\r\n                        utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n                    }\r\n                    else {\r\n                        if (codePoint < 0x10000) {\r\n                            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n                        }\r\n                        else {\r\n                            utf8.push(((codePoint >> 18) & 0x07) | 0xF0, ((codePoint >> 12) & 0x3F) | 0x80);\r\n                        }\r\n                        utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n                    }\r\n                    utf8.push((codePoint & 0x3F) | 0x80);\r\n                }\r\n            }\r\n        }\r\n        this.addInt8(0);\r\n        this.startVector(1, utf8.length, 1);\r\n        this.bb.setPosition(this.space -= utf8.length);\r\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n            bytes[offset++] = utf8[i];\r\n        }\r\n        return this.endVector();\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function to pack an object\r\n     *\r\n     * @returns offset of obj\r\n     */\r\n    createObjectOffset(obj) {\r\n        if (obj === null) {\r\n            return 0;\r\n        }\r\n        if (typeof obj === 'string') {\r\n            return this.createString(obj);\r\n        }\r\n        else {\r\n            return obj.pack(this);\r\n        }\r\n    }\r\n    /**\r\n     * A helper function to pack a list of object\r\n     *\r\n     * @returns list of offsets of each non null object\r\n     */\r\n    createObjectOffsetList(list) {\r\n        const ret = [];\r\n        for (let i = 0; i < list.length; ++i) {\r\n            const val = list[i];\r\n            if (val !== null) {\r\n                ret.push(this.createObjectOffset(val));\r\n            }\r\n            else {\r\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    createStructOffsetList(list, startFunc) {\r\n        startFunc(this, list.length);\r\n        this.createObjectOffsetList(list);\r\n        return this.endVector();\r\n    }\r\n}\r\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import * as arrow from 'apache-arrow';\nimport { DuckDBBindings } from './bindings_interface';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\n\n/** A thin helper to bind the connection id and talk record batches */\nexport class DuckDBConnection {\n    /** The bindings */\n    protected _bindings: DuckDBBindings;\n    /** The connection handle */\n    protected _conn: number;\n\n    /** Constructor */\n    constructor(bindings: DuckDBBindings, conn: number) {\n        this._bindings = bindings;\n        this._conn = conn;\n    }\n\n    /** Close a connection */\n    public close(): void {\n        this._bindings.disconnect(this._conn);\n    }\n\n    /** Brave souls may use this function to consume the underlying connection id */\n    public useUnsafe<R>(callback: (bindings: DuckDBBindings, conn: number) => R) {\n        return callback(this._bindings, this._conn);\n    }\n\n    /** Run a query */\n    public query<T extends { [key: string]: arrow.DataType } = any>(text: string): arrow.Table<T> {\n        const buffer = this._bindings.runQuery(this._conn, text);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader);\n    }\n\n    /** Send a query */\n    public send<T extends { [key: string]: arrow.DataType } = any>(text: string): arrow.RecordBatchStreamReader<T> {\n        const header = this._bindings.sendQuery(this._conn, text);\n        const iter = new ResultStreamIterator(this._bindings, this._conn, header);\n        const reader = arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isSync());\n        console.assert(reader.isStream());\n        return reader;\n    }\n\n    /** Get table names */\n    public getTableNames(query: string): string[] {\n        return this._bindings.getTableNames(this._conn, query);\n    }\n\n    /** Create a prepared statement */\n    public prepare<T extends { [key: string]: arrow.DataType } = any>(text: string): PreparedStatement {\n        const stmt = this._bindings.createPrepared(this._conn, text);\n        return new PreparedStatement<T>(this._bindings, this._conn, stmt);\n    }\n\n    /** Create a scalar function */\n    public createScalarFunction(name: string, returns: arrow.DataType, func: (...args: any[]) => void): void {\n        this._bindings.createScalarFunction(this._conn, name, returns, func);\n    }\n\n    /** Insert an arrow table */\n    public insertArrowTable(table: arrow.Table, options: ArrowInsertOptions): void {\n        const writer = new arrow.RecordBatchStreamWriter();\n        writer.writeAll(table);\n        const buffer = writer.toUint8Array(true);\n        this.insertArrowFromIPCStream(buffer, options);\n    }\n    /** Insert an arrow table from an ipc stream */\n    public insertArrowFromIPCStream(buffer: Uint8Array, options: ArrowInsertOptions): void {\n        this._bindings.insertArrowFromIPCStream(this._conn, buffer, options);\n    }\n\n    /** Inesrt csv file from path */\n    public insertCSVFromPath(path: string, options: CSVInsertOptions): void {\n        this._bindings.insertCSVFromPath(this._conn, path, options);\n    }\n    /** Insert json file from path */\n    public insertJSONFromPath(path: string, options: JSONInsertOptions): void {\n        this._bindings.insertJSONFromPath(this._conn, path, options);\n    }\n}\n\n/** A result stream iterator */\nexport class ResultStreamIterator implements Iterable<Uint8Array> {\n    /** First chunk? */\n    _first: boolean;\n    /** Reached end of stream? */\n    _depleted: boolean;\n\n    constructor(protected bindings: DuckDBBindings, protected conn: number, protected header: Uint8Array) {\n        this._first = true;\n        this._depleted = false;\n    }\n\n    next(): IteratorResult<Uint8Array> {\n        if (this._first) {\n            this._first = false;\n            return { done: false, value: this.header };\n        }\n        if (this._depleted) {\n            return { done: true, value: null };\n        }\n        const bufferI8 = this.bindings.fetchQueryResults(this.conn);\n        this._depleted = bufferI8.length == 0;\n        return {\n            done: this._depleted,\n            value: bufferI8,\n        };\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n\n/** A thin helper to bind the prepared statement id*/\nexport class PreparedStatement<T extends { [key: string]: arrow.DataType } = any> {\n    /** The bindings */\n    protected readonly bindings: DuckDBBindings;\n    /** The connection id */\n    protected readonly connectionId: number;\n    /** The statement id */\n    protected readonly statementId: number;\n\n    /** Constructor */\n    constructor(bindings: DuckDBBindings, connectionId: number, statementId: number) {\n        this.bindings = bindings;\n        this.connectionId = connectionId;\n        this.statementId = statementId;\n    }\n\n    /** Close a prepared statement */\n    public close() {\n        this.bindings.closePrepared(this.connectionId, this.statementId);\n    }\n\n    /** Run a prepared statement */\n    public query(...params: any[]): arrow.Table<T> {\n        const buffer = this.bindings.runPrepared(this.connectionId, this.statementId, params);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\n    }\n\n    /** Send a prepared statement */\n    public send(...params: any[]): arrow.RecordBatchStreamReader<T> {\n        const header = this.bindings.sendPrepared(this.connectionId, this.statementId, params);\n        const iter = new ResultStreamIterator(this.bindings, this.connectionId, header);\n        const reader = arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isSync());\n        console.assert(reader.isStream());\n        return reader as arrow.RecordBatchStreamReader;\n    }\n}\n", "import { DuckDBRuntime } from './runtime';\nimport { DuckDBModule } from './duckdb_module';\n\nconst TEXT_ENCODER = new TextEncoder();\nconst TEXT_DECODER = new TextDecoder('utf-8');\n\nfunction storeError(mod: DuckDBModule, response: number, message: string) {\n    const msgBuffer = TEXT_ENCODER.encode(message);\n    const heapAddr = mod._malloc(msgBuffer.byteLength);\n    const heapArray = mod.HEAPU8.subarray(heapAddr, heapAddr + msgBuffer.byteLength);\n    heapArray.set(msgBuffer);\n    mod.HEAPF64[(response >> 3) + 0] = 1;\n    mod.HEAPF64[(response >> 3) + 1] = heapAddr;\n    mod.HEAPF64[(response >> 3) + 2] = heapArray.byteLength;\n}\n\nfunction getTypeSize(ptype: string) {\n    switch (ptype) {\n        case 'UINT8':\n        case 'INT8':\n            return 1;\n        case 'INT32':\n        case 'FLOAT':\n            return 4;\n        case 'INT64':\n        case 'UINT64':\n        case 'DOUBLE':\n        case 'VARCHAR':\n            return 8;\n        default:\n            return 0;\n    }\n}\n\nfunction ptrToArray(mod: DuckDBModule, ptr: number, ptype: string, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * getTypeSize(ptype));\n    switch (ptype) {\n        case 'UINT8':\n            return new Uint8Array(heap.buffer, heap.byteOffset, n);\n        case 'INT8':\n            return new Int8Array(heap.buffer, heap.byteOffset, n);\n        case 'INT32':\n            return new Int32Array(heap.buffer, heap.byteOffset, n);\n        case 'FLOAT':\n            return new Float32Array(heap.buffer, heap.byteOffset, n);\n        case 'DOUBLE':\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\n        case 'VARCHAR':\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\n        default:\n            return new Array<string | undefined | null>(0); // cough\n    }\n}\n\nfunction ptrToUint8Array(mod: DuckDBModule, ptr: number, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n);\n    return new Uint8Array(heap.buffer, heap.byteOffset, n);\n}\nfunction ptrToFloat64Array(mod: DuckDBModule, ptr: number, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * 8);\n    return new Float64Array(heap.buffer, heap.byteOffset, n);\n}\n\ninterface ArgumentTypeDescription {\n    sqlType: string;\n    physicalType: string;\n    validityBuffer: number;\n    dataBuffer: number;\n    lengthBuffer: number;\n}\n\ninterface ReturnTypeDescription {\n    sqlType: string;\n    physicalType: string;\n}\n\ninterface SchemaDescription {\n    rows: number;\n    args: ArgumentTypeDescription[];\n    ret: ReturnTypeDescription;\n}\n\n// this is called from webdb.cc/CallScalarUDFFunction, changes here need to be matched there\nexport function callScalarUDF(\n    runtime: DuckDBRuntime,\n    mod: DuckDBModule,\n    response: number,\n    funcId: number,\n    descPtr: number,\n    descSize: number,\n    ptrsPtr: number,\n    ptrsSize: number,\n) {\n    try {\n        const udf = runtime._udfFunctions.get(funcId);\n        if (!udf) {\n            storeError(mod, response, 'Unknown UDF with id: ' + funcId);\n            return;\n        }\n        const descStr = TEXT_DECODER.decode(mod.HEAPU8.subarray(descPtr, descPtr + descSize));\n        const desc = JSON.parse(descStr) as SchemaDescription;\n        const ptrs = ptrToFloat64Array(mod, ptrsPtr, ptrsSize / 8);\n\n        // Create argument arrays\n        const argValidity = [];\n        const argData = [];\n        for (let i = 0; i < desc.args.length; ++i) {\n            const argDesc = desc.args[i];\n            const data = ptrToArray(mod, ptrs[argDesc.dataBuffer] as number, argDesc.physicalType, desc.rows);\n            const validity = ptrToUint8Array(mod, ptrs[argDesc.validityBuffer] as number, desc.rows);\n            if (data.length == 0 || validity.length == 0) {\n                storeError(mod, response, \"Can't create physical arrays for argument \" + argDesc.physicalType);\n                return;\n            }\n            argValidity.push(validity);\n\n            switch (argDesc.physicalType) {\n                case 'VARCHAR': {\n                    const lengthsArray = ptrToFloat64Array(mod, ptrs[argDesc.lengthBuffer] as number, desc.rows);\n                    const dataArray = [];\n                    for (let j = 0; j < desc.rows; ++j) {\n                        if (!validity[j]) {\n                            dataArray.push(null);\n                            continue;\n                        }\n                        const subarray = mod.HEAPU8.subarray(\n                            data[j] as number,\n                            (data[j] as number) + (lengthsArray[j] as number),\n                        );\n                        const str = TEXT_DECODER.decode(subarray);\n                        dataArray.push(str);\n                    }\n                    argData.push(dataArray);\n                    break;\n                }\n                default: {\n                    argData.push(data);\n                }\n            }\n        }\n\n        // Prepare result buffers\n        // TODO: we probably do not want to recreate those every time\n        const resultDataLen = desc.rows * getTypeSize(desc.ret.physicalType);\n        const resultDataPtr = mod._malloc(resultDataLen);\n        const resultData = ptrToArray(mod, resultDataPtr, desc.ret.physicalType, desc.rows);\n        const resultValidityPtr = mod._malloc(desc.rows);\n        const resultValidity = ptrToUint8Array(mod, resultValidityPtr, desc.rows);\n        if (resultData.length == 0 || resultValidity.length == 0) {\n            storeError(mod, response, \"Can't create physical arrays for result\");\n            return;\n        }\n        let rawResultData = resultData;\n        if (desc.ret.physicalType == 'VARCHAR') {\n            rawResultData = new Array<string | undefined | null>(desc.rows);\n        }\n\n        // Call the function\n        const args = [];\n        for (let i = 0; i < desc.args.length; ++i) {\n            args.push(null);\n        }\n        for (let i = 0; i < desc.rows; ++i) {\n            for (let j = 0; j < desc.args.length; ++j) {\n                args[j] = argValidity[j][i] ? argData[j][i] : null;\n            }\n            const res = udf.func(...args);\n            rawResultData[i] = res;\n            resultValidity[i] = res === undefined || res === null ? 0 : 1;\n        }\n\n        // Encode return values\n        let resultLengthsPtr = 0;\n        switch (desc.ret.physicalType) {\n            case 'VARCHAR': {\n                // Allocate result buffers\n                const resultDataUTF8 = new Array<Uint8Array>(0); // cough\n                resultLengthsPtr = mod._malloc(desc.rows * getTypeSize('DOUBLE'));\n                const resultLengths = ptrToFloat64Array(mod, resultLengthsPtr, desc.rows);\n\n                // TODO: We need two loops to figure out the total length but maybe we can avoid the double allocation\n                let totalLength = 0;\n                for (let row = 0; row < desc.rows; ++row) {\n                    const utf8 = TEXT_ENCODER.encode((rawResultData as (string | null | undefined)[])[row] || '');\n                    resultDataUTF8.push(utf8);\n                    resultLengths[row] = utf8.length;\n                    totalLength += utf8.length;\n                }\n\n                // We malloc a buffer for the strings to live in for now\n                const resultStringPtr = mod._malloc(totalLength);\n                const resultStringBuf = mod.HEAPU8.subarray(resultStringPtr, resultStringPtr + totalLength);\n\n                // Now copy all the strings to the new buffer back to back\n                let writerOffset = 0;\n                for (let row = 0; row < desc.rows; ++row) {\n                    resultData[row] = writerOffset;\n                    const resultUTF8 = resultDataUTF8[row];\n                    const writer = resultStringBuf.subarray(writerOffset, writerOffset + resultUTF8.length);\n                    writer.set(resultUTF8);\n                    writerOffset += resultUTF8.length;\n                }\n            }\n        }\n\n        // Need to store three pointers, data, validity and length\n        const retLen = 3 * 8;\n        const retPtr = mod._malloc(retLen);\n        const retBuffer = ptrToFloat64Array(mod, retPtr, 3);\n        retBuffer[0] = resultDataPtr;\n        retBuffer[1] = resultValidityPtr;\n        retBuffer[2] = resultLengthsPtr;\n\n        // Pack response\n        mod.HEAPF64[(response >> 3) + 0] = 0;\n        mod.HEAPF64[(response >> 3) + 1] = retPtr;\n        mod.HEAPF64[(response >> 3) + 2] = 0;\n    } catch (e: any) {\n        storeError(mod, response, e.toString());\n    }\n}\n", "import { DuckDBModule } from './duckdb_module';\nimport { UDFFunction } from './udf_function';\nimport * as udf_rt from './udf_runtime';\n\n/** Wrapper for TextDecoder to support shared array buffers */\nfunction TextDecoderWrapper(): (input?: BufferSource) => string {\n    const decoder = new TextDecoder();\n    return (data: any) => {\n        if (typeof SharedArrayBuffer !== 'undefined' && data.buffer instanceof SharedArrayBuffer) {\n            data = new Uint8Array(data);\n        }\n        return decoder.decode(data);\n    };\n}\n/** Helper to decode text */\nexport const decodeText = TextDecoderWrapper();\n\n/** Copy a buffer */\nexport function failWith(mod: DuckDBModule, msg: string): void {\n    mod.ccall('duckdb_web_fail_with', null, ['string'], [msg]);\n}\n\n/** Copy a buffer */\nexport function copyBuffer(mod: DuckDBModule, begin: number, length: number): Uint8Array {\n    const buffer = mod.HEAPU8.subarray(begin, begin + length);\n    const copy = new Uint8Array(new ArrayBuffer(buffer.byteLength));\n    copy.set(buffer);\n    return copy;\n}\n\n/** Decode a string */\nexport function readString(mod: DuckDBModule, begin: number, length: number): string {\n    return decodeText(mod.HEAPU8.subarray(begin, begin + length));\n}\n\n/** The data protocol */\nexport enum DuckDBDataProtocol {\n    BUFFER = 0,\n    NATIVE = 1,\n    HTTP = 3,\n    S3 = 4,\n}\n\n/** File flags for opening files*/\nexport enum FileFlags {\n    //! Open file with read access\n    FILE_FLAGS_READ = 1 << 0,\n    //! Open file with write access\n    FILE_FLAGS_WRITE = 1 << 1,\n    //! Use direct IO when reading/writing to the file\n    FILE_FLAGS_DIRECT_IO = 1 << 2,\n    //! Create file if not exists, can only be used together with WRITE\n    FILE_FLAGS_FILE_CREATE = 1 << 3,\n    //! Always create a new file. If a file exists, the file is truncated. Cannot be used together with CREATE.\n    FILE_FLAGS_FILE_CREATE_NEW = 1 << 4,\n    //! Open file in append mode\n    FILE_FLAGS_APPEND = 1 << 5,\n}\n\n/** Configuration for the AWS S3 Filesystem */\nexport interface S3Config {\n    region?: string;\n    endpoint?: string;\n    accessKeyId?: string;\n    secretAccessKey?: string;\n    sessionToken?: string;\n}\n\n/** An info for a file registered with DuckDB */\nexport interface DuckDBFileInfo {\n    cacheEpoch: number;\n    fileId: number;\n    fileName: string;\n    dataProtocol: DuckDBDataProtocol;\n    dataUrl: string | null;\n    dataNativeFd: number | null;\n    allowFullHttpReads?: boolean;\n    s3Config?: S3Config;\n}\n\n/** Global info for all files registered with DuckDB */\nexport interface DuckDBGlobalFileInfo {\n    cacheEpoch: number;\n    allowFullHttpReads?: boolean;\n    s3Config?: S3Config;\n}\n\n/** Call a function with packed response buffer */\nexport function callSRet(\n    mod: DuckDBModule,\n    funcName: string,\n    argTypes: Array<Emscripten.JSType>,\n    args: Array<any>,\n): [number, number, number] {\n    const stackPointer = mod.stackSave();\n\n    // Allocate the packed response buffer\n    const response = mod.stackAlloc(3 * 8);\n    argTypes.unshift('number');\n    args.unshift(response);\n\n    // Do the call\n    mod.ccall(funcName, null, argTypes, args);\n\n    // Read the response\n    const status = mod.HEAPF64[(response >> 3) + 0];\n    const data = mod.HEAPF64[(response >> 3) + 1];\n    const dataSize = mod.HEAPF64[(response >> 3) + 2];\n\n    // Restore the stack\n    mod.stackRestore(stackPointer);\n    return [status, data, dataSize];\n}\n\n/** Drop response buffers */\nexport function dropResponseBuffers(mod: DuckDBModule): void {\n    mod.ccall('duckdb_web_clear_response', null, [], []);\n}\n\n/** The duckdb runtime */\nexport interface DuckDBRuntime {\n    _files?: Map<string, any>;\n    _udfFunctions: Map<number, UDFFunction>;\n\n    // Test a platform feature\n    testPlatformFeature(mod: DuckDBModule, feature: number): boolean;\n\n    // File APIs with dedicated file identifier\n    openFile(mod: DuckDBModule, fileId: number, flags: FileFlags): void;\n    syncFile(mod: DuckDBModule, fileId: number): void;\n    closeFile(mod: DuckDBModule, fileId: number): void;\n    getLastFileModificationTime(mod: DuckDBModule, fileId: number): number;\n    truncateFile(mod: DuckDBModule, fileId: number, newSize: number): void;\n    readFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\n    writeFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\n\n    // File APIs with path parameter\n    removeDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    checkDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    createDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    listDirectoryEntries(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    glob(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    moveFile(mod: DuckDBModule, fromPtr: number, fromLen: number, toPtr: number, toLen: number): void;\n    checkFile(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    removeFile(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n\n    // Call a scalar UDF function\n    callScalarUDF(mod: DuckDBModule, response: number, funcId: number, descPtr: number, descSize: number, ptrsPtr: number, ptrsSize: number): void;\n}\n\nexport const DEFAULT_RUNTIME: DuckDBRuntime = {\n    _udfFunctions: new Map(),\n\n    testPlatformFeature: (_mod: DuckDBModule, _feature: number): boolean => false,\n    openFile: (_mod: DuckDBModule, _fileId: number, flags: FileFlags): void => {},\n    syncFile: (_mod: DuckDBModule, _fileId: number): void => {},\n    closeFile: (_mod: DuckDBModule, _fileId: number): void => {},\n    getLastFileModificationTime: (_mod: DuckDBModule, _fileId: number): number => {\n        return 0;\n    },\n    truncateFile: (_mod: DuckDBModule, _fileId: number, _newSize: number): void => {},\n    readFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\n        return 0;\n    },\n    writeFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\n        return 0;\n    },\n\n    removeDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    checkDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    createDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    listDirectoryEntries: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    glob: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    moveFile: (_mod: DuckDBModule, _fromPtr: number, _fromLen: number, _toPtr: number, _toLen: number): void => {},\n    checkFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    callScalarUDF: (\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void => {\n        udf_rt.callScalarUDF(DEFAULT_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\n    },\n};\n", "export interface FileBlockStatistics {\n    /** The file reads cold */\n    file_reads_cold: number;\n    /** The file reads aheads */\n    file_reads_ahead: number;\n    /** The file reads cached */\n    file_reads_cached: number;\n    /** The file writes */\n    file_writes: number;\n    /** The page accesses */\n    page_accesses: number;\n    /** The page loads */\n    page_loads: number;\n}\n\n/** The file block statistics */\nexport class FileStatistics {\n    /** The cold file reads */\n    public totalFileReadsCold: number;\n    /** The file readaheads */\n    public totalFileReadsAhead: number;\n    /** The cached file reads */\n    public totalFileReadsCached: number;\n    /** The file writes */\n    public totalFileWrites: number;\n    /** The page accesses */\n    public totalPageAccesses: number;\n    /** The page loads */\n    public totalPageLoads: number;\n    /** The blocks */\n    public blockSize: number;\n    /** The blocks */\n    public blockStats: Uint8Array;\n\n    constructor(u8array: Uint8Array) {\n        const f64 = new Float64Array(u8array.buffer, u8array.byteOffset, u8array.byteLength / 8);\n        const blocks = new Uint8Array(new ArrayBuffer(u8array.byteLength));\n        blocks.set(u8array.subarray(7 * 8));\n        this.totalFileReadsCold = f64[0];\n        this.totalFileReadsAhead = f64[1];\n        this.totalFileReadsCached = f64[2];\n        this.totalFileWrites = f64[3];\n        this.totalPageAccesses = f64[4];\n        this.totalPageLoads = f64[5];\n        this.blockSize = f64[6];\n        this.blockStats = blocks;\n    }\n\n    /** The block stats */\n    public getBlockStats(index: number, out?: FileBlockStatistics): FileBlockStatistics {\n        out = out || {\n            file_reads_cold: 0,\n            file_reads_ahead: 0,\n            file_reads_cached: 0,\n            file_writes: 0,\n            page_accesses: 0,\n            page_loads: 0,\n        };\n        out.file_writes = this.blockStats[index * 3 + 0] & 0b1111;\n        out.file_reads_cold = this.blockStats[index * 3 + 0] >> 4;\n        out.file_reads_ahead = this.blockStats[index * 3 + 1] & 0b1111;\n        out.file_reads_cached = this.blockStats[index * 3 + 1] >> 4;\n        out.page_accesses = this.blockStats[index * 3 + 1] & 0b1111;\n        out.page_loads = this.blockStats[index * 3 + 1] >> 4;\n        return out;\n    }\n}\n", "import * as arrow from 'apache-arrow';\n\nexport interface SQLType {\n    /// The sql type\n    sqlType: string;\n    /// Is nullable?\n    nullable?: boolean;\n    /// Decimal precision\n    precision?: number;\n    /// Decimal scaling\n    scale?: number;\n    /// Timezone\n    timezone?: string;\n    /// Byte width (FixedSizeBinary)\n    byteWidth?: number;\n    /// Key type\n    keyType?: SQLType;\n    /// Value type\n    valueType?: SQLType;\n    /// Fields\n    fields?: SQLField[];\n}\n\nexport function arrowToSQLType(type: arrow.DataType): SQLType {\n    switch (type.typeId) {\n        case arrow.Type.Binary:\n            return { sqlType: 'binary' };\n        case arrow.Type.Bool:\n            return { sqlType: 'bool' };\n        case arrow.Type.Date:\n            return { sqlType: 'date' };\n        case arrow.Type.DateDay:\n            return { sqlType: 'date32[d]' };\n        case arrow.Type.DateMillisecond:\n            return { sqlType: 'date64[ms]' };\n        case arrow.Type.Decimal: {\n            const dec = type as arrow.Decimal;\n            return { sqlType: 'decimal', precision: dec.precision, scale: dec.scale };\n        }\n        case arrow.Type.Float:\n            return { sqlType: 'float' };\n        case arrow.Type.Float16:\n            return { sqlType: 'float16' };\n        case arrow.Type.Float32:\n            return { sqlType: 'float32' };\n        case arrow.Type.Float64:\n            return { sqlType: 'float64' };\n        case arrow.Type.Int:\n            return { sqlType: 'int32' };\n        case arrow.Type.Int16:\n            return { sqlType: 'int16' };\n        case arrow.Type.Int32:\n            return { sqlType: 'int32' };\n        case arrow.Type.Int64:\n            return { sqlType: 'int64' };\n        case arrow.Type.Uint16:\n            return { sqlType: 'uint16' };\n        case arrow.Type.Uint32:\n            return { sqlType: 'uint32' };\n        case arrow.Type.Uint64:\n            return { sqlType: 'uint64' };\n        case arrow.Type.Uint8:\n            return { sqlType: 'uint8' };\n        case arrow.Type.IntervalDayTime:\n            return { sqlType: 'interval[dt]' };\n        case arrow.Type.IntervalYearMonth:\n            return { sqlType: 'interval[m]' };\n        case arrow.Type.List: {\n            const list = type as arrow.List;\n            return {\n                sqlType: 'list',\n                valueType: arrowToSQLType(list.valueType),\n            };\n        }\n        case arrow.Type.FixedSizeBinary: {\n            const bin = type as arrow.FixedSizeBinary;\n            return { sqlType: 'fixedsizebinary', byteWidth: bin.byteWidth };\n        }\n        case arrow.Type.Null:\n            return { sqlType: 'null' };\n        case arrow.Type.Utf8:\n            return { sqlType: 'utf8' };\n        case arrow.Type.Struct: {\n            const struct_ = type as arrow.Struct;\n            return {\n                sqlType: 'struct',\n                fields: struct_.children.map(c => arrowToSQLField(c.name, c.type)),\n            };\n        }\n        case arrow.Type.Map: {\n            const map_ = type as arrow.Map_;\n            return {\n                sqlType: 'map',\n                keyType: arrowToSQLType(map_.keyType),\n                valueType: arrowToSQLType(map_.valueType),\n            };\n        }\n        case arrow.Type.Time:\n            return { sqlType: 'time[s]' };\n        case arrow.Type.TimeMicrosecond:\n            return { sqlType: 'time[us]' };\n        case arrow.Type.TimeMillisecond:\n            return { sqlType: 'time[ms]' };\n        case arrow.Type.TimeNanosecond:\n            return { sqlType: 'time[ns]' };\n        case arrow.Type.TimeSecond:\n            return { sqlType: 'time[s]' };\n        case arrow.Type.Timestamp: {\n            const ts = type as arrow.Timestamp;\n            return { sqlType: 'timestamp', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampSecond: {\n            const ts = type as arrow.TimestampSecond;\n            return { sqlType: 'timestamp[s]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampMicrosecond: {\n            const ts = type as arrow.TimestampMicrosecond;\n            return { sqlType: 'timestamp[us]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampNanosecond: {\n            const ts = type as arrow.TimestampNanosecond;\n            return { sqlType: 'timestamp[ns]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampMillisecond: {\n            const ts = type as arrow.TimestampMillisecond;\n            return { sqlType: 'timestamp[ms]', timezone: ts.timezone || undefined };\n        }\n    }\n    throw new Error(`unsupported arrow type: ${type.toString()}`);\n}\n\nexport type SQLField = SQLType & { name: string };\n\nexport function arrowToSQLField(name: string, type: arrow.DataType): SQLField {\n    const t = arrowToSQLType(type) as SQLField;\n    t.name = name;\n    return t;\n}\n", "import { DuckDBModule, PThread } from './duckdb_module';\nimport { DuckDBConfig } from './config';\nimport { Logger } from '../log';\nimport { InstantiationProgress } from './progress';\nimport { DuckDBBindings } from './bindings_interface';\nimport { DuckDBConnection } from './connection';\nimport { StatusCode } from '../status';\nimport { dropResponseBuffers, DuckDBRuntime, readString, callSRet, copyBuffer } from './runtime';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\nimport { ScriptTokens } from './tokens';\nimport { FileStatistics } from './file_stats';\nimport { arrowToSQLField, arrowToSQLType } from '../json_typedef';\nimport { WebFile } from './web_file';\nimport { UDFFunction, UDFFunctionDeclaration } from './udf_function';\nimport * as arrow from 'apache-arrow';\n\nconst TEXT_ENCODER = new TextEncoder();\n\ndeclare global {\n    // eslint-disable-next-line no-var\n    var DUCKDB_RUNTIME: any;\n}\n\n/** A DuckDB Feature */\nexport enum DuckDBFeature {\n    WASM_EXCEPTIONS = 1 << 0,\n    WASM_THREADS = 1 << 1,\n    WASM_SIMD = 1 << 2,\n    WASM_BULK_MEMORY = 1 << 3,\n    EMIT_BIGINT = 1 << 4,\n}\n\n/** The proxy for either the browser- order node-based DuckDB API */\nexport abstract class DuckDBBindingsBase implements DuckDBBindings {\n    /** The logger */\n    protected readonly _logger: Logger;\n    /** Backend-dependent native-glue code for DuckDB */\n    protected readonly _runtime: DuckDBRuntime;\n    /** The instance */\n    protected _instance: DuckDBModule | null = null;\n    /** The loading promise */\n    protected _initPromise: Promise<void> | null = null;\n    /** The resolver for the open promise (called by onRuntimeInitialized) */\n    protected _initPromiseResolver: () => void = () => {};\n    /** The next UDF id */\n    protected _nextUDFId: number;\n\n    constructor(logger: Logger, runtime: DuckDBRuntime) {\n        this._logger = logger;\n        this._runtime = runtime;\n        this._nextUDFId = 1;\n    }\n\n    /** Get the logger */\n    public get logger(): Logger {\n        return this._logger;\n    }\n    /** Get the instance */\n    public get mod(): DuckDBModule {\n        return this._instance!;\n    }\n    /** Get the instance */\n    public get pthread(): PThread | null {\n        return this.mod.PThread || null;\n    }\n\n    /** Instantiate the module */\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\n    /** Instantiate the module */\n    protected onInstantiationProgress: ((p: InstantiationProgress) => void)[] = [];\n    /** Instantiate the database */\n    public async instantiate(onProgress: (progress: InstantiationProgress) => void = _ => {}): Promise<this> {\n        // Already opened?\n        if (this._instance != null) {\n            return this;\n        }\n        // Open in progress?\n        if (this._initPromise != null) {\n            this.onInstantiationProgress.push(onProgress);\n            await this._initPromise;\n        }\n        // Create a promise that we can await\n        this._initPromise = new Promise(resolve => {\n            this._initPromiseResolver = resolve;\n        });\n        // Register progress handler\n        this.onInstantiationProgress = [onProgress];\n        // Initialize duckdb\n        this._instance = await this.instantiateImpl({\n            print: console.log.bind(console),\n            printErr: console.log.bind(console),\n            onRuntimeInitialized: this._initPromiseResolver,\n        });\n        // Wait for onRuntimeInitialized\n        await this._initPromise;\n        this._initPromise = null;\n        // Remove own progress callback\n        this.onInstantiationProgress = this.onInstantiationProgress.filter(x => x != onProgress);\n        return this;\n    }\n    /** Open a database at a path */\n    public open(config: DuckDBConfig): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_open', ['string'], [JSON.stringify(config)]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Reset the database */\n    public reset(): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_reset', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Get the version */\n    public getVersion(): string {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_version', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const version = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return version;\n    }\n    /** Get the feature flags */\n    public getFeatureFlags(): number {\n        return this.mod.ccall('duckdb_web_get_feature_flags', 'number', [], []);\n    }\n\n    /** Tokenize a script */\n    public tokenize(text: string): ScriptTokens {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_tokenize', ['string'], [text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return JSON.parse(res) as ScriptTokens;\n    }\n\n    /** Connect to database */\n    public connect(): DuckDBConnection {\n        const conn = this.mod.ccall('duckdb_web_connect', 'number', [], []);\n        return new DuckDBConnection(this, conn);\n    }\n    /** Disconnect from database */\n    public disconnect(conn: number): void {\n        this.mod.ccall('duckdb_web_disconnect', null, ['number'], [conn]);\n        if (this.pthread) {\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\n                worker.postMessage({\n                    cmd: 'dropUDFFunctions',\n                    connectionId: conn,\n                });\n            }\n        }\n    }\n\n    /** Send a query and return the full result */\n    public runQuery(conn: number, text: string): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_run', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Send a query asynchronously. Results have to be fetched with `fetchQueryResults` */\n    public sendQuery(conn: number, text: string): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_send', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Fetch query results */\n    public fetchQueryResults(conn: number): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_fetch_results', ['number'], [conn]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Get table names */\n    public getTableNames(conn: number, text: string): string[] {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_tablenames', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return JSON.parse(res) as string[];\n    }\n\n    /** Create a scalar function */\n    public createScalarFunction(\n        conn: number,\n        name: string,\n        returns: arrow.DataType,\n        func: (...args: any[]) => void,\n    ): void {\n        const decl: UDFFunctionDeclaration = {\n            functionId: this._nextUDFId,\n            name: name,\n            returnType: arrowToSQLType(returns),\n        };\n        const def: UDFFunction = {\n            functionId: decl.functionId,\n            connectionId: conn,\n            name: name,\n            returnType: returns,\n            func,\n        };\n        this._nextUDFId += 1;\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_udf_scalar_create',\n            ['number', 'string'],\n            [conn, JSON.stringify(decl)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        globalThis.DUCKDB_RUNTIME._udfFunctions = (globalThis.DUCKDB_RUNTIME._udfFunctions || new Map()).set(\n            def.functionId,\n            def,\n        );\n        if (this.pthread) {\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\n                worker.postMessage({\n                    cmd: 'registerUDFFunction',\n                    udf: def,\n                });\n            }\n        }\n    }\n\n    /** Prepare a statement and return its identifier */\n    public createPrepared(conn: number, text: string): number {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_create', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        return d;\n    }\n\n    /** Close a prepared statement */\n    public closePrepared(conn: number, statement: number): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_close', ['number', 'number'], [conn, statement]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Execute a prepared statement and return the full result */\n    public runPrepared(conn: number, statement: number, params: any[]): Uint8Array {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_prepared_run',\n            ['number', 'number', 'string'],\n            [conn, statement, JSON.stringify(params)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n\n    /** Execute a prepared statement and stream the result */\n    public sendPrepared(conn: number, statement: number, params: any[]): Uint8Array {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_prepared_send',\n            ['number', 'number', 'string'],\n            [conn, statement, JSON.stringify(params)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n\n    /** Insert record batches from an arrow ipc stream */\n    public insertArrowFromIPCStream(conn: number, buffer: Uint8Array, options?: ArrowInsertOptions): void {\n        if (buffer.length == 0) return;\n        // Store buffer\n        const bufferPtr = this.mod._malloc(buffer.length);\n        const bufferOfs = this.mod.HEAPU8.subarray(bufferPtr, bufferPtr + buffer.length);\n        bufferOfs.set(buffer);\n        const optJSON = options ? JSON.stringify(options) : '';\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_arrow_from_ipc_stream',\n            ['number', 'number', 'number', 'string'],\n            [conn, bufferPtr, buffer.length, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n\n    /** Insert csv from path */\n    public insertCSVFromPath(conn: number, path: string, options: CSVInsertOptions): void {\n        // Stringify options\n        if (options.columns !== undefined) {\n            options.columnsFlat = [];\n            for (const k in options.columns) {\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\n            }\n        }\n        const opt = { ...options } as any;\n        opt.columns = opt.columnsFlat;\n        delete opt.columnsFlat;\n        const optJSON = JSON.stringify(opt);\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_csv_from_path',\n            ['number', 'string', 'string'],\n            [conn, path, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Insert json from path */\n    public insertJSONFromPath(conn: number, path: string, options: JSONInsertOptions): void {\n        // Stringify options\n        if (options.columns !== undefined) {\n            options.columnsFlat = [];\n            for (const k in options.columns) {\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\n            }\n        }\n        const opt = { ...options } as any;\n        opt.columns = opt.columnsFlat;\n        delete opt.columnsFlat;\n        const optJSON = JSON.stringify(opt);\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_json_from_path',\n            ['number', 'string', 'string'],\n            [conn, path, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Glob file infos */\n    public globFiles(path: string): WebFile[] {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_glob_file_infos', ['string'], [path]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const infoStr = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        const info = JSON.parse(infoStr) as WebFile[];\n        if (info == null) {\n            return [];\n        }\n        return info;\n    }\n    /** Register a file object URL */\n    public registerFileURL(name: string, url?: string): void {\n        if (url === undefined) {\n            url = name;\n        }\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_url',\n            ['string', 'string', 'number'],\n            [name, url, -1],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Register file text */\n    public registerFileText(name: string, text: string): void {\n        const buffer = TEXT_ENCODER.encode(text);\n        this.registerFileBuffer(name, buffer);\n    }\n    /** Register a file buffer */\n    public registerFileBuffer(name: string, buffer: Uint8Array): void {\n        const ptr = this.mod._malloc(buffer.length);\n        const dst = this.mod.HEAPU8.subarray(ptr, ptr + buffer.length);\n        dst.set(buffer);\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_buffer',\n            ['string', 'number', 'number'],\n            [name, ptr, buffer.length],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Register a file object URL */\n    public registerFileHandle<HandleType>(name: string, handle: HandleType): void {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_url',\n            ['string', 'string', 'number'],\n            [name, name, -1],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        globalThis.DUCKDB_RUNTIME._files = (globalThis.DUCKDB_RUNTIME._files || new Map()).set(name, handle);\n        if (this.pthread) {\n            for (const worker of this.pthread.runningWorkers) {\n                worker.postMessage({\n                    cmd: 'registerFileHandle',\n                    fileName: name,\n                    fileHandle: handle,\n                });\n            }\n            for (const worker of this.pthread.unusedWorkers) {\n                worker.postMessage({\n                    cmd: 'dropFileHandle',\n                    fileName: name,\n                });\n            }\n        }\n    }\n    /** Drop file */\n    public dropFile(name: string): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_file', ['string'], [name]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Drop files */\n    public dropFiles(): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_files', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Flush all files */\n    public flushFiles(): void {\n        this.mod.ccall('duckdb_web_flush_files', null, [], []);\n    }\n    /** Write a file to a path */\n    public copyFileToPath(name: string, path: string): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_path', ['string', 'string'], [name, path]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Write a file to a buffer */\n    public copyFileToBuffer(name: string): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_buffer', ['string'], [name]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const buffer = this.mod.HEAPU8.subarray(d, d + n);\n        const copy = new Uint8Array(buffer.length);\n        copy.set(buffer);\n        dropResponseBuffers(this.mod);\n        return copy;\n    }\n\n    /** Enable tracking of file statistics */\n    public collectFileStatistics(file: string, enable: boolean): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_collect_file_stats', ['string', 'boolean'], [file, enable]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Export file statistics */\n    public exportFileStatistics(file: string): FileStatistics {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_export_file_stats', ['string'], [file]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        return new FileStatistics(this.mod.HEAPU8.subarray(d, d + n));\n    }\n}\n", "export enum LogLevel {\n    NONE = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARNING = 3,\n    ERROR = 4,\n}\n\nexport enum LogTopic {\n    NONE = 0,\n    CONNECT = 1,\n    DISCONNECT = 2,\n    OPEN = 3,\n    QUERY = 4,\n    INSTANTIATE = 5,\n}\n\nexport enum LogEvent {\n    NONE = 0,\n    OK = 1,\n    ERROR = 2,\n    START = 3,\n    RUN = 4,\n    CAPTURE = 5,\n}\n\nexport enum LogOrigin {\n    NONE = 0,\n    WEB_WORKER = 1,\n    NODE_WORKER = 2,\n    BINDINGS = 3,\n    ASYNC_DUCKDB = 4,\n}\n\nexport type LogEntry<O, T, E, V> = {\n    readonly timestamp: Date;\n    readonly level: LogLevel;\n    readonly origin: O;\n    readonly topic: T;\n    readonly event: E;\n    readonly value: V;\n};\n\nexport type LogEntryVariant =\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.INSTANTIATE, LogEvent.ERROR, string>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.START, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.START, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.ASYNC_DUCKDB, LogTopic.QUERY, LogEvent.RUN, string>;\n\nexport interface Logger {\n    log(entry: LogEntryVariant): void;\n}\n\nexport class VoidLogger implements Logger {\n    public log(_entry: LogEntryVariant): void {}\n}\n\nexport class ConsoleLogger implements Logger {\n    constructor(protected level: LogLevel = LogLevel.INFO) {}\n    public log(entry: LogEntryVariant): void {\n        if (entry.level >= this.level) {\n            console.log(entry);\n        }\n    }\n}\n\nexport function getLogLevelLabel(level: LogLevel): string {\n    switch (level) {\n        case LogLevel.NONE:\n            return 'NONE';\n        case LogLevel.DEBUG:\n            return 'DEBUG';\n        case LogLevel.INFO:\n            return 'INFO';\n        case LogLevel.WARNING:\n            return 'WARNING';\n        case LogLevel.ERROR:\n            return 'ERROR';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogEventLabel(event: LogEvent): string {\n    switch (event) {\n        case LogEvent.NONE:\n            return 'NONE';\n        case LogEvent.OK:\n            return 'OK';\n        case LogEvent.ERROR:\n            return 'ERROR';\n        case LogEvent.START:\n            return 'START';\n        case LogEvent.RUN:\n            return 'RUN';\n        case LogEvent.CAPTURE:\n            return 'CAPTURE';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogTopicLabel(topic: LogTopic): string {\n    switch (topic) {\n        case LogTopic.CONNECT:\n            return 'CONNECT';\n        case LogTopic.DISCONNECT:\n            return 'DISCONNECT';\n        case LogTopic.INSTANTIATE:\n            return 'INSTANTIATE';\n        case LogTopic.OPEN:\n            return 'OPEN';\n        case LogTopic.QUERY:\n            return 'QUERY';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogOriginLabel(origin: LogOrigin): string {\n    switch (origin) {\n        case LogOrigin.NONE:\n            return 'NONE';\n        case LogOrigin.WEB_WORKER:\n            return 'WEB WORKER';\n        case LogOrigin.NODE_WORKER:\n            return 'NODE WORKER';\n        case LogOrigin.BINDINGS:\n            return 'DUCKDB BINDINGS';\n        case LogOrigin.ASYNC_DUCKDB:\n            return 'DUCKDB';\n        default:\n            return '?';\n    }\n}\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n", "import * as check from 'wasm-feature-detect';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\n// Platform check taken from here:\n// https://github.com/xtermjs/xterm.js/blob/master/src/common/Platform.ts#L21\n\ninterface INavigator {\n    userAgent: string;\n    language: string;\n    platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = () => (typeof navigator === 'undefined' ? true : false);\nconst userAgent = () => (isNode() ? 'node' : navigator.userAgent);\nexport const isFirefox = () => userAgent().includes('Firefox');\nexport const isSafari = () => /^((?!chrome|android).)*safari/i.test(userAgent());\n\nexport interface DuckDBBundles {\n    mvp: {\n        mainModule: string;\n        mainWorker: string;\n    };\n    eh?: {\n        mainModule: string;\n        mainWorker: string;\n    };\n    coi?: {\n        mainModule: string;\n        mainWorker: string;\n        pthreadWorker: string;\n    };\n}\n\nexport function getJsDelivrBundles(): DuckDBBundles {\n    const jsdelivr_dist_url = `https://cdn.jsdelivr.net/npm/${PACKAGE_NAME}@${PACKAGE_VERSION}/dist/`;\n    return {\n        mvp: {\n            mainModule: `${jsdelivr_dist_url}duckdb-mvp.wasm`,\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-mvp.worker.js`,\n        },\n        eh: {\n            mainModule: `${jsdelivr_dist_url}duckdb-eh.wasm`,\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-eh.worker.js`,\n        },\n        // COI is still experimental, let the user opt in explicitly\n    };\n}\n\nexport interface DuckDBBundle {\n    mainModule: string;\n    mainWorker: string | null;\n    pthreadWorker: string | null;\n}\n\nexport interface PlatformFeatures {\n    bigInt64Array: boolean;\n    crossOriginIsolated: boolean;\n    wasmExceptions: boolean;\n    wasmSIMD: boolean;\n    wasmBulkMemory: boolean;\n    wasmThreads: boolean;\n}\n\nlet bigInt64Array: boolean | null = null;\nlet wasmExceptions: boolean | null = null;\nlet wasmThreads: boolean | null = null;\nlet wasmSIMD: boolean | null = null;\nlet wasmBulkMemory: boolean | null = null;\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n    let crossOriginIsolated: boolean;\n}\n\nexport async function getPlatformFeatures(): Promise<PlatformFeatures> {\n    if (bigInt64Array == null) {\n        bigInt64Array = typeof BigInt64Array != 'undefined';\n    }\n    if (wasmExceptions == null) {\n        wasmExceptions = await check.exceptions();\n    }\n    if (wasmThreads == null) {\n        wasmThreads = await check.threads();\n    }\n    if (wasmSIMD == null) {\n        wasmSIMD = await check.simd();\n    }\n    if (wasmBulkMemory == null) {\n        wasmBulkMemory = await check.bulkMemory();\n    }\n    return {\n        bigInt64Array: bigInt64Array!,\n        crossOriginIsolated: isNode() || globalThis.crossOriginIsolated || false,\n        wasmExceptions: wasmExceptions!,\n        wasmSIMD: wasmSIMD!,\n        wasmThreads: wasmThreads!,\n        wasmBulkMemory: wasmBulkMemory!,\n    };\n}\n\nexport async function selectBundle(bundles: DuckDBBundles): Promise<DuckDBBundle> {\n    const platform = await getPlatformFeatures();\n    // TODO(ankoh):\n    // Safari WASM exceptions are a bit buggy at the moment.\n    // Pivot demo crashes only in safari with eh: Unexpected \"RangeError: Maximum call stack size exceeded.\"\n    if (platform.wasmExceptions && !isSafari()) {\n        if (platform.wasmSIMD && platform.wasmThreads && platform.crossOriginIsolated && bundles.coi) {\n            return {\n                mainModule: bundles.coi.mainModule,\n                mainWorker: bundles.coi.mainWorker,\n                pthreadWorker: bundles.coi.pthreadWorker,\n            };\n        }\n        if (bundles.eh) {\n            return {\n                mainModule: bundles.eh.mainModule,\n                mainWorker: bundles.eh.mainWorker,\n                pthreadWorker: null,\n            };\n        }\n    }\n    return {\n        mainModule: bundles.mvp.mainModule,\n        mainWorker: bundles.mvp.mainWorker,\n        pthreadWorker: null,\n    };\n}\n", "import {S3Config} from \"../bindings\";\nimport {sha256} from \"js-sha256\";\n\nexport interface S3Params {\n    url: string,\n    query: string,\n    host: string,\n    region: string,\n    service: string,\n    method: string,\n    accessKeyId: string,\n    secretAccessKey: string,\n    sessionToken: string,\n    dateNow: string,\n    datetimeNow: string\n}\n\nexport interface S3PayloadParams {\n    contentHash: string | null,\n    contentType: string | null\n}\n\nconst getHTTPHost = function (config : S3Config | undefined, url : string, bucket : string) : string {\n    if (config?.endpoint?.startsWith(\"http\")) {\n        // Endpoint is a full url, we append the bucket\n        const httpHost = `${config?.endpoint}`;\n        const offset = httpHost.indexOf(\"://\")+3;\n        return httpHost.substring(offset);\n    } else if (config?.endpoint) {\n        // Endpoint is not a full url and the https://{bucket}.{domain} format will be used\n        return `${bucket}.${config?.endpoint}`;\n    } else {\n        // Default aws s3 url\n        return `${bucket}.s3.amazonaws.com`;\n    }\n}\n\nexport function getS3Params (config : S3Config | undefined, url: string, method : string) : S3Params {\n    const parsedS3Url = parseS3Url(url);\n    return {\n        url: parsedS3Url.path,\n        query: \"\",\n        host: getHTTPHost(config, url, parsedS3Url.bucket),\n        region: (config?.region) ?? \"\",\n        service: \"s3\",\n        method: method,\n        accessKeyId: (config?.accessKeyId) ?? \"\",\n        secretAccessKey: (config?.secretAccessKey) ?? \"\",\n        sessionToken: (config?.sessionToken) ?? \"\",\n        dateNow: new Date().toISOString().replace(/-/g,'').split('T')[0],\n        datetimeNow: new Date().toISOString().replace(/-/g,'').replace(/:/g,'').split('.')[0]+ 'Z',\n    };\n}\n\nexport function uriEncode(input : string, encode_slash = false) {\n    // https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\n\n    const hexDigit = \"0123456789ABCDEF\";\n    let result = \"\";\n\n    for (let i = 0; i < input.length; i++) {\n        const ch : string = input[i];\n\n        if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9') || ch == '_' ||\n            ch == '-' || ch == '~' || ch == '.') {\n            result += ch;\n        } else if (ch == '/') {\n            if (encode_slash) {\n                result += \"%2F\";\n            } else {\n                result += ch;\n            }\n        } else {\n            result += \"%\";\n            result += hexDigit[ch.charCodeAt(0) >> 4];\n            result += hexDigit[ch.charCodeAt(0) & 15];\n        }\n    }\n    return result;\n}\n\nexport function createS3Headers(params: S3Params, payloadParams : S3PayloadParams | null = null) : Map<string, string> {\n    // this is the sha256 of the empty string, its useful since we have no payload for GET requests\n    const payloadHash = (payloadParams?.contentHash) ?? \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n\n    const res = new Map<string, string>();\n    // res.set(\"host\", params.host)\n    res.set(\"x-amz-date\", params.datetimeNow);\n    res.set(\"x-amz-content-sha256\", payloadHash);\n\n    if (params.sessionToken) {\n        res.set(\"x-amz-security-token\", params.sessionToken);\n    }\n\n    // construct string to sign\n    let signedHeaders = \"\";\n    if (payloadParams?.contentType) {\n        signedHeaders += \"content-type;\";\n    }\n    signedHeaders += \"host;x-amz-content-sha256;x-amz-date\";\n    if (params.sessionToken) {\n        signedHeaders += \";x-amz-security-token\";\n    }\n\n    let canonicalRequest = params.method + \"\\n\" + uriEncode(params.url) + \"\\n\" + params.query;\n    if (payloadParams?.contentType) {\n        canonicalRequest += \"\\ncontent-type:\" + payloadParams?.contentType;\n    }\n    canonicalRequest += \"\\nhost:\" + params.host +\n        \"\\nx-amz-content-sha256:\" + payloadHash + \"\\nx-amz-date:\" + params.datetimeNow;\n    if (params.sessionToken && params.sessionToken.length > 0) {\n        canonicalRequest += \"\\nx-amz-security-token:\" + params.sessionToken;\n    }\n\n    canonicalRequest += \"\\n\\n\" + signedHeaders + \"\\n\" + payloadHash;\n    const canonicalRequestHashStr = sha256(canonicalRequest);\n\n    const stringToSign = \"AWS4-HMAC-SHA256\\n\" + params.datetimeNow + \"\\n\" + params.dateNow + \"/\" + params.region + \"/\" + params.service +\n        \"/aws4_request\\n\" + canonicalRequestHashStr;\n\n    // ts-ignore's because library can accept array buffer as key, but TS arg is incorrect\n    const signKey = \"AWS4\" + params.secretAccessKey;\n    const kDate = sha256.hmac.arrayBuffer(signKey, params.dateNow);\n\n    // Note, js-sha256 has a bug in the TS interface that only supports strings as keys, while we need a bytearray\n    // as key. PR is open but unmerged: https://github.com/emn178/js-sha256/pull/25\n    // eslint-disable-next-line\n    // @ts-ignore\n    const kRegion = sha256.hmac.arrayBuffer(kDate, params.region);\n    // eslint-disable-next-line\n    // @ts-ignore\n    const kService = sha256.hmac.arrayBuffer(kRegion, params.service,);\n    // eslint-disable-next-line\n    // @ts-ignore\n    const signingKey = sha256.hmac.arrayBuffer(kService, \"aws4_request\");\n    // eslint-disable-next-line\n    // @ts-ignore\n    const signature = sha256.hmac(signingKey, stringToSign);\n\n    res.set(\"Authorization\", \"AWS4-HMAC-SHA256 Credential=\" + params.accessKeyId + \"/\" + params.dateNow + \"/\" + params.region + \"/\" +\n        params.service + \"/aws4_request, SignedHeaders=\" + signedHeaders +\n        \", Signature=\" + signature);\n\n    return res;\n}\n\nconst createS3HeadersFromS3Config = function (config : S3Config | undefined, url : string, method : string, contentType: string | null = null, payload : Uint8Array | null = null) : Map<string, string> {\n    const params = getS3Params(config, url, method);\n    const payloadParams = {\n        contentType: contentType,\n        contentHash: payload ? sha256.hex(payload!) : null\n    } as S3PayloadParams;\n    return createS3Headers(params, payloadParams);\n}\n\nexport function addS3Headers(xhr: XMLHttpRequest, config : S3Config | undefined, url : string, method: string, contentType: string | null = null, payload : Uint8Array | null = null) {\n    if (config?.accessKeyId || config?.sessionToken) {\n        const headers = createS3HeadersFromS3Config(config, url, method, contentType, payload);\n        headers.forEach((value: string, header: string) => {\n            xhr.setRequestHeader(header, value);\n        });\n\n        if (contentType) {\n            xhr.setRequestHeader(\"content-type\", contentType);\n        }\n    }\n}\n\nexport function parseS3Url (url: string) : {bucket : string, path : string} {\n    if (url.indexOf(\"s3://\") != 0) {\n        throw new Error(\"URL needs to start with s3://\");\n    }\n    const slashPos = url.indexOf('/', 5);\n\n    if (slashPos == -1) {\n        throw new Error(\"URL needs to contain a '/' after the host\");\n    }\n\n    const bucket = url.substring(5, slashPos);\n    if (!bucket) {\n        throw new Error(\"URL needs to contain a bucket name\");\n    }\n    const path = url.substring(slashPos);\n    if (!path) {\n        throw new Error(\"URL needs to contain key\");\n    }\n\n    return {bucket: bucket, path: path}\n}\n\nexport function getHTTPUrl(config : S3Config | undefined, url : string) : string {\n    const parsedUrl = parseS3Url(url);\n    if (config?.endpoint?.startsWith(\"http\")) {\n        // Endpoint is a full url, we append the bucket\n        return `${config?.endpoint}/${parsedUrl.bucket}` + parsedUrl.path;\n    } else {\n        return 'https://' + getHTTPHost(config, url, parsedUrl.bucket) + parsedUrl.path;\n    }\n}", "import { StatusCode } from '../status';\nimport { addS3Headers, getHTTPUrl } from '../utils';\n\nimport {\n    callSRet,\n    dropResponseBuffers,\n    DuckDBDataProtocol,\n    DuckDBFileInfo,\n    DuckDBGlobalFileInfo,\n    DuckDBRuntime,\n    failWith,\n    FileFlags,\n    readString,\n} from './runtime';\nimport { DuckDBModule } from './duckdb_module';\nimport * as udf from './udf_runtime';\n\nexport const BROWSER_RUNTIME: DuckDBRuntime & {\n    _fileInfoCache: Map<number, DuckDBFileInfo>;\n    _globalFileInfo: DuckDBGlobalFileInfo | null;\n\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null;\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null;\n} = {\n    _files: new Map<string, any>(),\n    _fileInfoCache: new Map<number, DuckDBFileInfo>(),\n    _udfFunctions: new Map(),\n    _globalFileInfo: null,\n\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null {\n        try {\n            const cached = BROWSER_RUNTIME._fileInfoCache.get(fileId);\n            const [s, d, n] = callSRet(\n                mod,\n                'duckdb_web_fs_get_file_info_by_id',\n                ['number', 'number'],\n                [fileId, cached?.cacheEpoch || 0],\n            );\n            if (s !== StatusCode.SUCCESS) {\n                return null;\n            } else if (n === 0) {\n                // Epoch is up to date\n                return cached!;\n            }\n            const infoStr = readString(mod, d, n);\n            dropResponseBuffers(mod);\n            const info = JSON.parse(infoStr);\n            if (info == null) {\n                return null;\n            }\n            const file = { ...info, blob: null } as DuckDBFileInfo;\n            BROWSER_RUNTIME._fileInfoCache.set(fileId, file);\n            return file;\n        } catch (e: any) {\n            return null;\n        }\n    },\n\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null {\n        try {\n            const [s, d, n] = callSRet(\n                mod,\n                'duckdb_web_get_global_file_info',\n                ['number'],\n                [BROWSER_RUNTIME._globalFileInfo?.cacheEpoch || 0],\n            );\n            if (s !== StatusCode.SUCCESS) {\n                return null;\n            } else if (n === 0) {\n                // Epoch is up to date\n                return BROWSER_RUNTIME._globalFileInfo!;\n            }\n            const infoStr = readString(mod, d, n);\n            dropResponseBuffers(mod);\n            const info = JSON.parse(infoStr);\n            if (info == null) {\n                return null;\n            }\n            BROWSER_RUNTIME._globalFileInfo = { ...info, blob: null } as DuckDBGlobalFileInfo;\n\n            return BROWSER_RUNTIME._globalFileInfo;\n        } catch (e: any) {\n            return null;\n        }\n    },\n\n    testPlatformFeature: (_mod: DuckDBModule, feature: number): boolean => {\n        switch (feature) {\n            case 1:\n                return typeof BigInt64Array !== 'undefined';\n            default:\n                console.warn(`test for unknown feature: ${feature}`);\n                return false;\n        }\n    },\n\n    openFile: (mod: DuckDBModule, fileId: number, flags: FileFlags): number => {\n        try {\n            BROWSER_RUNTIME._fileInfoCache.delete(fileId);\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n            switch (file?.dataProtocol) {\n                case DuckDBDataProtocol.HTTP:\n                case DuckDBDataProtocol.S3: {\n                    if (flags & FileFlags.FILE_FLAGS_READ && flags & FileFlags.FILE_FLAGS_WRITE) {\n                        throw new Error(\n                            `Opening file ${file.fileName} failed: cannot open file with both read and write flags set`,\n                        );\n                    } else if (flags & FileFlags.FILE_FLAGS_APPEND) {\n                        throw new Error(\n                            `Opening file ${file.fileName} failed: appending to HTTP/S3 files is not supported`,\n                        );\n                    } else if (flags & FileFlags.FILE_FLAGS_WRITE) {\n                        // We send a HEAD request to try to determine if we can write to data_url\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\n                        } else {\n                            xhr.open('HEAD', file.dataUrl!, false);\n                        }\n                        xhr.send(null);\n\n                        // Expect 200 for existing files that we will overwrite or 404 for non-existent files can be created\n                        if (xhr.status != 200 && xhr.status != 404) {\n                            throw new Error(\n                                `Opening file ${file.fileName} failed: Unexpected return status from server (${xhr.status})`,\n                            );\n                        } else if (\n                            xhr.status == 404 &&\n                            !(flags & FileFlags.FILE_FLAGS_FILE_CREATE || flags & FileFlags.FILE_FLAGS_FILE_CREATE_NEW)\n                        ) {\n                            throw new Error(\n                                `Opening file ${file.fileName} failed: Cannot write to non-existent file without FILE_FLAGS_FILE_CREATE or FILE_FLAGS_FILE_CREATE_NEW flag.`,\n                            );\n                        }\n                        // Return an empty buffer that can be used to buffer the writes to this s3/http file\n                        const data = mod._malloc(1);\n                        const src = new Uint8Array();\n                        mod.HEAPU8.set(src, data);\n                        const result = mod._malloc(2 * 8);\n                        mod.HEAPF64[(result >> 3) + 0] = 1;\n                        mod.HEAPF64[(result >> 3) + 1] = data;\n                        return result;\n                    } else if (flags != FileFlags.FILE_FLAGS_READ) {\n                        throw new Error(`Opening file ${file.fileName} failed: unsupported file flags: ${flags}`);\n                    }\n\n                    // Supports ranges?\n                    let error: any | null = null;\n                    try {\n                        // Send a dummy range request querying the first byte of the file\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\n                        } else {\n                            xhr.open('HEAD', file.dataUrl!, false);\n                        }\n                        xhr.setRequestHeader('Range', `bytes=0-`);\n                        xhr.send(null);\n\n                        // Supports range requests\n                        const contentLength = xhr.getResponseHeader('Content-Length');\n                        if (xhr.status == 206 && contentLength !== null) {\n                            const result = mod._malloc(2 * 8);\n                            mod.HEAPF64[(result >> 3) + 0] = +contentLength;\n                            mod.HEAPF64[(result >> 3) + 1] = 0;\n                            return result;\n                        }\n                    } catch (e: any) {\n                        error = e;\n                        console.warn(`HEAD request with range header failed: ${e}`);\n                    }\n\n                    // Try to fallback to full read?\n                    if (file.allowFullHttpReads) {\n                        console.warn(`falling back to full HTTP read for: ${file.dataUrl}`);\n\n                        // Send non-range request\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('GET', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'GET');\n                        } else {\n                            xhr.open('GET', file.dataUrl!, false);\n                        }\n                        xhr.responseType = 'arraybuffer';\n                        xhr.send(null);\n\n                        // Return buffer\n                        if (xhr.status == 200) {\n                            const data = mod._malloc(xhr.response.byteLength);\n                            const src = new Uint8Array(xhr.response, 0, xhr.response.byteLength);\n                            mod.HEAPU8.set(src, data);\n                            const result = mod._malloc(2 * 8);\n                            mod.HEAPF64[(result >> 3) + 0] = xhr.response.byteLength;\n                            mod.HEAPF64[(result >> 3) + 1] = data;\n                            return result;\n                        }\n                    }\n\n                    // Raise error?\n                    if (error != null) {\n                        throw new Error(`Reading file ${file.fileName} failed with error: ${error}`);\n                    }\n                    return 0;\n                }\n                // Native File\n                case DuckDBDataProtocol.NATIVE: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (handle) {\n                        const result = mod._malloc(2 * 8);\n                        mod.HEAPF64[(result >> 3) + 0] = handle.size;\n                        mod.HEAPF64[(result >> 3) + 1] = 0;\n                        return result;\n                    }\n\n                    // Fall back to empty buffered file in the browser\n                    console.warn(`Buffering missing file: ${file.fileName}`);\n                    const result = mod._malloc(2 * 8);\n                    const buffer = mod._malloc(1); // malloc(0) is allowed to return a nullptr\n                    mod.HEAPF64[(result >> 3) + 0] = 1;\n                    mod.HEAPF64[(result >> 3) + 1] = buffer;\n                    return result;\n                }\n            }\n        } catch (e: any) {\n            // TODO (samansmink): this path causes the WASM code to hang\n            console.error(e.toString());\n            failWith(mod, e.toString());\n        }\n        return 0;\n    },\n    glob: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        try {\n            const path = readString(mod, pathPtr, pathLen);\n            // Starts with http?\n            // Try a HTTP HEAD request\n            if (path.startsWith('http') || path.startsWith('s3://')) {\n                // Send a dummy range request querying the first byte of the file\n                const xhr = new XMLHttpRequest();\n                if (path.startsWith('s3://')) {\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\n                } else {\n                    xhr.open('HEAD', path!, false);\n                }\n                xhr.send(null);\n                if (xhr.status != 200 && xhr.status !== 206) {\n                    failWith(mod, `HEAD request failed: ${path}`);\n                    return;\n                }\n                mod.ccall('duckdb_web_fs_glob_add_path', null, ['string'], [path]);\n            }\n        } catch (e: any) {\n            failWith(mod, e.toString());\n            return 0;\n        }\n    },\n    checkFile: (mod: DuckDBModule, pathPtr: number, pathLen: number): boolean => {\n        try {\n            const path = readString(mod, pathPtr, pathLen);\n            // Starts with http or S3?\n            // Try a HTTP HEAD request\n            if (path.startsWith('http') || path.startsWith('s3://')) {\n                // Send a dummy range request querying the first byte of the file\n                const xhr = new XMLHttpRequest();\n                if (path.startsWith('s3://')) {\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\n                } else {\n                    xhr.open('HEAD', path!, false);\n                }\n\n                xhr.setRequestHeader('Range', `bytes=0-`);\n                xhr.send(null);\n                let supportsRanges = false;\n                if (xhr.status == 206) {\n                    supportsRanges = true;\n                } else if (xhr.status == 200) {\n                    const header = xhr.getResponseHeader('Accept-Ranges');\n                    supportsRanges = header === 'bytes';\n                } else {\n                    return false;\n                }\n                if (!supportsRanges) {\n                    return false;\n                }\n\n                // HTTP file exists and supports range requests\n                return true;\n            }\n        } catch (e: any) {\n            return false;\n        }\n        return false;\n    },\n    syncFile: (_mod: DuckDBModule, _fileId: number) => {},\n    closeFile: (mod: DuckDBModule, fileId: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        BROWSER_RUNTIME._fileInfoCache.delete(fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.HTTP:\n            case DuckDBDataProtocol.S3:\n                break;\n            case DuckDBDataProtocol.NATIVE:\n                // XXX Remove from registry\n                return;\n        }\n    },\n    truncateFile: (mod: DuckDBModule, fileId: number, newSize: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.HTTP:\n                failWith(mod, `Cannot truncate a http file`);\n                return;\n            case DuckDBDataProtocol.S3:\n                failWith(mod, `Cannot truncate an s3 file`);\n                return;\n            case DuckDBDataProtocol.NATIVE:\n                failWith(mod, `truncateFile not implemented`);\n                return;\n        }\n        return 0;\n    },\n    readFile(mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) {\n        try {\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n            switch (file?.dataProtocol) {\n                // File reading from BLOB or HTTP MUST be done with range requests.\n                // We have to check in OPEN if such file supports range requests and upgrade to BUFFER if not.\n                case DuckDBDataProtocol.HTTP:\n                case DuckDBDataProtocol.S3: {\n                    if (!file.dataUrl) {\n                        throw new Error(`Missing data URL for file ${fileId}`);\n                    }\n                    try {\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('GET', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'GET');\n                        } else {\n                            xhr.open('GET', file.dataUrl!, false);\n                        }\n                        xhr.responseType = 'arraybuffer';\n                        xhr.setRequestHeader('Range', `bytes=${location}-${location + bytes - 1}`);\n                        xhr.send(null);\n                        if (\n                            xhr.status == 206 /* Partial content */ ||\n                            (xhr.status == 200 && bytes == xhr.response.byteLength && location == 0)\n                        ) {\n                            const src = new Uint8Array(xhr.response, 0, Math.min(xhr.response.byteLength, bytes));\n                            mod.HEAPU8.set(src, buf);\n                            return src.byteLength;\n                        } else if (xhr.status == 200) {\n                            throw new Error(\n                                `Range request for ${file.dataUrl} did not return a partial response: ${xhr.status} \"${xhr.statusText}\"`,\n                            );\n                        } else {\n                            throw new Error(\n                                `Range request for ${file.dataUrl} did returned non-success status: ${xhr.status} \"${xhr.statusText}\"`,\n                            );\n                        }\n                    } catch (e) {\n                        throw new Error(`Range request for ${file.dataUrl} failed with error: ${e}\"`);\n                    }\n                }\n                case DuckDBDataProtocol.NATIVE: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (!handle) {\n                        throw new Error(`No handle available for file: ${file.fileName}`);\n                    }\n                    const sliced = handle!.slice(location, location + bytes);\n                    const data = new Uint8Array(new FileReaderSync().readAsArrayBuffer(sliced));\n                    mod.HEAPU8.set(data, buf);\n                    return data.byteLength;\n                }\n            }\n            return 0;\n        } catch (e: any) {\n            failWith(mod, e.toString());\n            return 0;\n        }\n    },\n    writeFile: (mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.HTTP:\n                failWith(mod, 'Cannot write to HTTP file');\n                return 0;\n            case DuckDBDataProtocol.S3: {\n                const buffer = mod.HEAPU8.subarray(buf, buf + bytes);\n                const xhr = new XMLHttpRequest();\n                xhr.open('PUT', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\n                addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'PUT', '', buffer);\n                xhr.send(buffer);\n                return bytes;\n            }\n            case DuckDBDataProtocol.NATIVE:\n                failWith(mod, 'writefile not implemented');\n                return 0;\n        }\n        return 0;\n    },\n    getLastFileModificationTime: (mod: DuckDBModule, fileId: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.NATIVE: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw Error(`No handle available for file: ${file.fileName}`);\n                }\n                return 0;\n            }\n\n            case DuckDBDataProtocol.HTTP:\n            case DuckDBDataProtocol.S3:\n                return new Date().getTime();\n        }\n        return 0;\n    },\n    checkDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`checkDirectory: ${path}`);\n        return false;\n    },\n    createDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`createDirectory: ${path}`);\n    },\n    removeDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`removeDirectory: ${path}`);\n    },\n    listDirectoryEntries: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`listDirectoryEntries: ${path}`);\n        return false;\n    },\n    moveFile: (_mod: DuckDBModule, _fromPtr: number, _fromLen: number, _toPtr: number, _toLen: number) => {},\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number) => {},\n    callScalarUDF: (\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void => {\n        udf.callScalarUDF(BROWSER_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\n    },\n};\n\nexport default BROWSER_RUNTIME;\n", "\nvar DuckDB = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(DuckDB) {\n  DuckDB = DuckDB || {};\n\nvar Module=typeof DuckDB!==\"undefined\"?DuckDB:{};var objAssign=Object.assign;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=function(){if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}};read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=function readAsync(filename,onload,onerror){requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"./duckdb-mvp.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"./duckdb-mvp.wasm\",import.meta.url).toString()}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"Se\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"Ve\"];addOnInit(Module[\"asm\"][\"Te\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}function CatchInfo(ptr){this.free=function(){_free(this.ptr);this.ptr=0};this.set_base_ptr=function(basePtr){HEAP32[this.ptr>>2]=basePtr};this.get_base_ptr=function(){return HEAP32[this.ptr>>2]};this.set_adjusted_ptr=function(adjustedPtr){HEAP32[this.ptr+4>>2]=adjustedPtr};this.get_adjusted_ptr_addr=function(){return this.ptr+4};this.get_adjusted_ptr=function(){return HEAP32[this.ptr+4>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_exception_info().get_type());if(isPointer){return HEAP32[this.get_base_ptr()>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.get_base_ptr()};this.get_exception_info=function(){return new ExceptionInfo(this.get_base_ptr())};if(ptr===undefined){this.ptr=_malloc(8);this.set_adjusted_ptr(0)}else{this.ptr=ptr}}var exceptionCaught=[];function exception_addRef(info){info.add_ref()}var uncaughtExceptionCount=0;function ___cxa_begin_catch(ptr){var catchInfo=new CatchInfo(ptr);var info=catchInfo.get_exception_info();if(!info.get_caught()){info.set_caught(true);uncaughtExceptionCount--}info.set_rethrown(false);exceptionCaught.push(catchInfo);exception_addRef(info);return catchInfo.get_exception_ptr()}var exceptionLast=0;function ___cxa_free_exception(ptr){return _free(new ExceptionInfo(ptr).ptr)}function exception_decRef(info){if(info.release_ref()&&!info.get_rethrown()){var destructor=info.get_destructor();if(destructor){getWasmTableEntry(destructor)(info.excPtr)}___cxa_free_exception(info.excPtr)}}function ___cxa_end_catch(){_setThrew(0);var catchInfo=exceptionCaught.pop();exception_decRef(catchInfo.get_exception_info());catchInfo.free();exceptionLast=0}function ___resumeException(catchInfoPtr){var catchInfo=new CatchInfo(catchInfoPtr);var ptr=catchInfo.get_base_ptr();if(!exceptionLast){exceptionLast=ptr}catchInfo.free();throw ptr}function ___cxa_find_matching_catch_2(){var thrown=exceptionLast;if(!thrown){setTempRet0(0);return 0|0}var info=new ExceptionInfo(thrown);var thrownType=info.get_type();var catchInfo=new CatchInfo;catchInfo.set_base_ptr(thrown);catchInfo.set_adjusted_ptr(thrown);if(!thrownType){setTempRet0(0);return catchInfo.ptr|0}var typeArray=Array.prototype.slice.call(arguments);for(var i=0;i<typeArray.length;i++){var caughtType=typeArray[i];if(caughtType===0||caughtType===thrownType){break}if(___cxa_can_catch(caughtType,thrownType,catchInfo.get_adjusted_ptr_addr())){setTempRet0(caughtType);return catchInfo.ptr|0}}setTempRet0(thrownType);return catchInfo.ptr|0}function ___cxa_find_matching_catch_3(){var thrown=exceptionLast;if(!thrown){setTempRet0(0);return 0|0}var info=new ExceptionInfo(thrown);var thrownType=info.get_type();var catchInfo=new CatchInfo;catchInfo.set_base_ptr(thrown);catchInfo.set_adjusted_ptr(thrown);if(!thrownType){setTempRet0(0);return catchInfo.ptr|0}var typeArray=Array.prototype.slice.call(arguments);for(var i=0;i<typeArray.length;i++){var caughtType=typeArray[i];if(caughtType===0||caughtType===thrownType){break}if(___cxa_can_catch(caughtType,thrownType,catchInfo.get_adjusted_ptr_addr())){setTempRet0(caughtType);return catchInfo.ptr|0}}setTempRet0(thrownType);return catchInfo.ptr|0}function ___cxa_find_matching_catch_4(){var thrown=exceptionLast;if(!thrown){setTempRet0(0);return 0|0}var info=new ExceptionInfo(thrown);var thrownType=info.get_type();var catchInfo=new CatchInfo;catchInfo.set_base_ptr(thrown);catchInfo.set_adjusted_ptr(thrown);if(!thrownType){setTempRet0(0);return catchInfo.ptr|0}var typeArray=Array.prototype.slice.call(arguments);for(var i=0;i<typeArray.length;i++){var caughtType=typeArray[i];if(caughtType===0||caughtType===thrownType){break}if(___cxa_can_catch(caughtType,thrownType,catchInfo.get_adjusted_ptr_addr())){setTempRet0(caughtType);return catchInfo.ptr|0}}setTempRet0(thrownType);return catchInfo.ptr|0}function ___cxa_find_matching_catch_5(){var thrown=exceptionLast;if(!thrown){setTempRet0(0);return 0|0}var info=new ExceptionInfo(thrown);var thrownType=info.get_type();var catchInfo=new CatchInfo;catchInfo.set_base_ptr(thrown);catchInfo.set_adjusted_ptr(thrown);if(!thrownType){setTempRet0(0);return catchInfo.ptr|0}var typeArray=Array.prototype.slice.call(arguments);for(var i=0;i<typeArray.length;i++){var caughtType=typeArray[i];if(caughtType===0||caughtType===thrownType){break}if(___cxa_can_catch(caughtType,thrownType,catchInfo.get_adjusted_ptr_addr())){setTempRet0(caughtType);return catchInfo.ptr|0}}setTempRet0(thrownType);return catchInfo.ptr|0}function ___cxa_rethrow(){var catchInfo=exceptionCaught.pop();if(!catchInfo){abort(\"no exception to throw\")}var info=catchInfo.get_exception_info();var ptr=catchInfo.get_base_ptr();if(!info.get_rethrown()){exceptionCaught.push(catchInfo);info.set_rethrown(true);info.set_caught(false);uncaughtExceptionCount++}else{catchInfo.free()}exceptionLast=ptr;throw ptr}function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function ___cxa_uncaught_exceptions(){return uncaughtExceptionCount}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){}function ___syscall_access(path,amode){path=SYSCALLS.getStr(path);return SYSCALLS.doAccess(path,amode)}function SOCKFS(){err(\"missing function: $SOCKFS\");abort(-1)}function FS(){err(\"missing function: $FS\");abort(-1)}function getSocketFromFD(fd){var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function inetNtop4(addr){return(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255)}function inetNtop6(ints){var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str}function readSockaddr(sa,salen){var family=HEAP16[sa>>1];var port=_ntohs(HEAPU16[sa+2>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>2];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>2],HEAP32[sa+12>>2],HEAP32[sa+16>>2],HEAP32[sa+20>>2]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}}function inetPton4(str){var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}function jstoi_q(str){return parseInt(str)}function inetPton6(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]===\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr:function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};function getSocketAddress(addrp,addrlen,allowNull){if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}function ___syscall_bind(fd,addr,addrlen){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.bind(sock,info.addr,info.port);return 0}function ___syscall_connect(fd,addr,addrlen){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_fstat64(fd,buf){}function ___syscall_fstatat64(dirfd,path,buf,flags){}function ___syscall_ftruncate64(fd,low,high){}function ___syscall_getdents64(fd,dirp,count){}function zeroMemory(address,size){HEAPU8.fill(0,address,address+size)}function writeSockaddr(sa,family,addr,port,addrlen){switch(family){case 2:addr=inetPton4(addr);zeroMemory(sa,16);if(addrlen){HEAP32[addrlen>>2]=16}HEAP16[sa>>1]=family;HEAP32[sa+4>>2]=addr;HEAP16[sa+2>>1]=_htons(port);break;case 10:addr=inetPton6(addr);zeroMemory(sa,28);if(addrlen){HEAP32[addrlen>>2]=28}HEAP32[sa>>2]=family;HEAP32[sa+8>>2]=addr[0];HEAP32[sa+12>>2]=addr[1];HEAP32[sa+16>>2]=addr[2];HEAP32[sa+20>>2]=addr[3];HEAP16[sa+2>>1]=_htons(port);break;default:return 5}return 0}function ___syscall_getpeername(fd,addr,addrlen){var sock=getSocketFromFD(fd);if(!sock.daddr){return-53}var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport,addrlen);return 0}function ___syscall_getsockopt(fd,level,optname,optval,optlen){var sock=getSocketFromFD(fd);if(level===1){if(optname===4){HEAP32[optval>>2]=sock.error;HEAP32[optlen>>2]=4;sock.error=null;return 0}}return-50}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_lstat64(path,buf){}function ___syscall_mkdir(path,mode){path=SYSCALLS.getStr(path);return SYSCALLS.doMkdir(path,mode)}function ___syscall_open(path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_recvfrom(fd,buf,len,flags,addr,addrlen){var sock=getSocketFromFD(fd);var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port,addrlen)}HEAPU8.set(msg.buffer,buf);return msg.buffer.byteLength}function ___syscall_rename(old_path,new_path){}function ___syscall_rmdir(path){}function ___syscall_sendto(fd,message,length,flags,addr,addr_len){}function ___syscall_socket(domain,type,protocol){}function ___syscall_stat64(path,buf){}function ___syscall_unlink(path){}function __dlopen_js(filename,flag){abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")}function __dlsym_js(handle,symbol){abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")}function _abort(){abort(\"\")}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=(()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6})}else _emscripten_get_now=(()=>performance.now());var _emscripten_get_now_is_monotonic=true;function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function _duckdb_web_fs_directory_create(path,pathLen){return globalThis.DUCKDB_RUNTIME.createDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_list_files(path,pathLen){return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module,path,pathLen)}function _duckdb_web_fs_directory_remove(path,pathLen){return globalThis.DUCKDB_RUNTIME.removeDirectory(Module,path,pathLen)}function _duckdb_web_fs_file_close(fileId){return globalThis.DUCKDB_RUNTIME.closeFile(Module,fileId)}function _duckdb_web_fs_file_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkFile(Module,path,pathLen)}function _duckdb_web_fs_file_get_last_modified_time(fileId){return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module,fileId)}function _duckdb_web_fs_file_move(from,fromLen,to,toLen){return globalThis.DUCKDB_RUNTIME.moveFile(Module,from,fromLen,to,toLen)}function _duckdb_web_fs_file_open(fileId,flags){return globalThis.DUCKDB_RUNTIME.openFile(Module,fileId,flags)}function _duckdb_web_fs_file_read(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.readFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_file_truncate(fileId,newSize){return globalThis.DUCKDB_RUNTIME.truncateFile(Module,fileId,newSize)}function _duckdb_web_fs_file_write(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.writeFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_glob(path,pathLen){return globalThis.DUCKDB_RUNTIME.glob(Module,path,pathLen)}function _duckdb_web_test_platform_feature(feature){return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module,feature)}function _duckdb_web_udf_scalar_call(funcId,descPtr,descSize,ptrsPtr,ptrsSize,response){return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module,funcId,descPtr,descSize,ptrsPtr,ptrsSize,response)}function _emscripten_get_heap_max(){return 2147483648}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){return 0}function _fd_pread(fd,iov,iovcnt,offset_low,offset_high,pnum){var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt,offset_low);HEAP32[pnum>>2]=num;return 0}function _fd_pwrite(fd,iov,iovcnt,offset_low,offset_high,pnum){var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt,offset_low);HEAP32[pnum>>2]=num;return 0}function _fd_read(fd,iov,iovcnt,pnum){var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_sync(fd){var stream=SYSCALLS.getStreamFromFD(fd);if(stream.stream_ops&&stream.stream_ops.fsync){return-stream.stream_ops.fsync(stream)}return 0}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov>>2];var len=HEAP32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _getTempRet0(){return getTempRet0()}function _getaddrinfo(node,service,hint,out){var addr=0;var port=0;var flags=0;var family=0;var type=0;var proto=0;var ai;function allocaddrinfo(family,type,proto,canon,addr,port){var sa,salen,ai;var errno;salen=family===10?28:16;addr=family===10?inetNtop6(addr):inetNtop4(addr);sa=_malloc(salen);errno=writeSockaddr(sa,family,addr,port);assert(!errno);ai=_malloc(32);HEAP32[ai+4>>2]=family;HEAP32[ai+8>>2]=type;HEAP32[ai+12>>2]=proto;HEAP32[ai+24>>2]=canon;HEAP32[ai+20>>2]=sa;if(family===10){HEAP32[ai+16>>2]=28}else{HEAP32[ai+16>>2]=16}HEAP32[ai+28>>2]=0;return ai}if(hint){flags=HEAP32[hint>>2];family=HEAP32[hint+4>>2];type=HEAP32[hint+8>>2];proto=HEAP32[hint+12>>2]}if(type&&!proto){proto=type===2?17:6}if(!type&&proto){type=proto===17?2:1}if(proto===0){proto=6}if(type===0){type=1}if(!node&&!service){return-2}if(flags&~(1|2|4|1024|8|16|32)){return-1}if(hint!==0&&HEAP32[hint>>2]&2&&!node){return-1}if(flags&32){return-2}if(type!==0&&type!==1&&type!==2){return-7}if(family!==0&&family!==2&&family!==10){return-6}if(service){service=UTF8ToString(service);port=parseInt(service,10);if(isNaN(port)){if(flags&1024){return-2}return-8}}if(!node){if(family===0){family=2}if((flags&1)===0){if(family===2){addr=_htonl(2130706433)}else{addr=[0,0,0,1]}}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAP32[out>>2]=ai;return 0}node=UTF8ToString(node);addr=inetPton4(node);if(addr!==null){if(family===0||family===2){family=2}else if(family===10&&flags&8){addr=[0,0,_htonl(65535),addr];family=10}else{return-2}}else{addr=inetPton6(node);if(addr!==null){if(family===0||family===10){family=10}else{return-2}}}if(addr!=null){ai=allocaddrinfo(family,type,proto,node,addr,port);HEAP32[out>>2]=ai;return 0}if(flags&4){return-2}node=DNS.lookup_name(node);addr=inetPton4(node);if(family===0){family=2}else if(family===10){addr=[0,0,_htonl(65535),addr]}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAP32[out>>2]=ai;return 0}function getRandomDevice(){if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");return function(){return crypto_module[\"randomBytes\"](1)[0]}}catch(e){}}return function(){abort(\"randomDevice\")}}function _getentropy(buffer,size){if(!_getentropy.randomDevice){_getentropy.randomDevice=getRandomDevice()}for(var i=0;i<size;i++){HEAP8[buffer+i>>0]=_getentropy.randomDevice()}return 0}function _getnameinfo(sa,salen,node,nodelen,serv,servlen,flags){var info=readSockaddr(sa,salen);if(info.errno){return-6}var port=info.port;var addr=info.addr;var overflowed=false;if(node&&nodelen){var lookup;if(flags&1||!(lookup=DNS.lookup_addr(addr))){if(flags&8){return-2}}else{addr=lookup}var numBytesWrittenExclNull=stringToUTF8(addr,node,nodelen);if(numBytesWrittenExclNull+1>=nodelen){overflowed=true}}if(serv&&servlen){port=\"\"+port;var numBytesWrittenExclNull=stringToUTF8(port,serv,servlen);if(numBytesWrittenExclNull+1>=servlen){overflowed=true}}if(overflowed){return-12}return 0}function _llvm_eh_typeid_for(type){return type}function _setTempRet0(val){setTempRet0(val)}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"},\"%V\":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={\"p\":___assert_fail,\"j\":___cxa_allocate_exception,\"A\":___cxa_begin_catch,\"F\":___cxa_end_catch,\"b\":___cxa_find_matching_catch_2,\"n\":___cxa_find_matching_catch_3,\"I\":___cxa_find_matching_catch_4,\"X\":___cxa_find_matching_catch_5,\"i\":___cxa_free_exception,\"ea\":___cxa_rethrow,\"v\":___cxa_throw,\"E\":___cxa_uncaught_exceptions,\"e\":___resumeException,\"Ea\":___syscall__newselect,\"ya\":___syscall_access,\"Ga\":___syscall_bind,\"Fa\":___syscall_connect,\"Q\":___syscall_fcntl64,\"Sa\":___syscall_fstat64,\"Qa\":___syscall_fstatat64,\"Na\":___syscall_ftruncate64,\"Oa\":___syscall_getdents64,\"Aa\":___syscall_getpeername,\"Da\":___syscall_getsockopt,\"Ua\":___syscall_ioctl,\"Pa\":___syscall_lstat64,\"Ta\":___syscall_mkdir,\"pa\":___syscall_open,\"Ba\":___syscall_recvfrom,\"Qe\":___syscall_rename,\"na\":___syscall_rmdir,\"Ca\":___syscall_sendto,\"ja\":___syscall_socket,\"Ra\":___syscall_stat64,\"oa\":___syscall_unlink,\"ka\":__dlopen_js,\"Ia\":__dlsym_js,\"$\":_abort,\"ma\":_clock_gettime,\"Ie\":_duckdb_web_fs_directory_create,\"Je\":_duckdb_web_fs_directory_exists,\"Ge\":_duckdb_web_fs_directory_list_files,\"He\":_duckdb_web_fs_directory_remove,\"wa\":_duckdb_web_fs_file_close,\"Ee\":_duckdb_web_fs_file_exists,\"Le\":_duckdb_web_fs_file_get_last_modified_time,\"Fe\":_duckdb_web_fs_file_move,\"Me\":_duckdb_web_fs_file_open,\"ga\":_duckdb_web_fs_file_read,\"Ke\":_duckdb_web_fs_file_truncate,\"xa\":_duckdb_web_fs_file_write,\"De\":_duckdb_web_fs_glob,\"va\":_duckdb_web_test_platform_feature,\"Ne\":_duckdb_web_udf_scalar_call,\"Va\":_emscripten_get_heap_max,\"lb\":_emscripten_memcpy_big,\"fd\":_emscripten_resize_heap,\"Xa\":_environ_get,\"Ya\":_environ_sizes_get,\"V\":_fd_close,\"pe\":_fd_pread,\"wb\":_fd_pwrite,\"ra\":_fd_read,\"ye\":_fd_seek,\"Re\":_fd_sync,\"fa\":_fd_write,\"a\":_getTempRet0,\"Ha\":_getaddrinfo,\"Ma\":_getentropy,\"za\":_getnameinfo,\"ta\":invoke_d,\"N\":invoke_di,\"Ja\":invoke_dii,\"T\":invoke_diii,\"yc\":invoke_diijii,\"ua\":invoke_f,\"Y\":invoke_fi,\"sa\":invoke_fiii,\"zc\":invoke_fiijii,\"u\":invoke_i,\"Be\":invoke_id,\"Ka\":invoke_idd,\"_\":invoke_idiii,\"Ce\":invoke_if,\"La\":invoke_iff,\"d\":invoke_ii,\"ba\":invoke_iid,\"D\":invoke_iidii,\"Pb\":invoke_iidj,\"c\":invoke_iii,\"Z\":invoke_iiid,\"ha\":invoke_iiif,\"h\":invoke_iiii,\"Nb\":invoke_iiiidjj,\"m\":invoke_iiiii,\"qa\":invoke_iiiiid,\"o\":invoke_iiiiii,\"w\":invoke_iiiiiii,\"z\":invoke_iiiiiiii,\"S\":invoke_iiiiiiiii,\"U\":invoke_iiiiiiiiii,\"y\":invoke_iiiiiiiiiii,\"x\":invoke_iiiiiiiiiiii,\"q\":invoke_iiiiiiiiiiiiiii,\"O\":invoke_iiiiiiiiiiiiiiiiiiii,\"J\":invoke_iiiiiiiiiiiiiiiiiiiii,\"cc\":invoke_iiiiiiiiiiiij,\"fc\":invoke_iiiiiiiiiiji,\"ic\":invoke_iiiiiiiij,\"oc\":invoke_iiiiiiiiji,\"dc\":invoke_iiiiiiij,\"Ob\":invoke_iiiiiiiji,\"xc\":invoke_iiiiiiijii,\"gc\":invoke_iiiiiij,\"pc\":invoke_iiiiiiji,\"db\":invoke_iiiiiijji,\"ue\":invoke_iiiiij,\"Qd\":invoke_iiiiiji,\"Jd\":invoke_iiiiijii,\"te\":invoke_iiiiijj,\"Ub\":invoke_iiiiijji,\"jd\":invoke_iiiiijjiijj,\"$a\":invoke_iiiiijjj,\"_a\":invoke_iiiiijjji,\"Xd\":invoke_iiiij,\"Pd\":invoke_iiiiji,\"Eb\":invoke_iiiijii,\"Xc\":invoke_iiiijiii,\"Wd\":invoke_iiiijj,\"Ec\":invoke_iiiijji,\"Vb\":invoke_iiiijjii,\"Mb\":invoke_iiiijjj,\"ke\":invoke_iiij,\"Td\":invoke_iiiji,\"Ac\":invoke_iiijii,\"Kd\":invoke_iiijiii,\"vd\":invoke_iiijiiii,\"Hd\":invoke_iiijiij,\"sb\":invoke_iiijiijj,\"Ud\":invoke_iiijij,\"me\":invoke_iiijj,\"Rd\":invoke_iiijji,\"id\":invoke_iiijjii,\"nb\":invoke_iiijjji,\"cb\":invoke_iiijjjii,\"se\":invoke_iij,\"Yd\":invoke_iiji,\"xd\":invoke_iijii,\"Cb\":invoke_iijiii,\"Ld\":invoke_iijiiii,\"ob\":invoke_iijiijj,\"Lb\":invoke_iijiji,\"Sd\":invoke_iijj,\"Dd\":invoke_iijji,\"Gd\":invoke_iijjii,\"Fd\":invoke_iijjiii,\"Ed\":invoke_iijjiiii,\"Ad\":invoke_iijjijj,\"mc\":invoke_iijjj,\"$b\":invoke_ij,\"ee\":invoke_iji,\"qc\":invoke_ijji,\"ae\":invoke_ijjiii,\"qe\":invoke_j,\"tc\":invoke_jd,\"sc\":invoke_jf,\"xe\":invoke_ji,\"we\":invoke_jii,\"Od\":invoke_jiii,\"Ae\":invoke_jiiii,\"qd\":invoke_jiiiii,\"rc\":invoke_jiiiiii,\"ec\":invoke_jiiiiiii,\"Fc\":invoke_jiiiiiijii,\"vc\":invoke_jiiiiijiiii,\"Uc\":invoke_jiiiij,\"Bb\":invoke_jiiiiji,\"Bc\":invoke_jiiiijii,\"sd\":invoke_jiiij,\"md\":invoke_jiiiji,\"Mc\":invoke_jiiijii,\"wc\":invoke_jiiijiii,\"Fb\":invoke_jiiijj,\"ac\":invoke_jiij,\"od\":invoke_jiiji,\"dd\":invoke_jiijii,\"Pc\":invoke_jiijiiiii,\"Oc\":invoke_jiijiijiii,\"Lc\":invoke_jiijijii,\"Nc\":invoke_jiijjiii,\"td\":invoke_jij,\"ad\":invoke_jijiii,\"ab\":invoke_jijiiii,\"kc\":invoke_jijijjij,\"ub\":invoke_jijj,\"_c\":invoke_jijjij,\"uc\":invoke_jj,\"Ib\":invoke_jji,\"Yb\":invoke_jjj,\"Jb\":invoke_jjjii,\"Wb\":invoke_jjjjjjd,\"t\":invoke_v,\"k\":invoke_vi,\"C\":invoke_vid,\"ca\":invoke_vidi,\"yb\":invoke_vidiijj,\"K\":invoke_vif,\"da\":invoke_vifi,\"zb\":invoke_vifiijj,\"f\":invoke_vii,\"W\":invoke_viid,\"R\":invoke_viidii,\"Cc\":invoke_viif,\"g\":invoke_viii,\"l\":invoke_viiii,\"Pe\":invoke_viiiidiiii,\"s\":invoke_viiiii,\"r\":invoke_viiiiii,\"ia\":invoke_viiiiiidiii,\"B\":invoke_viiiiiii,\"L\":invoke_viiiiiiii,\"P\":invoke_viiiiiiiii,\"M\":invoke_viiiiiiiiii,\"Oe\":invoke_viiiiiiiiiii,\"la\":invoke_viiiiiiiiiiiii,\"aa\":invoke_viiiiiiiiiiiiiii,\"Cd\":invoke_viiiiiij,\"xb\":invoke_viiiiij,\"kd\":invoke_viiiiiji,\"bc\":invoke_viiiiijiii,\"Dc\":invoke_viiiiijiiii,\"nc\":invoke_viiiiijj,\"Qb\":invoke_viiiiijji,\"Za\":invoke_viiiiijjj,\"qb\":invoke_viiiiijjji,\"ie\":invoke_viiiij,\"Vd\":invoke_viiiiji,\"Db\":invoke_viiiijii,\"kb\":invoke_viiiijiii,\"yd\":invoke_viiiijiiii,\"zd\":invoke_viiiijiiiii,\"Zb\":invoke_viiiijiiiiiiii,\"Yc\":invoke_viiiijj,\"Sb\":invoke_viiiijji,\"Rb\":invoke_viiiijjii,\"eb\":invoke_viiiijjj,\"Qc\":invoke_viiiijjjj,\"he\":invoke_viiij,\"_d\":invoke_viiiji,\"Bd\":invoke_viiijii,\"Wc\":invoke_viiijiii,\"Ic\":invoke_viiijiiiijjj,\"Gb\":invoke_viiijij,\"bb\":invoke_viiijiji,\"Hb\":invoke_viiijijiji,\"pb\":invoke_viiijijjj,\"ce\":invoke_viiijj,\"ud\":invoke_viiijji,\"Tb\":invoke_viiijjii,\"Gc\":invoke_viiijjiij,\"Tc\":invoke_viiijjij,\"ge\":invoke_viiijjj,\"mb\":invoke_viiijjjji,\"oe\":invoke_viij,\"re\":invoke_viiji,\"ve\":invoke_viijii,\"Id\":invoke_viijiii,\"jb\":invoke_viijiiii,\"cd\":invoke_viijiiiii,\"Kc\":invoke_viijiiiiij,\"Jc\":invoke_viijiiiijj,\"bd\":invoke_viijiiij,\"Zc\":invoke_viijiij,\"nd\":invoke_viijiiji,\"rb\":invoke_viijiijj,\"hd\":invoke_viijij,\"ib\":invoke_viijiji,\"Hc\":invoke_viijijiiiijjj,\"tb\":invoke_viijijj,\"ze\":invoke_viijj,\"le\":invoke_viijji,\"ed\":invoke_viijjii,\"Rc\":invoke_viijjij,\"be\":invoke_viijjj,\"hc\":invoke_viijjji,\"je\":invoke_vij,\"de\":invoke_viji,\"gd\":invoke_vijii,\"Nd\":invoke_vijiii,\"Md\":invoke_vijiiii,\"$c\":invoke_vijiiiji,\"Ab\":invoke_vijiijj,\"ld\":invoke_vijij,\"lc\":invoke_vijijiiiijjj,\"fe\":invoke_vijijj,\"hb\":invoke_vijijjiiiii,\"Sc\":invoke_vijijjiij,\"vb\":invoke_vijijjji,\"$d\":invoke_vijj,\"Vc\":invoke_vijji,\"fb\":invoke_vijjiiii,\"gb\":invoke_vijjiiiii,\"jc\":invoke_vijjij,\"ne\":invoke_vijjj,\"rd\":invoke_vijjji,\"Zd\":invoke_vj,\"Xb\":invoke_vjii,\"_b\":invoke_vjiiii,\"Kb\":invoke_vjiiiji,\"wd\":invoke_vjjii,\"pd\":invoke_vjjijij,\"G\":_llvm_eh_typeid_for,\"H\":_setTempRet0,\"Wa\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"Te\"]).apply(null,arguments)};var _main=Module[\"_main\"]=function(){return(_main=Module[\"_main\"]=Module[\"asm\"][\"Ue\"]).apply(null,arguments)};var _duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=function(){return(_duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=Module[\"asm\"][\"We\"]).apply(null,arguments)};var _duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=function(){return(_duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=Module[\"asm\"][\"Xe\"]).apply(null,arguments)};var _duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=function(){return(_duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=Module[\"asm\"][\"Ye\"]).apply(null,arguments)};var _duckdb_web_reset=Module[\"_duckdb_web_reset\"]=function(){return(_duckdb_web_reset=Module[\"_duckdb_web_reset\"]=Module[\"asm\"][\"Ze\"]).apply(null,arguments)};var _duckdb_web_connect=Module[\"_duckdb_web_connect\"]=function(){return(_duckdb_web_connect=Module[\"_duckdb_web_connect\"]=Module[\"asm\"][\"_e\"]).apply(null,arguments)};var _duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=function(){return(_duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=Module[\"asm\"][\"$e\"]).apply(null,arguments)};var _duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=function(){return(_duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=Module[\"asm\"][\"af\"]).apply(null,arguments)};var _duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=function(){return(_duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=Module[\"asm\"][\"bf\"]).apply(null,arguments)};var _duckdb_web_open=Module[\"_duckdb_web_open\"]=function(){return(_duckdb_web_open=Module[\"_duckdb_web_open\"]=Module[\"asm\"][\"cf\"]).apply(null,arguments)};var _duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=function(){return(_duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=Module[\"asm\"][\"df\"]).apply(null,arguments)};var _duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=function(){return(_duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=Module[\"asm\"][\"ef\"]).apply(null,arguments)};var _duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=function(){return(_duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=Module[\"asm\"][\"ff\"]).apply(null,arguments)};var _duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=function(){return(_duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=Module[\"asm\"][\"gf\"]).apply(null,arguments)};var _duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=function(){return(_duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=Module[\"asm\"][\"hf\"]).apply(null,arguments)};var _duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=function(){return(_duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=Module[\"asm\"][\"jf\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=function(){return(_duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=Module[\"asm\"][\"kf\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=function(){return(_duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=Module[\"asm\"][\"lf\"]).apply(null,arguments)};var _duckdb_web_fs_set_file_descriptor=Module[\"_duckdb_web_fs_set_file_descriptor\"]=function(){return(_duckdb_web_fs_set_file_descriptor=Module[\"_duckdb_web_fs_set_file_descriptor\"]=Module[\"asm\"][\"mf\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=function(){return(_duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=Module[\"asm\"][\"nf\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=function(){return(_duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=Module[\"asm\"][\"of\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=function(){return(_duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=Module[\"asm\"][\"pf\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=function(){return(_duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=Module[\"asm\"][\"qf\"]).apply(null,arguments)};var _duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=function(){return(_duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=Module[\"asm\"][\"rf\"]).apply(null,arguments)};var _duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=function(){return(_duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=Module[\"asm\"][\"sf\"]).apply(null,arguments)};var _duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=function(){return(_duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=Module[\"asm\"][\"tf\"]).apply(null,arguments)};var _duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=function(){return(_duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=Module[\"asm\"][\"uf\"]).apply(null,arguments)};var _duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=function(){return(_duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=Module[\"asm\"][\"vf\"]).apply(null,arguments)};var _duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=function(){return(_duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=Module[\"asm\"][\"wf\"]).apply(null,arguments)};var _duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=function(){return(_duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=Module[\"asm\"][\"xf\"]).apply(null,arguments)};var _duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=function(){return(_duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=Module[\"asm\"][\"yf\"]).apply(null,arguments)};var _duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=function(){return(_duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=Module[\"asm\"][\"zf\"]).apply(null,arguments)};var _duckdb_web_query_send=Module[\"_duckdb_web_query_send\"]=function(){return(_duckdb_web_query_send=Module[\"_duckdb_web_query_send\"]=Module[\"asm\"][\"Af\"]).apply(null,arguments)};var _duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=function(){return(_duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=Module[\"asm\"][\"Bf\"]).apply(null,arguments)};var _duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=function(){return(_duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=Module[\"asm\"][\"Cf\"]).apply(null,arguments)};var _duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=function(){return(_duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=Module[\"asm\"][\"Df\"]).apply(null,arguments)};var _duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=function(){return(_duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=Module[\"asm\"][\"Ef\"]).apply(null,arguments)};var _duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=function(){return(_duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=Module[\"asm\"][\"Ff\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"Gf\"]).apply(null,arguments)};var _htonl=Module[\"_htonl\"]=function(){return(_htonl=Module[\"_htonl\"]=Module[\"asm\"][\"Hf\"]).apply(null,arguments)};var _htons=Module[\"_htons\"]=function(){return(_htons=Module[\"_htons\"]=Module[\"asm\"][\"If\"]).apply(null,arguments)};var _ntohs=Module[\"_ntohs\"]=function(){return(_ntohs=Module[\"_ntohs\"]=Module[\"asm\"][\"Jf\"]).apply(null,arguments)};var _setThrew=Module[\"_setThrew\"]=function(){return(_setThrew=Module[\"_setThrew\"]=Module[\"asm\"][\"Kf\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Lf\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"Mf\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"Nf\"]).apply(null,arguments)};var ___cxa_can_catch=Module[\"___cxa_can_catch\"]=function(){return(___cxa_can_catch=Module[\"___cxa_can_catch\"]=Module[\"asm\"][\"Of\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"Pf\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Qf\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Rf\"]).apply(null,arguments)};var dynCall_jiiii=Module[\"dynCall_jiiii\"]=function(){return(dynCall_jiiii=Module[\"dynCall_jiiii\"]=Module[\"asm\"][\"Sf\"]).apply(null,arguments)};var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=function(){return(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=Module[\"asm\"][\"Tf\"]).apply(null,arguments)};var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=function(){return(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=Module[\"asm\"][\"Uf\"]).apply(null,arguments)};var dynCall_viijii=Module[\"dynCall_viijii\"]=function(){return(dynCall_viijii=Module[\"dynCall_viijii\"]=Module[\"asm\"][\"Vf\"]).apply(null,arguments)};var dynCall_j=Module[\"dynCall_j\"]=function(){return(dynCall_j=Module[\"dynCall_j\"]=Module[\"asm\"][\"Wf\"]).apply(null,arguments)};var dynCall_ji=Module[\"dynCall_ji\"]=function(){return(dynCall_ji=Module[\"dynCall_ji\"]=Module[\"asm\"][\"Xf\"]).apply(null,arguments)};var dynCall_iij=Module[\"dynCall_iij\"]=function(){return(dynCall_iij=Module[\"dynCall_iij\"]=Module[\"asm\"][\"Yf\"]).apply(null,arguments)};var dynCall_viij=Module[\"dynCall_viij\"]=function(){return(dynCall_viij=Module[\"dynCall_viij\"]=Module[\"asm\"][\"Zf\"]).apply(null,arguments)};var dynCall_viijji=Module[\"dynCall_viijji\"]=function(){return(dynCall_viijji=Module[\"dynCall_viijji\"]=Module[\"asm\"][\"_f\"]).apply(null,arguments)};var dynCall_viijj=Module[\"dynCall_viijj\"]=function(){return(dynCall_viijj=Module[\"dynCall_viijj\"]=Module[\"asm\"][\"$f\"]).apply(null,arguments)};var dynCall_viiijj=Module[\"dynCall_viiijj\"]=function(){return(dynCall_viiijj=Module[\"dynCall_viiijj\"]=Module[\"asm\"][\"ag\"]).apply(null,arguments)};var dynCall_viiji=Module[\"dynCall_viiji\"]=function(){return(dynCall_viiji=Module[\"dynCall_viiji\"]=Module[\"asm\"][\"bg\"]).apply(null,arguments)};var dynCall_vijjj=Module[\"dynCall_vijjj\"]=function(){return(dynCall_vijjj=Module[\"dynCall_vijjj\"]=Module[\"asm\"][\"cg\"]).apply(null,arguments)};var dynCall_iiijj=Module[\"dynCall_iiijj\"]=function(){return(dynCall_iiijj=Module[\"dynCall_iiijj\"]=Module[\"asm\"][\"dg\"]).apply(null,arguments)};var dynCall_viiij=Module[\"dynCall_viiij\"]=function(){return(dynCall_viiij=Module[\"dynCall_viiij\"]=Module[\"asm\"][\"eg\"]).apply(null,arguments)};var dynCall_viijij=Module[\"dynCall_viijij\"]=function(){return(dynCall_viijij=Module[\"dynCall_viijij\"]=Module[\"asm\"][\"fg\"]).apply(null,arguments)};var dynCall_viiijjj=Module[\"dynCall_viiijjj\"]=function(){return(dynCall_viiijjj=Module[\"dynCall_viiijjj\"]=Module[\"asm\"][\"gg\"]).apply(null,arguments)};var dynCall_iiij=Module[\"dynCall_iiij\"]=function(){return(dynCall_iiij=Module[\"dynCall_iiij\"]=Module[\"asm\"][\"hg\"]).apply(null,arguments)};var dynCall_vijijj=Module[\"dynCall_vijijj\"]=function(){return(dynCall_vijijj=Module[\"dynCall_vijijj\"]=Module[\"asm\"][\"ig\"]).apply(null,arguments)};var dynCall_iji=Module[\"dynCall_iji\"]=function(){return(dynCall_iji=Module[\"dynCall_iji\"]=Module[\"asm\"][\"jg\"]).apply(null,arguments)};var dynCall_viji=Module[\"dynCall_viji\"]=function(){return(dynCall_viji=Module[\"dynCall_viji\"]=Module[\"asm\"][\"kg\"]).apply(null,arguments)};var dynCall_vij=Module[\"dynCall_vij\"]=function(){return(dynCall_vij=Module[\"dynCall_vij\"]=Module[\"asm\"][\"lg\"]).apply(null,arguments)};var dynCall_viiiij=Module[\"dynCall_viiiij\"]=function(){return(dynCall_viiiij=Module[\"dynCall_viiiij\"]=Module[\"asm\"][\"mg\"]).apply(null,arguments)};var dynCall_jii=Module[\"dynCall_jii\"]=function(){return(dynCall_jii=Module[\"dynCall_jii\"]=Module[\"asm\"][\"ng\"]).apply(null,arguments)};var dynCall_viiiji=Module[\"dynCall_viiiji\"]=function(){return(dynCall_viiiji=Module[\"dynCall_viiiji\"]=Module[\"asm\"][\"og\"]).apply(null,arguments)};var dynCall_vijj=Module[\"dynCall_vijj\"]=function(){return(dynCall_vijj=Module[\"dynCall_vijj\"]=Module[\"asm\"][\"pg\"]).apply(null,arguments)};var dynCall_vj=Module[\"dynCall_vj\"]=function(){return(dynCall_vj=Module[\"dynCall_vj\"]=Module[\"asm\"][\"qg\"]).apply(null,arguments)};var dynCall_iiji=Module[\"dynCall_iiji\"]=function(){return(dynCall_iiji=Module[\"dynCall_iiji\"]=Module[\"asm\"][\"rg\"]).apply(null,arguments)};var dynCall_iiiij=Module[\"dynCall_iiiij\"]=function(){return(dynCall_iiiij=Module[\"dynCall_iiiij\"]=Module[\"asm\"][\"sg\"]).apply(null,arguments)};var dynCall_iiiiiji=Module[\"dynCall_iiiiiji\"]=function(){return(dynCall_iiiiiji=Module[\"dynCall_iiiiiji\"]=Module[\"asm\"][\"tg\"]).apply(null,arguments)};var dynCall_iiiji=Module[\"dynCall_iiiji\"]=function(){return(dynCall_iiiji=Module[\"dynCall_iiiji\"]=Module[\"asm\"][\"ug\"]).apply(null,arguments)};var dynCall_iiiiji=Module[\"dynCall_iiiiji\"]=function(){return(dynCall_iiiiji=Module[\"dynCall_iiiiji\"]=Module[\"asm\"][\"vg\"]).apply(null,arguments)};var dynCall_jiii=Module[\"dynCall_jiii\"]=function(){return(dynCall_jiii=Module[\"dynCall_jiii\"]=Module[\"asm\"][\"wg\"]).apply(null,arguments)};var dynCall_jij=Module[\"dynCall_jij\"]=function(){return(dynCall_jij=Module[\"dynCall_jij\"]=Module[\"asm\"][\"xg\"]).apply(null,arguments)};var dynCall_iijjijj=Module[\"dynCall_iijjijj\"]=function(){return(dynCall_iijjijj=Module[\"dynCall_iijjijj\"]=Module[\"asm\"][\"yg\"]).apply(null,arguments)};var dynCall_viiiijiiiii=Module[\"dynCall_viiiijiiiii\"]=function(){return(dynCall_viiiijiiiii=Module[\"dynCall_viiiijiiiii\"]=Module[\"asm\"][\"zg\"]).apply(null,arguments)};var dynCall_viiiijiiii=Module[\"dynCall_viiiijiiii\"]=function(){return(dynCall_viiiijiiii=Module[\"dynCall_viiiijiiii\"]=Module[\"asm\"][\"Ag\"]).apply(null,arguments)};var dynCall_viiijii=Module[\"dynCall_viiijii\"]=function(){return(dynCall_viiijii=Module[\"dynCall_viiijii\"]=Module[\"asm\"][\"Bg\"]).apply(null,arguments)};var dynCall_viiiiiij=Module[\"dynCall_viiiiiij\"]=function(){return(dynCall_viiiiiij=Module[\"dynCall_viiiiiij\"]=Module[\"asm\"][\"Cg\"]).apply(null,arguments)};var dynCall_iiijiii=Module[\"dynCall_iiijiii\"]=function(){return(dynCall_iiijiii=Module[\"dynCall_iiijiii\"]=Module[\"asm\"][\"Dg\"]).apply(null,arguments)};var dynCall_iiiiijii=Module[\"dynCall_iiiiijii\"]=function(){return(dynCall_iiiiijii=Module[\"dynCall_iiiiijii\"]=Module[\"asm\"][\"Eg\"]).apply(null,arguments)};var dynCall_viijiii=Module[\"dynCall_viijiii\"]=function(){return(dynCall_viijiii=Module[\"dynCall_viijiii\"]=Module[\"asm\"][\"Fg\"]).apply(null,arguments)};var dynCall_iiijiij=Module[\"dynCall_iiijiij\"]=function(){return(dynCall_iiijiij=Module[\"dynCall_iiijiij\"]=Module[\"asm\"][\"Gg\"]).apply(null,arguments)};var dynCall_vijiii=Module[\"dynCall_vijiii\"]=function(){return(dynCall_vijiii=Module[\"dynCall_vijiii\"]=Module[\"asm\"][\"Hg\"]).apply(null,arguments)};var dynCall_iijjii=Module[\"dynCall_iijjii\"]=function(){return(dynCall_iijjii=Module[\"dynCall_iijjii\"]=Module[\"asm\"][\"Ig\"]).apply(null,arguments)};var dynCall_iijjiii=Module[\"dynCall_iijjiii\"]=function(){return(dynCall_iijjiii=Module[\"dynCall_iijjiii\"]=Module[\"asm\"][\"Jg\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"Kg\"]).apply(null,arguments)};var dynCall_iijji=Module[\"dynCall_iijji\"]=function(){return(dynCall_iijji=Module[\"dynCall_iijji\"]=Module[\"asm\"][\"Lg\"]).apply(null,arguments)};var dynCall_vijiiii=Module[\"dynCall_vijiiii\"]=function(){return(dynCall_vijiiii=Module[\"dynCall_vijiiii\"]=Module[\"asm\"][\"Mg\"]).apply(null,arguments)};var dynCall_iijiiii=Module[\"dynCall_iijiiii\"]=function(){return(dynCall_iijiiii=Module[\"dynCall_iijiiii\"]=Module[\"asm\"][\"Ng\"]).apply(null,arguments)};var dynCall_iijii=Module[\"dynCall_iijii\"]=function(){return(dynCall_iijii=Module[\"dynCall_iijii\"]=Module[\"asm\"][\"Og\"]).apply(null,arguments)};var dynCall_vijij=Module[\"dynCall_vijij\"]=function(){return(dynCall_vijij=Module[\"dynCall_vijij\"]=Module[\"asm\"][\"Pg\"]).apply(null,arguments)};var dynCall_iiijiiii=Module[\"dynCall_iiijiiii\"]=function(){return(dynCall_iiijiiii=Module[\"dynCall_iiijiiii\"]=Module[\"asm\"][\"Qg\"]).apply(null,arguments)};var dynCall_jiiij=Module[\"dynCall_jiiij\"]=function(){return(dynCall_jiiij=Module[\"dynCall_jiiij\"]=Module[\"asm\"][\"Rg\"]).apply(null,arguments)};var dynCall_jiiiii=Module[\"dynCall_jiiiii\"]=function(){return(dynCall_jiiiii=Module[\"dynCall_jiiiii\"]=Module[\"asm\"][\"Sg\"]).apply(null,arguments)};var dynCall_iiiiijjiijj=Module[\"dynCall_iiiiijjiijj\"]=function(){return(dynCall_iiiiijjiijj=Module[\"dynCall_iiiiijjiijj\"]=Module[\"asm\"][\"Tg\"]).apply(null,arguments)};var dynCall_viijiiji=Module[\"dynCall_viijiiji\"]=function(){return(dynCall_viijiiji=Module[\"dynCall_viijiiji\"]=Module[\"asm\"][\"Ug\"]).apply(null,arguments)};var dynCall_vjjijij=Module[\"dynCall_vjjijij\"]=function(){return(dynCall_vjjijij=Module[\"dynCall_vjjijij\"]=Module[\"asm\"][\"Vg\"]).apply(null,arguments)};var dynCall_vijjji=Module[\"dynCall_vijjji\"]=function(){return(dynCall_vijjji=Module[\"dynCall_vijjji\"]=Module[\"asm\"][\"Wg\"]).apply(null,arguments)};var dynCall_vjjii=Module[\"dynCall_vjjii\"]=function(){return(dynCall_vjjii=Module[\"dynCall_vjjii\"]=Module[\"asm\"][\"Xg\"]).apply(null,arguments)};var dynCall_viiiiiji=Module[\"dynCall_viiiiiji\"]=function(){return(dynCall_viiiiiji=Module[\"dynCall_viiiiiji\"]=Module[\"asm\"][\"Yg\"]).apply(null,arguments)};var dynCall_jiiiji=Module[\"dynCall_jiiiji\"]=function(){return(dynCall_jiiiji=Module[\"dynCall_jiiiji\"]=Module[\"asm\"][\"Zg\"]).apply(null,arguments)};var dynCall_iijj=Module[\"dynCall_iijj\"]=function(){return(dynCall_iijj=Module[\"dynCall_iijj\"]=Module[\"asm\"][\"_g\"]).apply(null,arguments)};var dynCall_iiijjii=Module[\"dynCall_iiijjii\"]=function(){return(dynCall_iiijjii=Module[\"dynCall_iiijjii\"]=Module[\"asm\"][\"$g\"]).apply(null,arguments)};var dynCall_vijii=Module[\"dynCall_vijii\"]=function(){return(dynCall_vijii=Module[\"dynCall_vijii\"]=Module[\"asm\"][\"ah\"]).apply(null,arguments)};var dynCall_viijjii=Module[\"dynCall_viijjii\"]=function(){return(dynCall_viijjii=Module[\"dynCall_viijjii\"]=Module[\"asm\"][\"bh\"]).apply(null,arguments)};var dynCall_viiiijj=Module[\"dynCall_viiiijj\"]=function(){return(dynCall_viiiijj=Module[\"dynCall_viiiijj\"]=Module[\"asm\"][\"ch\"]).apply(null,arguments)};var dynCall_jijjij=Module[\"dynCall_jijjij\"]=function(){return(dynCall_jijjij=Module[\"dynCall_jijjij\"]=Module[\"asm\"][\"dh\"]).apply(null,arguments)};var dynCall_jiijii=Module[\"dynCall_jiijii\"]=function(){return(dynCall_jiijii=Module[\"dynCall_jiijii\"]=Module[\"asm\"][\"eh\"]).apply(null,arguments)};var dynCall_jijiii=Module[\"dynCall_jijiii\"]=function(){return(dynCall_jijiii=Module[\"dynCall_jijiii\"]=Module[\"asm\"][\"fh\"]).apply(null,arguments)};var dynCall_viijiiiii=Module[\"dynCall_viijiiiii\"]=function(){return(dynCall_viijiiiii=Module[\"dynCall_viijiiiii\"]=Module[\"asm\"][\"gh\"]).apply(null,arguments)};var dynCall_viijiiij=Module[\"dynCall_viijiiij\"]=function(){return(dynCall_viijiiij=Module[\"dynCall_viijiiij\"]=Module[\"asm\"][\"hh\"]).apply(null,arguments)};var dynCall_vijiiiji=Module[\"dynCall_vijiiiji\"]=function(){return(dynCall_vijiiiji=Module[\"dynCall_vijiiiji\"]=Module[\"asm\"][\"ih\"]).apply(null,arguments)};var dynCall_jiiji=Module[\"dynCall_jiiji\"]=function(){return(dynCall_jiiji=Module[\"dynCall_jiiji\"]=Module[\"asm\"][\"jh\"]).apply(null,arguments)};var dynCall_viiijij=Module[\"dynCall_viiijij\"]=function(){return(dynCall_viiijij=Module[\"dynCall_viiijij\"]=Module[\"asm\"][\"kh\"]).apply(null,arguments)};var dynCall_viijiij=Module[\"dynCall_viijiij\"]=function(){return(dynCall_viijiij=Module[\"dynCall_viijiij\"]=Module[\"asm\"][\"lh\"]).apply(null,arguments)};var dynCall_viiiiijj=Module[\"dynCall_viiiiijj\"]=function(){return(dynCall_viiiiijj=Module[\"dynCall_viiiiijj\"]=Module[\"asm\"][\"mh\"]).apply(null,arguments)};var dynCall_viiijji=Module[\"dynCall_viiijji\"]=function(){return(dynCall_viiijji=Module[\"dynCall_viiijji\"]=Module[\"asm\"][\"nh\"]).apply(null,arguments)};var dynCall_iiiijiii=Module[\"dynCall_iiiijiii\"]=function(){return(dynCall_iiiijiii=Module[\"dynCall_iiiijiii\"]=Module[\"asm\"][\"oh\"]).apply(null,arguments)};var dynCall_iiijij=Module[\"dynCall_iiijij\"]=function(){return(dynCall_iiijij=Module[\"dynCall_iiijij\"]=Module[\"asm\"][\"ph\"]).apply(null,arguments)};var dynCall_iiijji=Module[\"dynCall_iiijji\"]=function(){return(dynCall_iiijji=Module[\"dynCall_iiijji\"]=Module[\"asm\"][\"qh\"]).apply(null,arguments)};var dynCall_iiiijj=Module[\"dynCall_iiiijj\"]=function(){return(dynCall_iiiijj=Module[\"dynCall_iiiijj\"]=Module[\"asm\"][\"rh\"]).apply(null,arguments)};var dynCall_viiijiii=Module[\"dynCall_viiijiii\"]=function(){return(dynCall_viiijiii=Module[\"dynCall_viiijiii\"]=Module[\"asm\"][\"sh\"]).apply(null,arguments)};var dynCall_vijji=Module[\"dynCall_vijji\"]=function(){return(dynCall_vijji=Module[\"dynCall_vijji\"]=Module[\"asm\"][\"th\"]).apply(null,arguments)};var dynCall_jiiiij=Module[\"dynCall_jiiiij\"]=function(){return(dynCall_jiiiij=Module[\"dynCall_jiiiij\"]=Module[\"asm\"][\"uh\"]).apply(null,arguments)};var dynCall_jiijiiiii=Module[\"dynCall_jiijiiiii\"]=function(){return(dynCall_jiijiiiii=Module[\"dynCall_jiijiiiii\"]=Module[\"asm\"][\"vh\"]).apply(null,arguments)};var dynCall_jiijiijiii=Module[\"dynCall_jiijiijiii\"]=function(){return(dynCall_jiijiijiii=Module[\"dynCall_jiijiijiii\"]=Module[\"asm\"][\"wh\"]).apply(null,arguments)};var dynCall_jiijjiii=Module[\"dynCall_jiijjiii\"]=function(){return(dynCall_jiijjiii=Module[\"dynCall_jiijjiii\"]=Module[\"asm\"][\"xh\"]).apply(null,arguments)};var dynCall_jiiijii=Module[\"dynCall_jiiijii\"]=function(){return(dynCall_jiiijii=Module[\"dynCall_jiiijii\"]=Module[\"asm\"][\"yh\"]).apply(null,arguments)};var dynCall_jiijijii=Module[\"dynCall_jiijijii\"]=function(){return(dynCall_jiijijii=Module[\"dynCall_jiijijii\"]=Module[\"asm\"][\"zh\"]).apply(null,arguments)};var dynCall_viiijjij=Module[\"dynCall_viiijjij\"]=function(){return(dynCall_viiijjij=Module[\"dynCall_viiijjij\"]=Module[\"asm\"][\"Ah\"]).apply(null,arguments)};var dynCall_vijijjiij=Module[\"dynCall_vijijjiij\"]=function(){return(dynCall_vijijjiij=Module[\"dynCall_vijijjiij\"]=Module[\"asm\"][\"Bh\"]).apply(null,arguments)};var dynCall_viijjij=Module[\"dynCall_viijjij\"]=function(){return(dynCall_viijjij=Module[\"dynCall_viijjij\"]=Module[\"asm\"][\"Ch\"]).apply(null,arguments)};var dynCall_viiijjiij=Module[\"dynCall_viiijjiij\"]=function(){return(dynCall_viiijjiij=Module[\"dynCall_viiijjiij\"]=Module[\"asm\"][\"Dh\"]).apply(null,arguments)};var dynCall_viiiijjjj=Module[\"dynCall_viiiijjjj\"]=function(){return(dynCall_viiiijjjj=Module[\"dynCall_viiiijjjj\"]=Module[\"asm\"][\"Eh\"]).apply(null,arguments)};var dynCall_viijiiiiij=Module[\"dynCall_viijiiiiij\"]=function(){return(dynCall_viijiiiiij=Module[\"dynCall_viijiiiiij\"]=Module[\"asm\"][\"Fh\"]).apply(null,arguments)};var dynCall_viijiiiijj=Module[\"dynCall_viijiiiijj\"]=function(){return(dynCall_viijiiiijj=Module[\"dynCall_viijiiiijj\"]=Module[\"asm\"][\"Gh\"]).apply(null,arguments)};var dynCall_viiijiiiijjj=Module[\"dynCall_viiijiiiijjj\"]=function(){return(dynCall_viiijiiiijjj=Module[\"dynCall_viiijiiiijjj\"]=Module[\"asm\"][\"Hh\"]).apply(null,arguments)};var dynCall_viijijiiiijjj=Module[\"dynCall_viijijiiiijjj\"]=function(){return(dynCall_viijijiiiijjj=Module[\"dynCall_viijijiiiijjj\"]=Module[\"asm\"][\"Ih\"]).apply(null,arguments)};var dynCall_viiiiijiiii=Module[\"dynCall_viiiiijiiii\"]=function(){return(dynCall_viiiiijiiii=Module[\"dynCall_viiiiijiiii\"]=Module[\"asm\"][\"Jh\"]).apply(null,arguments)};var dynCall_iiijii=Module[\"dynCall_iiijii\"]=function(){return(dynCall_iiijii=Module[\"dynCall_iiijii\"]=Module[\"asm\"][\"Kh\"]).apply(null,arguments)};var dynCall_fiijii=Module[\"dynCall_fiijii\"]=function(){return(dynCall_fiijii=Module[\"dynCall_fiijii\"]=Module[\"asm\"][\"Lh\"]).apply(null,arguments)};var dynCall_diijii=Module[\"dynCall_diijii\"]=function(){return(dynCall_diijii=Module[\"dynCall_diijii\"]=Module[\"asm\"][\"Mh\"]).apply(null,arguments)};var dynCall_iiiiiiijii=Module[\"dynCall_iiiiiiijii\"]=function(){return(dynCall_iiiiiiijii=Module[\"dynCall_iiiiiiijii\"]=Module[\"asm\"][\"Nh\"]).apply(null,arguments)};var dynCall_viiiiji=Module[\"dynCall_viiiiji\"]=function(){return(dynCall_viiiiji=Module[\"dynCall_viiiiji\"]=Module[\"asm\"][\"Oh\"]).apply(null,arguments)};var dynCall_jiiiijii=Module[\"dynCall_jiiiijii\"]=function(){return(dynCall_jiiiijii=Module[\"dynCall_jiiiijii\"]=Module[\"asm\"][\"Ph\"]).apply(null,arguments)};var dynCall_jiiijiii=Module[\"dynCall_jiiijiii\"]=function(){return(dynCall_jiiijiii=Module[\"dynCall_jiiijiii\"]=Module[\"asm\"][\"Qh\"]).apply(null,arguments)};var dynCall_jiiiiijiiii=Module[\"dynCall_jiiiiijiiii\"]=function(){return(dynCall_jiiiiijiiii=Module[\"dynCall_jiiiiijiiii\"]=Module[\"asm\"][\"Rh\"]).apply(null,arguments)};var dynCall_jj=Module[\"dynCall_jj\"]=function(){return(dynCall_jj=Module[\"dynCall_jj\"]=Module[\"asm\"][\"Sh\"]).apply(null,arguments)};var dynCall_jd=Module[\"dynCall_jd\"]=function(){return(dynCall_jd=Module[\"dynCall_jd\"]=Module[\"asm\"][\"Th\"]).apply(null,arguments)};var dynCall_jf=Module[\"dynCall_jf\"]=function(){return(dynCall_jf=Module[\"dynCall_jf\"]=Module[\"asm\"][\"Uh\"]).apply(null,arguments)};var dynCall_iijjj=Module[\"dynCall_iijjj\"]=function(){return(dynCall_iijjj=Module[\"dynCall_iijjj\"]=Module[\"asm\"][\"Vh\"]).apply(null,arguments)};var dynCall_vijijiiiijjj=Module[\"dynCall_vijijiiiijjj\"]=function(){return(dynCall_vijijiiiijjj=Module[\"dynCall_vijijiiiijjj\"]=Module[\"asm\"][\"Wh\"]).apply(null,arguments)};var dynCall_iiiiiiji=Module[\"dynCall_iiiiiiji\"]=function(){return(dynCall_iiiiiiji=Module[\"dynCall_iiiiiiji\"]=Module[\"asm\"][\"Xh\"]).apply(null,arguments)};var dynCall_iiiiiiiiji=Module[\"dynCall_iiiiiiiiji\"]=function(){return(dynCall_iiiiiiiiji=Module[\"dynCall_iiiiiiiiji\"]=Module[\"asm\"][\"Yh\"]).apply(null,arguments)};var dynCall_jijijjij=Module[\"dynCall_jijijjij\"]=function(){return(dynCall_jijijjij=Module[\"dynCall_jijijjij\"]=Module[\"asm\"][\"Zh\"]).apply(null,arguments)};var dynCall_viijjj=Module[\"dynCall_viijjj\"]=function(){return(dynCall_viijjj=Module[\"dynCall_viijjj\"]=Module[\"asm\"][\"_h\"]).apply(null,arguments)};var dynCall_vijjij=Module[\"dynCall_vijjij\"]=function(){return(dynCall_vijjij=Module[\"dynCall_vijjij\"]=Module[\"asm\"][\"$h\"]).apply(null,arguments)};var dynCall_viijjji=Module[\"dynCall_viijjji\"]=function(){return(dynCall_viijjji=Module[\"dynCall_viijjji\"]=Module[\"asm\"][\"ai\"]).apply(null,arguments)};var dynCall_iiiiiij=Module[\"dynCall_iiiiiij\"]=function(){return(dynCall_iiiiiij=Module[\"dynCall_iiiiiij\"]=Module[\"asm\"][\"bi\"]).apply(null,arguments)};var dynCall_iiiiiiiiiiji=Module[\"dynCall_iiiiiiiiiiji\"]=function(){return(dynCall_iiiiiiiiiiji=Module[\"dynCall_iiiiiiiiiiji\"]=Module[\"asm\"][\"ci\"]).apply(null,arguments)};var dynCall_jiiiiiii=Module[\"dynCall_jiiiiiii\"]=function(){return(dynCall_jiiiiiii=Module[\"dynCall_jiiiiiii\"]=Module[\"asm\"][\"di\"]).apply(null,arguments)};var dynCall_jijj=Module[\"dynCall_jijj\"]=function(){return(dynCall_jijj=Module[\"dynCall_jijj\"]=Module[\"asm\"][\"ei\"]).apply(null,arguments)};var dynCall_viiiijiiiiiiii=Module[\"dynCall_viiiijiiiiiiii\"]=function(){return(dynCall_viiiijiiiiiiii=Module[\"dynCall_viiiijiiiiiiii\"]=Module[\"asm\"][\"fi\"]).apply(null,arguments)};var dynCall_ij=Module[\"dynCall_ij\"]=function(){return(dynCall_ij=Module[\"dynCall_ij\"]=Module[\"asm\"][\"gi\"]).apply(null,arguments)};var dynCall_jjj=Module[\"dynCall_jjj\"]=function(){return(dynCall_jjj=Module[\"dynCall_jjj\"]=Module[\"asm\"][\"hi\"]).apply(null,arguments)};var dynCall_vjii=Module[\"dynCall_vjii\"]=function(){return(dynCall_vjii=Module[\"dynCall_vjii\"]=Module[\"asm\"][\"ii\"]).apply(null,arguments)};var dynCall_jjjjjjd=Module[\"dynCall_jjjjjjd\"]=function(){return(dynCall_jjjjjjd=Module[\"dynCall_jjjjjjd\"]=Module[\"asm\"][\"ji\"]).apply(null,arguments)};var dynCall_vjiiii=Module[\"dynCall_vjiiii\"]=function(){return(dynCall_vjiiii=Module[\"dynCall_vjiiii\"]=Module[\"asm\"][\"ki\"]).apply(null,arguments)};var dynCall_viiiiijiii=Module[\"dynCall_viiiiijiii\"]=function(){return(dynCall_viiiiijiii=Module[\"dynCall_viiiiijiii\"]=Module[\"asm\"][\"li\"]).apply(null,arguments)};var dynCall_jiij=Module[\"dynCall_jiij\"]=function(){return(dynCall_jiij=Module[\"dynCall_jiij\"]=Module[\"asm\"][\"mi\"]).apply(null,arguments)};var dynCall_iiiijjii=Module[\"dynCall_iiiijjii\"]=function(){return(dynCall_iiiijjii=Module[\"dynCall_iiiijjii\"]=Module[\"asm\"][\"ni\"]).apply(null,arguments)};var dynCall_iiiiijji=Module[\"dynCall_iiiiijji\"]=function(){return(dynCall_iiiiijji=Module[\"dynCall_iiiiijji\"]=Module[\"asm\"][\"oi\"]).apply(null,arguments)};var dynCall_viiijjii=Module[\"dynCall_viiijjii\"]=function(){return(dynCall_viiijjii=Module[\"dynCall_viiijjii\"]=Module[\"asm\"][\"pi\"]).apply(null,arguments)};var dynCall_viiiijji=Module[\"dynCall_viiiijji\"]=function(){return(dynCall_viiiijji=Module[\"dynCall_viiiijji\"]=Module[\"asm\"][\"qi\"]).apply(null,arguments)};var dynCall_viiiijjii=Module[\"dynCall_viiiijjii\"]=function(){return(dynCall_viiiijjii=Module[\"dynCall_viiiijjii\"]=Module[\"asm\"][\"ri\"]).apply(null,arguments)};var dynCall_viiiiijji=Module[\"dynCall_viiiiijji\"]=function(){return(dynCall_viiiiijji=Module[\"dynCall_viiiiijji\"]=Module[\"asm\"][\"si\"]).apply(null,arguments)};var dynCall_iidj=Module[\"dynCall_iidj\"]=function(){return(dynCall_iidj=Module[\"dynCall_iidj\"]=Module[\"asm\"][\"ti\"]).apply(null,arguments)};var dynCall_ijji=Module[\"dynCall_ijji\"]=function(){return(dynCall_ijji=Module[\"dynCall_ijji\"]=Module[\"asm\"][\"ui\"]).apply(null,arguments)};var dynCall_iiiiiiiij=Module[\"dynCall_iiiiiiiij\"]=function(){return(dynCall_iiiiiiiij=Module[\"dynCall_iiiiiiiij\"]=Module[\"asm\"][\"vi\"]).apply(null,arguments)};var dynCall_iiiiiiij=Module[\"dynCall_iiiiiiij\"]=function(){return(dynCall_iiiiiiij=Module[\"dynCall_iiiiiiij\"]=Module[\"asm\"][\"wi\"]).apply(null,arguments)};var dynCall_iiiiiiiiiiiij=Module[\"dynCall_iiiiiiiiiiiij\"]=function(){return(dynCall_iiiiiiiiiiiij=Module[\"dynCall_iiiiiiiiiiiij\"]=Module[\"asm\"][\"xi\"]).apply(null,arguments)};var dynCall_iiiiiiiji=Module[\"dynCall_iiiiiiiji\"]=function(){return(dynCall_iiiiiiiji=Module[\"dynCall_iiiiiiiji\"]=Module[\"asm\"][\"yi\"]).apply(null,arguments)};var dynCall_iiiidjj=Module[\"dynCall_iiiidjj\"]=function(){return(dynCall_iiiidjj=Module[\"dynCall_iiiidjj\"]=Module[\"asm\"][\"zi\"]).apply(null,arguments)};var dynCall_iiiijjj=Module[\"dynCall_iiiijjj\"]=function(){return(dynCall_iiiijjj=Module[\"dynCall_iiiijjj\"]=Module[\"asm\"][\"Ai\"]).apply(null,arguments)};var dynCall_jiiiiiijii=Module[\"dynCall_jiiiiiijii\"]=function(){return(dynCall_jiiiiiijii=Module[\"dynCall_jiiiiiijii\"]=Module[\"asm\"][\"Bi\"]).apply(null,arguments)};var dynCall_iiiijji=Module[\"dynCall_iiiijji\"]=function(){return(dynCall_iiiijji=Module[\"dynCall_iiiijji\"]=Module[\"asm\"][\"Ci\"]).apply(null,arguments)};var dynCall_jiiiiii=Module[\"dynCall_jiiiiii\"]=function(){return(dynCall_jiiiiii=Module[\"dynCall_jiiiiii\"]=Module[\"asm\"][\"Di\"]).apply(null,arguments)};var dynCall_iijiji=Module[\"dynCall_iijiji\"]=function(){return(dynCall_iijiji=Module[\"dynCall_iijiji\"]=Module[\"asm\"][\"Ei\"]).apply(null,arguments)};var dynCall_vjiiiji=Module[\"dynCall_vjiiiji\"]=function(){return(dynCall_vjiiiji=Module[\"dynCall_vjiiiji\"]=Module[\"asm\"][\"Fi\"]).apply(null,arguments)};var dynCall_jjjii=Module[\"dynCall_jjjii\"]=function(){return(dynCall_jjjii=Module[\"dynCall_jjjii\"]=Module[\"asm\"][\"Gi\"]).apply(null,arguments)};var dynCall_jji=Module[\"dynCall_jji\"]=function(){return(dynCall_jji=Module[\"dynCall_jji\"]=Module[\"asm\"][\"Hi\"]).apply(null,arguments)};var dynCall_viiijijiji=Module[\"dynCall_viiijijiji\"]=function(){return(dynCall_viiijijiji=Module[\"dynCall_viiijijiji\"]=Module[\"asm\"][\"Ii\"]).apply(null,arguments)};var dynCall_jiiijj=Module[\"dynCall_jiiijj\"]=function(){return(dynCall_jiiijj=Module[\"dynCall_jiiijj\"]=Module[\"asm\"][\"Ji\"]).apply(null,arguments)};var dynCall_iiiijii=Module[\"dynCall_iiiijii\"]=function(){return(dynCall_iiiijii=Module[\"dynCall_iiiijii\"]=Module[\"asm\"][\"Ki\"]).apply(null,arguments)};var dynCall_viiiijii=Module[\"dynCall_viiiijii\"]=function(){return(dynCall_viiiijii=Module[\"dynCall_viiiijii\"]=Module[\"asm\"][\"Li\"]).apply(null,arguments)};var dynCall_iijiii=Module[\"dynCall_iijiii\"]=function(){return(dynCall_iijiii=Module[\"dynCall_iijiii\"]=Module[\"asm\"][\"Mi\"]).apply(null,arguments)};var dynCall_jiiiiji=Module[\"dynCall_jiiiiji\"]=function(){return(dynCall_jiiiiji=Module[\"dynCall_jiiiiji\"]=Module[\"asm\"][\"Ni\"]).apply(null,arguments)};var dynCall_vijiijj=Module[\"dynCall_vijiijj\"]=function(){return(dynCall_vijiijj=Module[\"dynCall_vijiijj\"]=Module[\"asm\"][\"Oi\"]).apply(null,arguments)};var dynCall_vifiijj=Module[\"dynCall_vifiijj\"]=function(){return(dynCall_vifiijj=Module[\"dynCall_vifiijj\"]=Module[\"asm\"][\"Pi\"]).apply(null,arguments)};var dynCall_vidiijj=Module[\"dynCall_vidiijj\"]=function(){return(dynCall_vidiijj=Module[\"dynCall_vidiijj\"]=Module[\"asm\"][\"Qi\"]).apply(null,arguments)};var dynCall_viiiiij=Module[\"dynCall_viiiiij\"]=function(){return(dynCall_viiiiij=Module[\"dynCall_viiiiij\"]=Module[\"asm\"][\"Ri\"]).apply(null,arguments)};var dynCall_ijjiii=Module[\"dynCall_ijjiii\"]=function(){return(dynCall_ijjiii=Module[\"dynCall_ijjiii\"]=Module[\"asm\"][\"Si\"]).apply(null,arguments)};var dynCall_vijijjji=Module[\"dynCall_vijijjji\"]=function(){return(dynCall_vijijjji=Module[\"dynCall_vijijjji\"]=Module[\"asm\"][\"Ti\"]).apply(null,arguments)};var dynCall_viijiijj=Module[\"dynCall_viijiijj\"]=function(){return(dynCall_viijiijj=Module[\"dynCall_viijiijj\"]=Module[\"asm\"][\"Ui\"]).apply(null,arguments)};var dynCall_viijijj=Module[\"dynCall_viijijj\"]=function(){return(dynCall_viijijj=Module[\"dynCall_viijijj\"]=Module[\"asm\"][\"Vi\"]).apply(null,arguments)};var dynCall_viiiiijjji=Module[\"dynCall_viiiiijjji\"]=function(){return(dynCall_viiiiijjji=Module[\"dynCall_viiiiijjji\"]=Module[\"asm\"][\"Wi\"]).apply(null,arguments)};var dynCall_iiijiijj=Module[\"dynCall_iiijiijj\"]=function(){return(dynCall_iiijiijj=Module[\"dynCall_iiijiijj\"]=Module[\"asm\"][\"Xi\"]).apply(null,arguments)};var dynCall_viiijijjj=Module[\"dynCall_viiijijjj\"]=function(){return(dynCall_viiijijjj=Module[\"dynCall_viiijijjj\"]=Module[\"asm\"][\"Yi\"]).apply(null,arguments)};var dynCall_iijiijj=Module[\"dynCall_iijiijj\"]=function(){return(dynCall_iijiijj=Module[\"dynCall_iijiijj\"]=Module[\"asm\"][\"Zi\"]).apply(null,arguments)};var dynCall_viiijjjji=Module[\"dynCall_viiijjjji\"]=function(){return(dynCall_viiijjjji=Module[\"dynCall_viiijjjji\"]=Module[\"asm\"][\"_i\"]).apply(null,arguments)};var dynCall_viiiijiii=Module[\"dynCall_viiiijiii\"]=function(){return(dynCall_viiiijiii=Module[\"dynCall_viiiijiii\"]=Module[\"asm\"][\"$i\"]).apply(null,arguments)};var dynCall_viijiiii=Module[\"dynCall_viijiiii\"]=function(){return(dynCall_viijiiii=Module[\"dynCall_viijiiii\"]=Module[\"asm\"][\"aj\"]).apply(null,arguments)};var dynCall_vijjiiii=Module[\"dynCall_vijjiiii\"]=function(){return(dynCall_vijjiiii=Module[\"dynCall_vijjiiii\"]=Module[\"asm\"][\"bj\"]).apply(null,arguments)};var dynCall_vijijjiiiii=Module[\"dynCall_vijijjiiiii\"]=function(){return(dynCall_vijijjiiiii=Module[\"dynCall_vijijjiiiii\"]=Module[\"asm\"][\"cj\"]).apply(null,arguments)};var dynCall_vijjiiiii=Module[\"dynCall_vijjiiiii\"]=function(){return(dynCall_vijjiiiii=Module[\"dynCall_vijjiiiii\"]=Module[\"asm\"][\"dj\"]).apply(null,arguments)};var dynCall_iiijjji=Module[\"dynCall_iiijjji\"]=function(){return(dynCall_iiijjji=Module[\"dynCall_iiijjji\"]=Module[\"asm\"][\"ej\"]).apply(null,arguments)};var dynCall_iiiiiijji=Module[\"dynCall_iiiiiijji\"]=function(){return(dynCall_iiiiiijji=Module[\"dynCall_iiiiiijji\"]=Module[\"asm\"][\"fj\"]).apply(null,arguments)};var dynCall_iiiiijjj=Module[\"dynCall_iiiiijjj\"]=function(){return(dynCall_iiiiijjj=Module[\"dynCall_iiiiijjj\"]=Module[\"asm\"][\"gj\"]).apply(null,arguments)};var dynCall_jijiiii=Module[\"dynCall_jijiiii\"]=function(){return(dynCall_jijiiii=Module[\"dynCall_jijiiii\"]=Module[\"asm\"][\"hj\"]).apply(null,arguments)};var dynCall_viiijiji=Module[\"dynCall_viiijiji\"]=function(){return(dynCall_viiijiji=Module[\"dynCall_viiijiji\"]=Module[\"asm\"][\"ij\"]).apply(null,arguments)};var dynCall_iiijjjii=Module[\"dynCall_iiijjjii\"]=function(){return(dynCall_iiijjjii=Module[\"dynCall_iiijjjii\"]=Module[\"asm\"][\"jj\"]).apply(null,arguments)};var dynCall_iiiiijjji=Module[\"dynCall_iiiiijjji\"]=function(){return(dynCall_iiiiijjji=Module[\"dynCall_iiiiijjji\"]=Module[\"asm\"][\"kj\"]).apply(null,arguments)};var dynCall_viiiijjj=Module[\"dynCall_viiiijjj\"]=function(){return(dynCall_viiiijjj=Module[\"dynCall_viiiijjj\"]=Module[\"asm\"][\"lj\"]).apply(null,arguments)};var dynCall_viiiiijjj=Module[\"dynCall_viiiiijjj\"]=function(){return(dynCall_viiiiijjj=Module[\"dynCall_viiiiijjj\"]=Module[\"asm\"][\"mj\"]).apply(null,arguments)};var dynCall_viijiji=Module[\"dynCall_viijiji\"]=function(){return(dynCall_viijiji=Module[\"dynCall_viijiji\"]=Module[\"asm\"][\"nj\"]).apply(null,arguments)};function invoke_v(index){var sp=stackSave();try{getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiii(index,a1,a2,a3,a4){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_fiii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_diii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viif(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viid(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_i(index){var sp=stackSave();try{return getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiid(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iff(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_idd(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_idiii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iidii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viidii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vif(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vid(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_di(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiid(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_fi(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vifi(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vidi(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_dii(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iid(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiidiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiif(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiidiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_f(index){var sp=stackSave();try{return getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_d(index){var sp=stackSave();try{return getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_if(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_id(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_jiiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijj(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viijj(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_ji(index,a1){var sp=stackSave();try{return dynCall_ji(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jii(index,a1,a2){var sp=stackSave();try{return dynCall_jii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiiiij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iij(index,a1,a2,a3){var sp=stackSave();try{return dynCall_iij(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_j(index){var sp=stackSave();try{return dynCall_j(index)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viij(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viij(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijjj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vijjj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijj(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiijj(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viijji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiij(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiij(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vij(index,a1,a2,a3){var sp=stackSave();try{dynCall_vij(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiiij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiij(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiij(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iji(index,a1,a2,a3){var sp=stackSave();try{return dynCall_iji(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viji(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viji(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiijj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijjj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijjj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_ijjiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_ijjiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijj(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_vijj(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiiji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vj(index,a1,a2){var sp=stackSave();try{dynCall_vj(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiji(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiji(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiij(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiiij(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiijj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiijj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiiiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiijij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiiji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijj(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iijj(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiijji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiiiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiiiji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiii(index,a1,a2,a3){var sp=stackSave();try{return dynCall_jiii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vijiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vijiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiijiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viijiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiijiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijjii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijjii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijjiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iijjiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iijji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiijii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijjijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iijjijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iijii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vjjii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vjjii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiijji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jij(index,a1,a2,a3){var sp=stackSave();try{return dynCall_jij(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiij(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jiiij(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijjji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijjji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jiiiii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vjjijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_vjjijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jiiji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiiiji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vijij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiijjiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14){var sp=stackSave();try{return dynCall_iiiiijjiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viijij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_vijii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijjii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijjii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jijiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jijiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_vijiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jijjij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_jijjij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vijji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiiiij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_vijijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijjjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiiijjjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_jiijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiijiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_jiijiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_jiijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiijii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiijii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiijijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_jiijijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viijiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viijiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{dynCall_viiijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17){var sp=stackSave();try{dynCall_viijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_jiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_jiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_fiijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_fiijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_diijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_diijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_jiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_jiiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jj(index,a1,a2){var sp=stackSave();try{return dynCall_jj(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jd(index,a1){var sp=stackSave();try{return dynCall_jd(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jf(index,a1){var sp=stackSave();try{return dynCall_jf(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiiiiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_ijji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_ijji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijjj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijjj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16){var sp=stackSave();try{dynCall_vijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jijijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_jijijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijjij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijjij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiiiij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{return dynCall_iiiiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiiiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13){var sp=stackSave();try{return dynCall_iiiiiiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiij(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_jiij(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_ij(index,a1,a2){var sp=stackSave();try{return dynCall_ij(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vjiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vjiiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14){var sp=stackSave();try{dynCall_viiiijiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jjj(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_jjj(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vjii(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_vjii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jjjjjjd(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_jjjjjjd(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iidj(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iidj(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiidjj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiidjj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vjiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vjiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jjjii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jjjii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jji(index,a1,a2,a3){var sp=stackSave();try{return dynCall_jji(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijijiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiijijiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiijij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiijj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiijj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiijii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiijii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iijiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jiiiiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiiiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_vijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vifiijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vifiijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vidiijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vidiijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiiiij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_vijijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jijj(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jijj(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiijijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijjjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiijjjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viijiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijijjiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13){var sp=stackSave();try{dynCall_vijijjiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijjiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_vijjiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_vijjiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_vijjiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiijjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiijjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiijiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiijiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_jijiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jijiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_iiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_iiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}function invoke_viiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!==\"longjmp\")throw e;_setThrew(1,0)}}Module[\"ccall\"]=ccall;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}var calledMain=false;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args){var entryFunction=Module[\"_main\"];var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exit(ret,true);return ret}catch(e){return handleException(e)}finally{calledMain=true}}function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain(args);postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){EXITSTATUS=status;if(keepRuntimeAlive()){}else{exitRuntime()}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return DuckDB.ready\n}\n);\n})();\nexport default DuckDB;", "import { DuckDBModule } from './duckdb_module';\nimport { DuckDBBindingsBase } from './bindings_base';\nimport { DuckDBRuntime } from './runtime';\nimport { LogLevel, LogTopic, LogOrigin, LogEvent } from '../log';\nimport { Logger } from '../log';\nimport { InstantiationProgress } from '.';\n\n/** DuckDB bindings for the browser */\nexport abstract class DuckDBBrowserBindings extends DuckDBBindingsBase {\n    /** The path of the wasm module */\n    protected readonly mainModuleURL: string;\n    /** The path of the pthread worker script */\n    protected readonly pthreadWorkerURL: string | null;\n\n    /** Constructor */\n    public constructor(logger: Logger, runtime: DuckDBRuntime, mainModuleURL: string, pthreadWorkerURL: string | null) {\n        super(logger, runtime);\n        this.mainModuleURL = mainModuleURL;\n        this.pthreadWorkerURL = pthreadWorkerURL;\n    }\n\n    /** Locate a file */\n    protected locateFile(path: string, prefix: string): string {\n        if (path.endsWith('.wasm')) {\n            return this.mainModuleURL;\n        }\n        if (path.endsWith('.worker.js')) {\n            if (!this.pthreadWorkerURL) {\n                throw new Error('Missing DuckDB worker URL!');\n            }\n            return this.pthreadWorkerURL!;\n        }\n        throw new Error(`WASM instantiation requested unexpected file: prefix=${prefix} path=${path}`);\n    }\n\n    /** Instantiate the wasm module */\n    protected instantiateWasm(\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        imports: any,\n        success: (instance: WebAssembly.Instance, module: WebAssembly.Module) => void,\n    ): Emscripten.WebAssemblyExports {\n        globalThis.DUCKDB_RUNTIME = this._runtime;\n        const handlers = this.onInstantiationProgress;\n\n        // Does the browser support transform streams?\n        if (\n            typeof TransformStream === 'function' &&\n            ReadableStream.prototype.pipeThrough &&\n            WebAssembly.instantiateStreaming\n        ) {\n            // We rely on the following here:\n            //\n            // ...when a Request object is created using the Request.Request constructor,\n            // the value of the mode property for that Request is set to cors.\n            // [ref: MDN]\n            //\n            // Cloudflare throws when mode: 'cors' is set\n            //\n            const fetchWithProgress = async () => {\n                // Try to determine file size\n                const request = new Request(this.mainModuleURL);\n                const response = await fetch(request);\n                const contentLengthHdr = response.headers.get('content-length');\n                const contentLength = contentLengthHdr ? parseInt(contentLengthHdr, 10) || 0 : 0;\n\n                // Transform the stream\n                const start = new Date();\n                const progress: InstantiationProgress = {\n                    startedAt: start,\n                    updatedAt: start,\n                    bytesTotal: contentLength || 0,\n                    bytesLoaded: 0,\n                };\n                const tracker = {\n                    transform(chunk: any, ctrl: TransformStreamDefaultController) {\n                        progress.bytesLoaded += chunk.byteLength;\n                        const now = new Date();\n                        if (now.getTime() - progress.updatedAt.getTime() < 20) {\n                            progress.updatedAt = now;\n                            ctrl.enqueue(chunk);\n                            return;\n                        }\n                        for (const p of handlers) {\n                            p(progress);\n                        }\n                        ctrl.enqueue(chunk);\n                    },\n                };\n                const ts = new TransformStream(tracker);\n                return new Response(response.body?.pipeThrough(ts), response);\n            };\n            // Instantiate streaming\n            const response = fetchWithProgress();\n            WebAssembly.instantiateStreaming(response, imports).then(output => {\n                success(output.instance, output.module);\n            });\n        } else {\n            // Otherwise we fall back to XHRs\n            const xhr = new XMLHttpRequest();\n            const url = this.mainModuleURL;\n            const start = new Date();\n            const progress: InstantiationProgress = {\n                startedAt: start,\n                updatedAt: start,\n                bytesTotal: 0,\n                bytesLoaded: 0,\n            };\n            xhr.open('GET', url);\n            xhr.responseType = 'arraybuffer';\n            xhr.onerror = error => {\n                this.logger.log({\n                    timestamp: new Date(),\n                    level: LogLevel.ERROR,\n                    origin: LogOrigin.BINDINGS,\n                    topic: LogTopic.INSTANTIATE,\n                    event: LogEvent.ERROR,\n                    value: 'Failed to load WASM: ' + error,\n                });\n                throw new Error(error.toString());\n            };\n            xhr.onprogress = e => {\n                progress.bytesTotal = e.total;\n                progress.bytesLoaded = e.loaded;\n                const now = new Date();\n                if (now.getTime() - progress.updatedAt.getTime() < 20) {\n                    progress.updatedAt = now;\n                    return;\n                }\n                for (const p of handlers) {\n                    p(progress);\n                }\n            };\n            xhr.onload = () => {\n                WebAssembly.instantiate(xhr.response, imports)\n                    .then(output => {\n                        success(output.instance, output.module);\n                    })\n                    .catch(error => {\n                        this.logger.log({\n                            timestamp: new Date(),\n                            level: LogLevel.ERROR,\n                            origin: LogOrigin.BINDINGS,\n                            topic: LogTopic.INSTANTIATE,\n                            event: LogEvent.ERROR,\n                            value: 'Failed to instantiate WASM: ' + error,\n                        });\n                        throw new Error(error);\n                    });\n            };\n            xhr.send();\n        }\n        return [];\n    }\n\n    /// Instantiation must be done by the browser variants\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\n}\n", "import DuckDBWasm from './duckdb-mvp.js';\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\nimport { DuckDBModule } from './duckdb_module';\nimport { DuckDBRuntime } from './runtime';\nimport { Logger } from '../log';\n\n/** DuckDB bindings for the browser */\nexport class DuckDB extends DuckDBBrowserBindings {\n    /** Constructor */\n    public constructor(\n        logger: Logger,\n        runtime: DuckDBRuntime,\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n    ) {\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\n    }\n\n    /** Instantiate the bindings */\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\n        return DuckDBWasm({\n            ...moduleOverrides,\n            instantiateWasm: this.instantiateWasm.bind(this),\n            locateFile: this.locateFile.bind(this),\n        });\n    }\n}\n", "\nvar DuckDB = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(DuckDB) {\n  DuckDB = DuckDB || {};\n\nvar Module=typeof DuckDB!==\"undefined\"?DuckDB:{};var objAssign=Object.assign;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=function(){if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}};read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=function readAsync(filename,onload,onerror){requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"./duckdb-eh.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"./duckdb-eh.wasm\",import.meta.url).toString()}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"ea\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"ha\"];addOnInit(Module[\"asm\"][\"fa\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){}function ___syscall_access(path,amode){path=SYSCALLS.getStr(path);return SYSCALLS.doAccess(path,amode)}function SOCKFS(){err(\"missing function: $SOCKFS\");abort(-1)}function FS(){err(\"missing function: $FS\");abort(-1)}function getSocketFromFD(fd){var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function inetNtop4(addr){return(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255)}function inetNtop6(ints){var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str}function readSockaddr(sa,salen){var family=HEAP16[sa>>1];var port=_ntohs(HEAPU16[sa+2>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>2];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>2],HEAP32[sa+12>>2],HEAP32[sa+16>>2],HEAP32[sa+20>>2]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}}function inetPton4(str){var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}function jstoi_q(str){return parseInt(str)}function inetPton6(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]===\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr:function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};function getSocketAddress(addrp,addrlen,allowNull){if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}function ___syscall_bind(fd,addr,addrlen){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.bind(sock,info.addr,info.port);return 0}function ___syscall_connect(fd,addr,addrlen){var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_fstat64(fd,buf){}function ___syscall_fstatat64(dirfd,path,buf,flags){}function ___syscall_ftruncate64(fd,low,high){}function ___syscall_getdents64(fd,dirp,count){}function zeroMemory(address,size){HEAPU8.fill(0,address,address+size)}function writeSockaddr(sa,family,addr,port,addrlen){switch(family){case 2:addr=inetPton4(addr);zeroMemory(sa,16);if(addrlen){HEAP32[addrlen>>2]=16}HEAP16[sa>>1]=family;HEAP32[sa+4>>2]=addr;HEAP16[sa+2>>1]=_htons(port);break;case 10:addr=inetPton6(addr);zeroMemory(sa,28);if(addrlen){HEAP32[addrlen>>2]=28}HEAP32[sa>>2]=family;HEAP32[sa+8>>2]=addr[0];HEAP32[sa+12>>2]=addr[1];HEAP32[sa+16>>2]=addr[2];HEAP32[sa+20>>2]=addr[3];HEAP16[sa+2>>1]=_htons(port);break;default:return 5}return 0}function ___syscall_getpeername(fd,addr,addrlen){var sock=getSocketFromFD(fd);if(!sock.daddr){return-53}var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport,addrlen);return 0}function ___syscall_getsockopt(fd,level,optname,optval,optlen){var sock=getSocketFromFD(fd);if(level===1){if(optname===4){HEAP32[optval>>2]=sock.error;HEAP32[optlen>>2]=4;sock.error=null;return 0}}return-50}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_lstat64(path,buf){}function ___syscall_mkdir(path,mode){path=SYSCALLS.getStr(path);return SYSCALLS.doMkdir(path,mode)}function ___syscall_open(path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_recvfrom(fd,buf,len,flags,addr,addrlen){var sock=getSocketFromFD(fd);var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port,addrlen)}HEAPU8.set(msg.buffer,buf);return msg.buffer.byteLength}function ___syscall_rename(old_path,new_path){}function ___syscall_rmdir(path){}function ___syscall_sendto(fd,message,length,flags,addr,addr_len){}function ___syscall_socket(domain,type,protocol){}function ___syscall_stat64(path,buf){}function ___syscall_unlink(path){}function __dlopen_js(filename,flag){abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")}function __dlsym_js(handle,symbol){abort(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")}function _abort(){abort(\"\")}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=(()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6})}else _emscripten_get_now=(()=>performance.now());var _emscripten_get_now_is_monotonic=true;function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function _duckdb_web_fs_directory_create(path,pathLen){return globalThis.DUCKDB_RUNTIME.createDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_list_files(path,pathLen){return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module,path,pathLen)}function _duckdb_web_fs_directory_remove(path,pathLen){return globalThis.DUCKDB_RUNTIME.removeDirectory(Module,path,pathLen)}function _duckdb_web_fs_file_close(fileId){return globalThis.DUCKDB_RUNTIME.closeFile(Module,fileId)}function _duckdb_web_fs_file_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkFile(Module,path,pathLen)}function _duckdb_web_fs_file_get_last_modified_time(fileId){return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module,fileId)}function _duckdb_web_fs_file_move(from,fromLen,to,toLen){return globalThis.DUCKDB_RUNTIME.moveFile(Module,from,fromLen,to,toLen)}function _duckdb_web_fs_file_open(fileId,flags){return globalThis.DUCKDB_RUNTIME.openFile(Module,fileId,flags)}function _duckdb_web_fs_file_read(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.readFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_file_truncate(fileId,newSize){return globalThis.DUCKDB_RUNTIME.truncateFile(Module,fileId,newSize)}function _duckdb_web_fs_file_write(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.writeFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_glob(path,pathLen){return globalThis.DUCKDB_RUNTIME.glob(Module,path,pathLen)}function _duckdb_web_test_platform_feature(feature){return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module,feature)}function _duckdb_web_udf_scalar_call(funcId,descPtr,descSize,ptrsPtr,ptrsSize,response){return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module,funcId,descPtr,descSize,ptrsPtr,ptrsSize,response)}function _emscripten_get_heap_max(){return 2147483648}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){return 0}function _fd_pread(fd,iov,iovcnt,offset_low,offset_high,pnum){var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt,offset_low);HEAP32[pnum>>2]=num;return 0}function _fd_pwrite(fd,iov,iovcnt,offset_low,offset_high,pnum){var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt,offset_low);HEAP32[pnum>>2]=num;return 0}function _fd_read(fd,iov,iovcnt,pnum){var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_sync(fd){var stream=SYSCALLS.getStreamFromFD(fd);if(stream.stream_ops&&stream.stream_ops.fsync){return-stream.stream_ops.fsync(stream)}return 0}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov>>2];var len=HEAP32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _getaddrinfo(node,service,hint,out){var addr=0;var port=0;var flags=0;var family=0;var type=0;var proto=0;var ai;function allocaddrinfo(family,type,proto,canon,addr,port){var sa,salen,ai;var errno;salen=family===10?28:16;addr=family===10?inetNtop6(addr):inetNtop4(addr);sa=_malloc(salen);errno=writeSockaddr(sa,family,addr,port);assert(!errno);ai=_malloc(32);HEAP32[ai+4>>2]=family;HEAP32[ai+8>>2]=type;HEAP32[ai+12>>2]=proto;HEAP32[ai+24>>2]=canon;HEAP32[ai+20>>2]=sa;if(family===10){HEAP32[ai+16>>2]=28}else{HEAP32[ai+16>>2]=16}HEAP32[ai+28>>2]=0;return ai}if(hint){flags=HEAP32[hint>>2];family=HEAP32[hint+4>>2];type=HEAP32[hint+8>>2];proto=HEAP32[hint+12>>2]}if(type&&!proto){proto=type===2?17:6}if(!type&&proto){type=proto===17?2:1}if(proto===0){proto=6}if(type===0){type=1}if(!node&&!service){return-2}if(flags&~(1|2|4|1024|8|16|32)){return-1}if(hint!==0&&HEAP32[hint>>2]&2&&!node){return-1}if(flags&32){return-2}if(type!==0&&type!==1&&type!==2){return-7}if(family!==0&&family!==2&&family!==10){return-6}if(service){service=UTF8ToString(service);port=parseInt(service,10);if(isNaN(port)){if(flags&1024){return-2}return-8}}if(!node){if(family===0){family=2}if((flags&1)===0){if(family===2){addr=_htonl(2130706433)}else{addr=[0,0,0,1]}}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAP32[out>>2]=ai;return 0}node=UTF8ToString(node);addr=inetPton4(node);if(addr!==null){if(family===0||family===2){family=2}else if(family===10&&flags&8){addr=[0,0,_htonl(65535),addr];family=10}else{return-2}}else{addr=inetPton6(node);if(addr!==null){if(family===0||family===10){family=10}else{return-2}}}if(addr!=null){ai=allocaddrinfo(family,type,proto,node,addr,port);HEAP32[out>>2]=ai;return 0}if(flags&4){return-2}node=DNS.lookup_name(node);addr=inetPton4(node);if(family===0){family=2}else if(family===10){addr=[0,0,_htonl(65535),addr]}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAP32[out>>2]=ai;return 0}function getRandomDevice(){if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");return function(){return crypto_module[\"randomBytes\"](1)[0]}}catch(e){}}return function(){abort(\"randomDevice\")}}function _getentropy(buffer,size){if(!_getentropy.randomDevice){_getentropy.randomDevice=getRandomDevice()}for(var i=0;i<size;i++){HEAP8[buffer+i>>0]=_getentropy.randomDevice()}return 0}function _getnameinfo(sa,salen,node,nodelen,serv,servlen,flags){var info=readSockaddr(sa,salen);if(info.errno){return-6}var port=info.port;var addr=info.addr;var overflowed=false;if(node&&nodelen){var lookup;if(flags&1||!(lookup=DNS.lookup_addr(addr))){if(flags&8){return-2}}else{addr=lookup}var numBytesWrittenExclNull=stringToUTF8(addr,node,nodelen);if(numBytesWrittenExclNull+1>=nodelen){overflowed=true}}if(serv&&servlen){port=\"\"+port;var numBytesWrittenExclNull=stringToUTF8(port,serv,servlen);if(numBytesWrittenExclNull+1>=servlen){overflowed=true}}if(overflowed){return-12}return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"},\"%V\":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={\"a\":___assert_fail,\"R\":___syscall__newselect,\"L\":___syscall_access,\"T\":___syscall_bind,\"S\":___syscall_connect,\"b\":___syscall_fcntl64,\"$\":___syscall_fstat64,\"Z\":___syscall_fstatat64,\"W\":___syscall_ftruncate64,\"X\":___syscall_getdents64,\"N\":___syscall_getpeername,\"Q\":___syscall_getsockopt,\"ba\":___syscall_ioctl,\"Y\":___syscall_lstat64,\"aa\":___syscall_mkdir,\"q\":___syscall_open,\"O\":___syscall_recvfrom,\"J\":___syscall_rename,\"o\":___syscall_rmdir,\"P\":___syscall_sendto,\"k\":___syscall_socket,\"_\":___syscall_stat64,\"p\":___syscall_unlink,\"m\":__dlopen_js,\"U\":__dlsym_js,\"d\":_abort,\"n\":_clock_gettime,\"D\":_duckdb_web_fs_directory_create,\"E\":_duckdb_web_fs_directory_exists,\"B\":_duckdb_web_fs_directory_list_files,\"C\":_duckdb_web_fs_directory_remove,\"h\":_duckdb_web_fs_file_close,\"z\":_duckdb_web_fs_file_exists,\"G\":_duckdb_web_fs_file_get_last_modified_time,\"A\":_duckdb_web_fs_file_move,\"H\":_duckdb_web_fs_file_open,\"f\":_duckdb_web_fs_file_read,\"F\":_duckdb_web_fs_file_truncate,\"i\":_duckdb_web_fs_file_write,\"y\":_duckdb_web_fs_glob,\"g\":_duckdb_web_test_platform_feature,\"I\":_duckdb_web_udf_scalar_call,\"r\":_emscripten_get_heap_max,\"ca\":_emscripten_memcpy_big,\"da\":_emscripten_resize_heap,\"t\":_environ_get,\"u\":_environ_sizes_get,\"c\":_fd_close,\"w\":_fd_pread,\"v\":_fd_pwrite,\"j\":_fd_read,\"x\":_fd_seek,\"K\":_fd_sync,\"e\":_fd_write,\"l\":_getaddrinfo,\"V\":_getentropy,\"M\":_getnameinfo,\"s\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _main=Module[\"_main\"]=function(){return(_main=Module[\"_main\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=function(){return(_duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=function(){return(_duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=function(){return(_duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _duckdb_web_reset=Module[\"_duckdb_web_reset\"]=function(){return(_duckdb_web_reset=Module[\"_duckdb_web_reset\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _duckdb_web_connect=Module[\"_duckdb_web_connect\"]=function(){return(_duckdb_web_connect=Module[\"_duckdb_web_connect\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=function(){return(_duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=function(){return(_duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=function(){return(_duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _duckdb_web_open=Module[\"_duckdb_web_open\"]=function(){return(_duckdb_web_open=Module[\"_duckdb_web_open\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=function(){return(_duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=function(){return(_duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=function(){return(_duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=function(){return(_duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=function(){return(_duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=function(){return(_duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=function(){return(_duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=function(){return(_duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _duckdb_web_fs_set_file_descriptor=Module[\"_duckdb_web_fs_set_file_descriptor\"]=function(){return(_duckdb_web_fs_set_file_descriptor=Module[\"_duckdb_web_fs_set_file_descriptor\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=function(){return(_duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=function(){return(_duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=function(){return(_duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=function(){return(_duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=function(){return(_duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=function(){return(_duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=function(){return(_duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=function(){return(_duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=function(){return(_duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=function(){return(_duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=function(){return(_duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=function(){return(_duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=function(){return(_duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _duckdb_web_query_send=Module[\"_duckdb_web_query_send\"]=function(){return(_duckdb_web_query_send=Module[\"_duckdb_web_query_send\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=function(){return(_duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=function(){return(_duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var _duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=function(){return(_duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var _duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=function(){return(_duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var _duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=function(){return(_duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _htonl=Module[\"_htonl\"]=function(){return(_htonl=Module[\"_htonl\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var _htons=Module[\"_htons\"]=function(){return(_htons=Module[\"_htons\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _ntohs=Module[\"_ntohs\"]=function(){return(_ntohs=Module[\"_ntohs\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};Module[\"ccall\"]=ccall;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}var calledMain=false;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args){var entryFunction=Module[\"_main\"];var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exit(ret,true);return ret}catch(e){return handleException(e)}finally{calledMain=true}}function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain(args);postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){EXITSTATUS=status;if(keepRuntimeAlive()){}else{exitRuntime()}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return DuckDB.ready\n}\n);\n})();\nexport default DuckDB;", "import DuckDBWasm from './duckdb-eh.js';\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\nimport { DuckDBModule } from './duckdb_module';\nimport { DuckDBRuntime } from './runtime';\nimport { Logger } from '../log';\n\n/** DuckDB bindings for the browser */\nexport class DuckDB extends DuckDBBrowserBindings {\n    /** Constructor */\n    public constructor(\n        logger: Logger,\n        runtime: DuckDBRuntime,\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n    ) {\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\n    }\n\n    /** Instantiate the bindings */\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\n        return DuckDBWasm({\n            ...moduleOverrides,\n            instantiateWasm: this.instantiateWasm.bind(this),\n            locateFile: this.locateFile.bind(this),\n        });\n    }\n}\n\nexport default DuckDB;\n", "export * from '../bindings';\nexport * from '../log';\nexport * from '../platform';\nexport * from '../status';\nexport * from '../version';\nexport { DEFAULT_RUNTIME } from '../bindings/runtime';\nexport { BROWSER_RUNTIME } from '../bindings/runtime_browser';\n\nimport { Logger } from '../log';\nimport { DuckDBRuntime, DuckDBBindings } from '../bindings';\nimport { DuckDBBundles, getPlatformFeatures } from '../platform';\nimport { DuckDB as DuckDBMVP } from '../bindings/bindings_browser_mvp';\nimport { DuckDB as DuckDBNext } from '../bindings/bindings_browser_eh';\n\nexport async function createDuckDB(\n    bundles: DuckDBBundles,\n    logger: Logger,\n    runtime: DuckDBRuntime,\n): Promise<DuckDBBindings> {\n    const platform = await getPlatformFeatures();\n    if (platform.wasmExceptions) {\n        if (bundles.eh) {\n            return new DuckDBNext(logger, runtime, bundles.eh!.mainModule);\n        }\n    }\n    return new DuckDBMVP(logger, runtime, bundles.mvp.mainModule);\n}\n", "import * as arrow from 'apache-arrow';\nimport { AsyncDuckDB } from './async_bindings';\nimport { LogLevel, LogTopic, LogOrigin, LogEvent } from '../log';\nimport { ArrowInsertOptions, CSVInsertOptions, JSONInsertOptions } from '../bindings/insert_options';\n\n/** A thin helper to memoize the connection id */\nexport class AsyncDuckDBConnection {\n    /** The async duckdb */\n    protected readonly _bindings: AsyncDuckDB;\n    /** The conn handle */\n    protected readonly _conn: number;\n\n    constructor(bindings: AsyncDuckDB, conn: number) {\n        this._bindings = bindings;\n        this._conn = conn;\n    }\n\n    /** Access the database bindings */\n    public get bindings(): AsyncDuckDB {\n        return this._bindings;\n    }\n\n    /** Disconnect from the database */\n    public async close(): Promise<void> {\n        return this._bindings.disconnect(this._conn);\n    }\n\n    /** Brave souls may use this function to consume the underlying connection id */\n    public useUnsafe<R>(callback: (bindings: AsyncDuckDB, conn: number) => R) {\n        return callback(this._bindings, this._conn);\n    }\n\n    /** Run a query */\n    public async query<T extends { [key: string]: arrow.DataType } = any>(text: string): Promise<arrow.Table<T>> {\n        this._bindings.logger.log({\n            timestamp: new Date(),\n            level: LogLevel.INFO,\n            origin: LogOrigin.ASYNC_DUCKDB,\n            topic: LogTopic.QUERY,\n            event: LogEvent.RUN,\n            value: text,\n        });\n        const buffer = await this._bindings.runQuery(this._conn, text);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\n    }\n\n    /** Send a query */\n    public async send<T extends { [key: string]: arrow.DataType } = any>(\n        text: string,\n    ): Promise<arrow.AsyncRecordBatchStreamReader<T>> {\n        this._bindings.logger.log({\n            timestamp: new Date(),\n            level: LogLevel.INFO,\n            origin: LogOrigin.ASYNC_DUCKDB,\n            topic: LogTopic.QUERY,\n            event: LogEvent.RUN,\n            value: text,\n        });\n        const header = await this._bindings.sendQuery(this._conn, text);\n        const iter = new AsyncResultStreamIterator(this._bindings, this._conn, header);\n        const reader = await arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isAsync());\n        console.assert(reader.isStream());\n        return reader as unknown as arrow.AsyncRecordBatchStreamReader<T>; // XXX\n    }\n\n    /** Get table names */\n    public async getTableNames(query: string): Promise<string[]> {\n        return await this._bindings.getTableNames(this._conn, query);\n    }\n\n    /** Create a prepared statement */\n    public async prepare<T extends { [key: string]: arrow.DataType } = any>(\n        text: string,\n    ): Promise<AsyncPreparedStatement> {\n        const stmt = await this._bindings.createPrepared(this._conn, text);\n        return new AsyncPreparedStatement<T>(this._bindings, this._conn, stmt);\n    }\n\n    /** Insert an arrow table */\n    public async insertArrowTable(table: arrow.Table, options: ArrowInsertOptions): Promise<void> {\n        const buffer = arrow.tableToIPC(table, 'stream');\n        await this.insertArrowFromIPCStream(buffer, options);\n    }\n    /** Insert an arrow table from an ipc stream */\n    public async insertArrowFromIPCStream(buffer: Uint8Array, options: ArrowInsertOptions): Promise<void> {\n        await this._bindings.insertArrowFromIPCStream(this._conn, buffer, options);\n    }\n    /** Insert csv file from path */\n    public async insertCSVFromPath(text: string, options: CSVInsertOptions): Promise<void> {\n        await this._bindings.insertCSVFromPath(this._conn, text, options);\n    }\n    /** Insert json file from path */\n    public async insertJSONFromPath(text: string, options: JSONInsertOptions): Promise<void> {\n        await this._bindings.insertJSONFromPath(this._conn, text, options);\n    }\n}\n\n/** An async result stream iterator */\nexport class AsyncResultStreamIterator implements AsyncIterable<Uint8Array> {\n    /** First chunk? */\n    protected _first: boolean;\n    /** Reached end of stream? */\n    protected _depleted: boolean;\n    /** In-flight */\n    protected _inFlight: Promise<Uint8Array> | null;\n\n    constructor(\n        protected readonly db: AsyncDuckDB,\n        protected readonly conn: number,\n        protected readonly header: Uint8Array,\n    ) {\n        this._first = true;\n        this._depleted = false;\n        this._inFlight = null;\n    }\n\n    async next(): Promise<IteratorResult<Uint8Array>> {\n        if (this._first) {\n            this._first = false;\n            return { done: false, value: this.header };\n        }\n        if (this._depleted) {\n            return { done: true, value: null };\n        }\n        let buffer: Uint8Array;\n        if (this._inFlight != null) {\n            buffer = await this._inFlight;\n            this._inFlight = null;\n        } else {\n            buffer = await this.db.fetchQueryResults(this.conn);\n        }\n        this._depleted = buffer.length == 0;\n        if (!this._depleted) {\n            this._inFlight = this.db.fetchQueryResults(this.conn);\n        }\n        return {\n            done: this._depleted,\n            value: buffer,\n        };\n    }\n\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\n\n/** A thin helper to bind the prepared statement id */\nexport class AsyncPreparedStatement<T extends { [key: string]: arrow.DataType } = any> {\n    /** The bindings */\n    protected readonly bindings: AsyncDuckDB;\n    /** The connection id */\n    protected readonly connectionId: number;\n    /** The statement id */\n    protected readonly statementId: number;\n\n    /** Constructor */\n    constructor(bindings: AsyncDuckDB, connectionId: number, statementId: number) {\n        this.bindings = bindings;\n        this.connectionId = connectionId;\n        this.statementId = statementId;\n    }\n\n    /** Close a prepared statement */\n    public async close() {\n        await this.bindings.closePrepared(this.connectionId, this.statementId);\n    }\n\n    /** Run a prepared statement */\n    public async query(...params: any[]): Promise<arrow.Table<T>> {\n        const buffer = await this.bindings.runPrepared(this.connectionId, this.statementId, params);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\n    }\n\n    /** Send a prepared statement */\n    public async send(...params: any[]): Promise<arrow.AsyncRecordBatchStreamReader<T>> {\n        const header = await this.bindings.sendPrepared(this.connectionId, this.statementId, params);\n        const iter = new AsyncResultStreamIterator(this.bindings, this.connectionId, header);\n        const reader = await arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isAsync());\n        console.assert(reader.isStream());\n        return reader as unknown as arrow.AsyncRecordBatchStreamReader<T>; // XXX\n    }\n}\n", "import { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from '../bindings/insert_options';\nimport { LogEntryVariant } from '../log';\nimport { ScriptTokens } from '../bindings/tokens';\nimport { FileStatistics } from '../bindings/file_stats';\nimport { DuckDBConfig } from '../bindings/config';\nimport { WebFile } from '../bindings/web_file';\nimport { InstantiationProgress } from '../bindings/progress';\n\nexport type ConnectionID = number;\nexport type StatementID = number;\n\nexport enum WorkerRequestType {\n    CLOSE_PREPARED = 'CLOSE_PREPARED',\n    COLLECT_FILE_STATISTICS = 'COLLECT_FILE_STATISTICS',\n    CONNECT = 'CONNECT',\n    COPY_FILE_TO_BUFFER = 'COPY_FILE_TO_BUFFER',\n    COPY_FILE_TO_PATH = 'COPY_FILE_TO_PATH',\n    CREATE_PREPARED = 'CREATE_PREPARED',\n    DISCONNECT = 'DISCONNECT',\n    DROP_FILE = 'DROP_FILE',\n    DROP_FILES = 'DROP_FILES',\n    EXPORT_FILE_STATISTICS = 'EXPORT_FILE_STATISTICS',\n    FETCH_QUERY_RESULTS = 'FETCH_QUERY_RESULTS',\n    FLUSH_FILES = 'FLUSH_FILES',\n    GET_FEATURE_FLAGS = 'GET_FEATURE_FLAGS',\n    GET_TABLE_NAMES = 'GET_TABLE_NAMES',\n    GET_VERSION = 'GET_VERSION',\n    GLOB_FILE_INFOS = 'GLOB_FILE_INFOS',\n    INSERT_ARROW_FROM_IPC_STREAM = 'INSERT_ARROW_FROM_IPC_STREAM',\n    INSERT_CSV_FROM_PATH = 'IMPORT_CSV_FROM_PATH',\n    INSERT_JSON_FROM_PATH = 'IMPORT_JSON_FROM_PATH',\n    INSTANTIATE = 'INSTANTIATE',\n    OPEN = 'OPEN',\n    PING = 'PING',\n    REGISTER_FILE_BUFFER = 'REGISTER_FILE_BUFFER',\n    REGISTER_FILE_HANDLE = 'REGISTER_FILE_HANDLE',\n    REGISTER_FILE_URL = 'REGISTER_FILE_URL',\n    RESET = 'RESET',\n    RUN_PREPARED = 'RUN_PREPARED',\n    RUN_QUERY = 'RUN_QUERY',\n    SEND_PREPARED = 'SEND_PREPARED',\n    SEND_QUERY = 'SEND_QUERY',\n    TOKENIZE = 'TOKENIZE',\n}\n\nexport enum WorkerResponseType {\n    CONNECTION_INFO = 'CONNECTION_INFO',\n    ERROR = 'ERROR',\n    FEATURE_FLAGS = 'FEATURE_FLAGS',\n    FILE_BUFFER = 'FILE_BUFFER',\n    FILE_INFOS = 'FILE_INFOS',\n    FILE_SIZE = 'FILE_SIZE',\n    FILE_STATISTICS = 'FILE_STATISTICS',\n    INSTANTIATE_PROGRESS = 'INSTANTIATE_PROGRESS',\n    LOG = 'LOG',\n    OK = 'OK',\n    PREPARED_STATEMENT_ID = 'PREPARED_STATEMENT_ID',\n    QUERY_PLAN = 'QUERY_PLAN',\n    QUERY_RESULT = 'QUERY_RESULT',\n    QUERY_RESULT_CHUNK = 'QUERY_RESULT_CHUNK',\n    QUERY_START = 'QUERY_START',\n    REGISTERED_FILE = 'REGISTERED_FILE',\n    SCRIPT_TOKENS = 'SCRIPT_TOKENS',\n    SUCCESS = 'SUCCESS',\n    TABLE_NAMES = 'TABLE_NAMES',\n    VERSION_STRING = 'VERSION_STRING',\n}\n\nexport type WorkerRequest<T, P> = {\n    readonly messageId: number;\n    readonly type: T;\n    readonly data: P;\n};\n\nexport type WorkerResponse<T, P> = {\n    readonly messageId: number;\n    readonly requestId: number;\n    readonly type: T;\n    readonly data: P;\n};\n\nexport type WorkerTaskReturnType<T extends WorkerTaskVariant> = T extends WorkerTask<any, any, infer P> ? P : never;\n\nexport class WorkerTask<T, D, P> {\n    readonly type: T;\n    readonly data: D;\n    promise: Promise<P>;\n    promiseResolver: (value: P | PromiseLike<P>) => void = () => {};\n    promiseRejecter: (value: any) => void = () => {};\n\n    constructor(type: T, data: D) {\n        this.type = type;\n        this.data = data;\n        this.promise = new Promise<P>(\n            (resolve: (value: P | PromiseLike<P>) => void, reject: (reason?: void) => void) => {\n                this.promiseResolver = resolve;\n                this.promiseRejecter = reject;\n            },\n        );\n    }\n}\n\nexport type WorkerRequestVariant =\n    | WorkerRequest<WorkerRequestType.CLOSE_PREPARED, [ConnectionID, StatementID]>\n    | WorkerRequest<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean]>\n    | WorkerRequest<WorkerRequestType.CONNECT, null>\n    | WorkerRequest<WorkerRequestType.COPY_FILE_TO_BUFFER, string>\n    | WorkerRequest<WorkerRequestType.COPY_FILE_TO_PATH, [string, string]>\n    | WorkerRequest<WorkerRequestType.CREATE_PREPARED, [ConnectionID, string]>\n    | WorkerRequest<WorkerRequestType.DISCONNECT, number>\n    | WorkerRequest<WorkerRequestType.DROP_FILE, string>\n    | WorkerRequest<WorkerRequestType.DROP_FILES, null>\n    | WorkerRequest<WorkerRequestType.EXPORT_FILE_STATISTICS, string>\n    | WorkerRequest<WorkerRequestType.FETCH_QUERY_RESULTS, number>\n    | WorkerRequest<WorkerRequestType.FLUSH_FILES, null>\n    | WorkerRequest<WorkerRequestType.GET_FEATURE_FLAGS, null>\n    | WorkerRequest<WorkerRequestType.GET_TABLE_NAMES, [number, string]>\n    | WorkerRequest<WorkerRequestType.GET_VERSION, null>\n    | WorkerRequest<\n          WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\n          [number, Uint8Array, ArrowInsertOptions | undefined]\n      >\n    | WorkerRequest<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions]>\n    | WorkerRequest<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions]>\n    | WorkerRequest<WorkerRequestType.INSTANTIATE, [string, string | null]>\n    | WorkerRequest<WorkerRequestType.OPEN, DuckDBConfig>\n    | WorkerRequest<WorkerRequestType.PING, null>\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array]>\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_HANDLE, [string, any]>\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_URL, [string, string]>\n    | WorkerRequest<WorkerRequestType.GLOB_FILE_INFOS, string>\n    | WorkerRequest<WorkerRequestType.RESET, null>\n    | WorkerRequest<WorkerRequestType.RUN_PREPARED, [number, number, any[]]>\n    | WorkerRequest<WorkerRequestType.RUN_QUERY, [number, string]>\n    | WorkerRequest<WorkerRequestType.SEND_PREPARED, [number, number, any[]]>\n    | WorkerRequest<WorkerRequestType.SEND_QUERY, [number, string]>\n    | WorkerRequest<WorkerRequestType.TOKENIZE, string>;\n\nexport type WorkerResponseVariant =\n    | WorkerResponse<WorkerResponseType.CONNECTION_INFO, number>\n    | WorkerResponse<WorkerResponseType.ERROR, any>\n    | WorkerResponse<WorkerResponseType.FEATURE_FLAGS, number>\n    | WorkerResponse<WorkerResponseType.FILE_BUFFER, Uint8Array>\n    | WorkerResponse<WorkerResponseType.FILE_INFOS, WebFile[]>\n    | WorkerResponse<WorkerResponseType.FILE_SIZE, number>\n    | WorkerResponse<WorkerResponseType.FILE_STATISTICS, FileStatistics>\n    | WorkerResponse<WorkerResponseType.INSTANTIATE_PROGRESS, InstantiationProgress>\n    | WorkerResponse<WorkerResponseType.LOG, LogEntryVariant>\n    | WorkerResponse<WorkerResponseType.OK, null>\n    | WorkerResponse<WorkerResponseType.PREPARED_STATEMENT_ID, number>\n    | WorkerResponse<WorkerResponseType.QUERY_PLAN, Uint8Array>\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT, Uint8Array>\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT_CHUNK, Uint8Array>\n    | WorkerResponse<WorkerResponseType.QUERY_START, Uint8Array>\n    | WorkerResponse<WorkerResponseType.SCRIPT_TOKENS, ScriptTokens>\n    | WorkerResponse<WorkerResponseType.SUCCESS, boolean>\n    | WorkerResponse<WorkerResponseType.TABLE_NAMES, string[]>\n    | WorkerResponse<WorkerResponseType.VERSION_STRING, string>;\n\nexport type WorkerTaskVariant =\n    | WorkerTask<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean], null>\n    | WorkerTask<WorkerRequestType.CLOSE_PREPARED, [number, number], null>\n    | WorkerTask<WorkerRequestType.CONNECT, null, ConnectionID>\n    | WorkerTask<WorkerRequestType.COPY_FILE_TO_BUFFER, string, Uint8Array>\n    | WorkerTask<WorkerRequestType.COPY_FILE_TO_PATH, [string, string], null>\n    | WorkerTask<WorkerRequestType.CREATE_PREPARED, [number, string], number>\n    | WorkerTask<WorkerRequestType.DISCONNECT, ConnectionID, null>\n    | WorkerTask<WorkerRequestType.DROP_FILE, string, null>\n    | WorkerTask<WorkerRequestType.DROP_FILES, null, null>\n    | WorkerTask<WorkerRequestType.EXPORT_FILE_STATISTICS, string, FileStatistics>\n    | WorkerTask<WorkerRequestType.FETCH_QUERY_RESULTS, ConnectionID, Uint8Array>\n    | WorkerTask<WorkerRequestType.FLUSH_FILES, null, null>\n    | WorkerTask<WorkerRequestType.GET_FEATURE_FLAGS, null, number>\n    | WorkerTask<WorkerRequestType.GET_TABLE_NAMES, [number, string], string[]>\n    | WorkerTask<WorkerRequestType.GET_VERSION, null, string>\n    | WorkerTask<\n          WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\n          [number, Uint8Array, ArrowInsertOptions | undefined],\n          null\n      >\n    | WorkerTask<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions], null>\n    | WorkerTask<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions], null>\n    | WorkerTask<WorkerRequestType.INSTANTIATE, [string, string | null], null>\n    | WorkerTask<WorkerRequestType.OPEN, DuckDBConfig, null>\n    | WorkerTask<WorkerRequestType.PING, null, null>\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_HANDLE, [string, any], null>\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_URL, [string, string], null>\n    | WorkerTask<WorkerRequestType.GLOB_FILE_INFOS, string, WebFile[]>\n    | WorkerTask<WorkerRequestType.RESET, null, null>\n    | WorkerTask<WorkerRequestType.RUN_PREPARED, [number, number, any[]], Uint8Array>\n    | WorkerTask<WorkerRequestType.RUN_QUERY, [ConnectionID, string], Uint8Array>\n    | WorkerTask<WorkerRequestType.SEND_PREPARED, [number, number, any[]], Uint8Array>\n    | WorkerTask<WorkerRequestType.SEND_QUERY, [ConnectionID, string], Uint8Array>\n    | WorkerTask<WorkerRequestType.TOKENIZE, string, ScriptTokens>;\n", "import {\n    WorkerRequestType,\n    WorkerResponseType,\n    WorkerResponseVariant,\n    WorkerTaskVariant,\n    WorkerTask,\n    ConnectionID,\n    WorkerTaskReturnType,\n} from './worker_request';\nimport { AsyncDuckDBBindings } from './async_bindings_interface';\nimport { Logger } from '../log';\nimport { AsyncDuckDBConnection } from './async_connection';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from '../bindings/insert_options';\nimport { ScriptTokens } from '../bindings/tokens';\nimport { FileStatistics } from '../bindings/file_stats';\nimport { DuckDBConfig } from '../bindings/config';\nimport { InstantiationProgress } from '../bindings/progress';\nimport { arrowToSQLField } from '../json_typedef';\nimport { WebFile } from '../bindings/web_file';\n\nconst TEXT_ENCODER = new TextEncoder();\n\nexport class AsyncDuckDB implements AsyncDuckDBBindings {\n    /** The message handler */\n    protected readonly _onMessageHandler: (event: MessageEvent) => void;\n    /** The error handler */\n    protected readonly _onErrorHandler: (event: ErrorEvent) => void;\n    /** The close handler */\n    protected readonly _onCloseHandler: () => void;\n\n    /** Instantiate the module */\n    protected _onInstantiationProgress: ((p: InstantiationProgress) => void)[] = [];\n\n    /** The logger */\n    protected readonly _logger: Logger;\n    /** The worker */\n    protected _worker: Worker | null = null;\n    /** The promise for the worker shutdown */\n    protected _workerShutdownPromise: Promise<null> | null = null;\n    /** Make the worker as terminated */\n    protected _workerShutdownResolver: (value: PromiseLike<null> | null) => void = () => {};\n\n    /** The next message id */\n    protected _nextMessageId = 0;\n    /** The pending requests */\n    protected _pendingRequests: Map<number, WorkerTaskVariant> = new Map();\n\n    constructor(logger: Logger, worker: Worker | null = null) {\n        this._logger = logger;\n        this._onMessageHandler = this.onMessage.bind(this);\n        this._onErrorHandler = this.onError.bind(this);\n        this._onCloseHandler = this.onClose.bind(this);\n        if (worker != null) this.attach(worker);\n    }\n\n    /** Get the logger */\n    public get logger(): Logger {\n        return this._logger;\n    }\n\n    /** Attach to worker */\n    protected attach(worker: Worker): void {\n        this._worker = worker;\n        this._worker.addEventListener('message', this._onMessageHandler);\n        this._worker.addEventListener('error', this._onErrorHandler);\n        this._worker.addEventListener('close', this._onCloseHandler);\n        this._workerShutdownPromise = new Promise<null>(\n            (resolve: (value: PromiseLike<null> | null) => void, _reject: (reason?: void) => void) => {\n                this._workerShutdownResolver = resolve;\n            },\n        );\n    }\n\n    /** Detach from worker */\n    public detach(): void {\n        if (!this._worker) return;\n        this._worker.removeEventListener('message', this._onMessageHandler);\n        this._worker.removeEventListener('error', this._onErrorHandler);\n        this._worker.removeEventListener('close', this._onCloseHandler);\n        this._worker = null;\n        this._workerShutdownResolver(null);\n        this._workerShutdownPromise = null;\n        this._workerShutdownResolver = () => {};\n    }\n\n    /** Kill the worker */\n    public async terminate(): Promise<void> {\n        if (!this._worker) return;\n        this._worker.terminate();\n        //await this._workerShutdownPromise; TODO deadlocking in karma?\n        this._worker = null;\n        this._workerShutdownPromise = null;\n        this._workerShutdownResolver = () => {};\n    }\n\n    /** Post a task */\n    protected async postTask<W extends WorkerTaskVariant>(\n        task: W,\n        transfer: ArrayBuffer[] = [],\n    ): Promise<WorkerTaskReturnType<W>> {\n        if (!this._worker) {\n            console.error('cannot send a message since the worker is not set!');\n            return undefined as any;\n        }\n        const mid = this._nextMessageId++;\n        this._pendingRequests.set(mid, task);\n        this._worker.postMessage(\n            {\n                messageId: mid,\n                type: task.type,\n                data: task.data,\n            },\n            transfer,\n        );\n        return (await task.promise) as WorkerTaskReturnType<W>;\n    }\n\n    /** Received a message */\n    protected onMessage(event: MessageEvent): void {\n        // Unassociated responses?\n        const response = event.data as WorkerResponseVariant;\n        switch (response.type) {\n            // Request failed?\n            case WorkerResponseType.LOG: {\n                this._logger.log(response.data);\n                return;\n            }\n            // Call progress callback\n            case WorkerResponseType.INSTANTIATE_PROGRESS: {\n                for (const p of this._onInstantiationProgress) {\n                    p(response.data);\n                }\n                return;\n            }\n        }\n\n        // Get associated task\n        const task = this._pendingRequests.get(response.requestId);\n        if (!task) {\n            console.warn(`unassociated response: [${response.requestId}, ${response.type.toString()}]`);\n            return;\n        }\n        this._pendingRequests.delete(response.requestId);\n\n        // Request failed?\n        if (response.type == WorkerResponseType.ERROR) {\n            // Workaround for Firefox not being able to perform structured-clone on Native Errors\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\n            const e = new Error(response.data.message);\n            e.name = response.data.name;\n            e.stack = response.data.stack;\n            task.promiseRejecter(e);\n            return;\n        }\n\n        // Otherwise differentiate between the tasks first\n        switch (task.type) {\n            case WorkerRequestType.CLOSE_PREPARED:\n            case WorkerRequestType.COLLECT_FILE_STATISTICS:\n            case WorkerRequestType.COPY_FILE_TO_PATH:\n            case WorkerRequestType.DISCONNECT:\n            case WorkerRequestType.DROP_FILE:\n            case WorkerRequestType.DROP_FILES:\n            case WorkerRequestType.FLUSH_FILES:\n            case WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM:\n            case WorkerRequestType.INSERT_CSV_FROM_PATH:\n            case WorkerRequestType.INSERT_JSON_FROM_PATH:\n            case WorkerRequestType.OPEN:\n            case WorkerRequestType.PING:\n            case WorkerRequestType.REGISTER_FILE_BUFFER:\n            case WorkerRequestType.REGISTER_FILE_HANDLE:\n            case WorkerRequestType.REGISTER_FILE_URL:\n            case WorkerRequestType.RESET:\n                if (response.type == WorkerResponseType.OK) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.INSTANTIATE:\n                this._onInstantiationProgress = [];\n                if (response.type == WorkerResponseType.OK) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GLOB_FILE_INFOS:\n                if (response.type == WorkerResponseType.FILE_INFOS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GET_VERSION:\n                if (response.type == WorkerResponseType.VERSION_STRING) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GET_FEATURE_FLAGS:\n                if (response.type == WorkerResponseType.FEATURE_FLAGS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GET_TABLE_NAMES:\n                if (response.type == WorkerResponseType.TABLE_NAMES) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.TOKENIZE:\n                if (response.type == WorkerResponseType.SCRIPT_TOKENS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.COPY_FILE_TO_BUFFER:\n                if (response.type == WorkerResponseType.FILE_BUFFER) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.EXPORT_FILE_STATISTICS:\n                if (response.type == WorkerResponseType.FILE_STATISTICS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.CONNECT:\n                if (response.type == WorkerResponseType.CONNECTION_INFO) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.RUN_PREPARED:\n            case WorkerRequestType.RUN_QUERY:\n                if (response.type == WorkerResponseType.QUERY_RESULT) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.SEND_PREPARED:\n            case WorkerRequestType.SEND_QUERY:\n                if (response.type == WorkerResponseType.QUERY_START) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.FETCH_QUERY_RESULTS:\n                if (response.type == WorkerResponseType.QUERY_RESULT_CHUNK) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.CREATE_PREPARED:\n                if (response.type == WorkerResponseType.PREPARED_STATEMENT_ID) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n        }\n        task.promiseRejecter(new Error(`unexpected response type: ${response.type.toString()}`));\n    }\n\n    /** Received an error */\n    protected onError(event: ErrorEvent): void {\n        console.error(event);\n        console.error(`error in duckdb worker: ${event.message}`);\n        this._pendingRequests.clear();\n    }\n\n    /** The worker was closed */\n    protected onClose(): void {\n        this._workerShutdownResolver(null);\n        if (this._pendingRequests.size != 0) {\n            console.warn(`worker terminated with ${this._pendingRequests.size} pending requests`);\n            return;\n        }\n        this._pendingRequests.clear();\n    }\n\n    /** Reset the duckdb */\n    public async reset(): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.RESET, null, null>(WorkerRequestType.RESET, null);\n        return await this.postTask(task);\n    }\n\n    /** Ping the worker thread */\n    public async ping(): Promise<any> {\n        const task = new WorkerTask<WorkerRequestType.PING, null, null>(WorkerRequestType.PING, null);\n        await this.postTask(task);\n    }\n    /** Try to drop a file */\n    public async dropFile(name: string): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.DROP_FILE, string, null>(WorkerRequestType.DROP_FILE, name);\n        return await this.postTask(task);\n    }\n    /** Try to drop files */\n    public async dropFiles(): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.DROP_FILES, null, null>(WorkerRequestType.DROP_FILES, null);\n        return await this.postTask(task);\n    }\n    /** Flush all files */\n    public async flushFiles(): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.FLUSH_FILES, null, null>(WorkerRequestType.FLUSH_FILES, null);\n        return await this.postTask(task);\n    }\n\n    /** Open the database */\n    public async instantiate(\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n        progress: (progress: InstantiationProgress) => void = _p => {},\n    ): Promise<null> {\n        this._onInstantiationProgress.push(progress);\n        const task = new WorkerTask<WorkerRequestType.INSTANTIATE, [string, string | null], null>(\n            WorkerRequestType.INSTANTIATE,\n            [mainModuleURL, pthreadWorkerURL],\n        );\n        return await this.postTask(task);\n    }\n\n    /** Get the version */\n    public async getVersion(): Promise<string> {\n        const task = new WorkerTask<WorkerRequestType.GET_VERSION, null, string>(WorkerRequestType.GET_VERSION, null);\n        const version = await this.postTask(task);\n        return version;\n    }\n\n    /** Get the feature flags */\n    public async getFeatureFlags(): Promise<number> {\n        const task = new WorkerTask<WorkerRequestType.GET_FEATURE_FLAGS, null, number>(\n            WorkerRequestType.GET_FEATURE_FLAGS,\n            null,\n        );\n        const feature = await this.postTask(task);\n        return feature;\n    }\n\n    /** Open a new database */\n    public async open(config: DuckDBConfig): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.OPEN, DuckDBConfig, null>(WorkerRequestType.OPEN, config);\n        await this.postTask(task);\n    }\n\n    /** Tokenize a script text */\n    public async tokenize(text: string): Promise<ScriptTokens> {\n        const task = new WorkerTask<WorkerRequestType.TOKENIZE, string, ScriptTokens>(WorkerRequestType.TOKENIZE, text);\n        const tokens = await this.postTask(task);\n        return tokens;\n    }\n\n    /** Connect to the database */\n    public async connectInternal(): Promise<number> {\n        const task = new WorkerTask<WorkerRequestType.CONNECT, null, ConnectionID>(WorkerRequestType.CONNECT, null);\n        return await this.postTask(task);\n    }\n\n    /** Connect to the database */\n    public async connect(): Promise<AsyncDuckDBConnection> {\n        const cid = await this.connectInternal();\n        return new AsyncDuckDBConnection(this, cid);\n    }\n\n    /** Disconnect from the database */\n    public async disconnect(conn: ConnectionID): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.DISCONNECT, ConnectionID, null>(\n            WorkerRequestType.DISCONNECT,\n            conn,\n        );\n        await this.postTask(task);\n    }\n\n    /** Run a query */\n    public async runQuery(conn: ConnectionID, text: string): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.RUN_QUERY, [ConnectionID, string], Uint8Array>(\n            WorkerRequestType.RUN_QUERY,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n\n    /** Send a query */\n    public async sendQuery(conn: ConnectionID, text: string): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.SEND_QUERY, [ConnectionID, string], Uint8Array>(\n            WorkerRequestType.SEND_QUERY,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n\n    /** Fetch query results */\n    public async fetchQueryResults(conn: ConnectionID): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.FETCH_QUERY_RESULTS, ConnectionID, Uint8Array>(\n            WorkerRequestType.FETCH_QUERY_RESULTS,\n            conn,\n        );\n        return await this.postTask(task);\n    }\n\n    /** Get table names */\n    public async getTableNames(conn: number, text: string): Promise<string[]> {\n        const task = new WorkerTask<WorkerRequestType.GET_TABLE_NAMES, [number, string], string[]>(\n            WorkerRequestType.GET_TABLE_NAMES,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n\n    /** Prepare a statement and return its identifier */\n    public async createPrepared(conn: number, text: string): Promise<number> {\n        const task = new WorkerTask<WorkerRequestType.CREATE_PREPARED, [number, string], number>(\n            WorkerRequestType.CREATE_PREPARED,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n    /** Close a prepared statement */\n    public async closePrepared(conn: number, statement: number): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.CLOSE_PREPARED, [number, number], null>(\n            WorkerRequestType.CLOSE_PREPARED,\n            [conn, statement],\n        );\n        await this.postTask(task);\n    }\n    /** Execute a prepared statement and return the full result */\n    public async runPrepared(conn: number, statement: number, params: any[]): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.RUN_PREPARED, [ConnectionID, number, any[]], Uint8Array>(\n            WorkerRequestType.RUN_PREPARED,\n            [conn, statement, params],\n        );\n        return await this.postTask(task);\n    }\n    /** Execute a prepared statement and stream the result */\n    public async sendPrepared(conn: number, statement: number, params: any[]): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.SEND_PREPARED, [ConnectionID, number, any[]], Uint8Array>(\n            WorkerRequestType.SEND_PREPARED,\n            [conn, statement, params],\n        );\n        return await this.postTask(task);\n    }\n    /** Glob file infos */\n    public async globFiles(path: string): Promise<WebFile[]> {\n        const task = new WorkerTask<WorkerRequestType.GLOB_FILE_INFOS, string, WebFile[]>(\n            WorkerRequestType.GLOB_FILE_INFOS,\n            path,\n        );\n        return await this.postTask(task);\n    }\n    /** Register file text */\n    public async registerFileText(name: string, text: string): Promise<void> {\n        const buffer = TEXT_ENCODER.encode(text);\n        await this.registerFileBuffer(name, buffer);\n    }\n    /** Register a file path. */\n    public async registerFileURL(name: string, url: string): Promise<void> {\n        if (url === undefined) {\n            url = name;\n        }\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_URL, [string, string], null>(\n            WorkerRequestType.REGISTER_FILE_URL,\n            [name, url],\n        );\n        await this.postTask(task);\n    }\n\n    /** Register an empty file buffer. */\n    public async registerEmptyFileBuffer(name: string): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>(\n            WorkerRequestType.REGISTER_FILE_BUFFER,\n            [name, new Uint8Array()],\n        );\n        await this.postTask(task);\n    }\n\n    /** Register a file buffer. */\n    public async registerFileBuffer(name: string, buffer: Uint8Array): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>(\n            WorkerRequestType.REGISTER_FILE_BUFFER,\n            [name, buffer],\n        );\n        await this.postTask(task, [buffer.buffer]);\n    }\n\n    /** Register a file handle. */\n    public async registerFileHandle<HandleType>(name: string, handle: HandleType): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_HANDLE, [string, any], null>(\n            WorkerRequestType.REGISTER_FILE_HANDLE,\n            [name, handle],\n        );\n        await this.postTask(task, []);\n    }\n\n    /** Enable file statistics */\n    public async collectFileStatistics(name: string, enable: boolean): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean], null>(\n            WorkerRequestType.COLLECT_FILE_STATISTICS,\n            [name, enable],\n        );\n        await this.postTask(task, []);\n    }\n\n    /** Export file statistics */\n    public async exportFileStatistics(name: string): Promise<FileStatistics> {\n        const task = new WorkerTask<WorkerRequestType.EXPORT_FILE_STATISTICS, string, FileStatistics>(\n            WorkerRequestType.EXPORT_FILE_STATISTICS,\n            name,\n        );\n        return await this.postTask(task, []);\n    }\n\n    /** Copy a file to a buffer. */\n    public async copyFileToBuffer(name: string): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.COPY_FILE_TO_BUFFER, string, Uint8Array>(\n            WorkerRequestType.COPY_FILE_TO_BUFFER,\n            name,\n        );\n        return await this.postTask(task);\n    }\n\n    /** Copy a file to a path. */\n    public async copyFileToPath(name: string, path: string): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.COPY_FILE_TO_PATH, [string, string], null>(\n            WorkerRequestType.COPY_FILE_TO_PATH,\n            [name, path],\n        );\n        await this.postTask(task);\n    }\n\n    /** Insert arrow from an ipc stream */\n    public async insertArrowFromIPCStream(\n        conn: ConnectionID,\n        buffer: Uint8Array,\n        options?: ArrowInsertOptions,\n    ): Promise<void> {\n        if (buffer.length == 0) return;\n        // Pass to the worker\n        const task = new WorkerTask<\n            WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\n            [number, Uint8Array, ArrowInsertOptions | undefined],\n            null\n        >(WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM, [conn, buffer, options]);\n        await this.postTask(task, [buffer.buffer]);\n    }\n    /** Insert a csv file */\n    public async insertCSVFromPath(conn: ConnectionID, path: string, options: CSVInsertOptions): Promise<void> {\n        // Flatten the table options\n        if (options.columns !== undefined) {\n            const out = [];\n            for (const k in options.columns) {\n                const type = options.columns[k];\n                out.push(arrowToSQLField(k, type));\n            }\n            options.columnsFlat = out;\n            delete options.columns;\n        }\n\n        // Pass to the worker\n        const task = new WorkerTask<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions], null>(\n            WorkerRequestType.INSERT_CSV_FROM_PATH,\n            [conn, path, options],\n        );\n        await this.postTask(task);\n    }\n    /** Insert a json file */\n    public async insertJSONFromPath(conn: ConnectionID, path: string, options: JSONInsertOptions): Promise<void> {\n        // Flatten the table options\n        if (options.columns !== undefined) {\n            const out = [];\n            for (const k in options.columns) {\n                const type = options.columns[k];\n                out.push(arrowToSQLField(k, type));\n            }\n            options.columnsFlat = out;\n            delete options.columns;\n        }\n\n        // Pass to the worker\n        const task = new WorkerTask<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions], null>(\n            WorkerRequestType.INSERT_JSON_FROM_PATH,\n            [conn, path, options],\n        );\n        await this.postTask(task);\n    }\n}\n", "import Worker from 'web-worker';\n\nexport async function createWorker(url: string) {\n    const request = new Request(url);\n    const workerScript = await fetch(request);\n    const workerURL = URL.createObjectURL(await workerScript.blob());\n    return new Worker(workerURL);\n}\n", "import * as duckdb from '../src/';\nimport { Vector } from 'apache-arrow';\nimport { DuckDBQueryConfig } from '../src/';\n\n// The max interval in microsec from DuckDB is 83 years 3 months 999 days 00:16:39.999999, with months as 30 days.\n// Note that due to Arrow JS not supporting the duration type, the castDurationToInterval option is used for intervals.\n// This has a side-effect that while the value is in microseconds, it only has millisecond accuracy. This is\n// because DuckDB emits intervals in milliseconds and the Arrow Time64 type does not support milliseconds as unit.\nconst MAX_INTERVAL_US = (((83 * (12 * 30) + 3 * 30 + 999) * 24 * 60 + 16) * 60 + 39) * 1000000 + 999000;\n\n// JS Date at +/-8640000000000000ms\nconst MINIMUM_DATE_STR = '-271821-04-20';\nconst MINIMUM_DATE = new Date(Date.UTC(-271821, 3, 20));\nconst MAXIMUM_DATE_STR = '275760-09-13';\nconst MAXIMUM_DATE = new Date(Date.UTC(275760, 8, 13));\n\n// All columns contain 3 values: [min_value, max_value, null]\ntype AnswerObjectType = {\n    [key: string]: any[];\n};\n\ninterface AllTypesTest {\n    name: string;\n    query: string;\n    skip: string[];\n    answerMap: AnswerObjectType;\n    answerCount: number;\n    queryConfig: DuckDBQueryConfig | null;\n}\n\n// These types currently do not work in DuckDB-WASM\n// timestamp_xx and date_tz types will soon be fully supported by duckdb and should be added then.\n// hugeint, dec_18_3, dec38_10 and uuid require JS BigInts for full support, which is currently not supported by ArrowJS\nconst NOT_IMPLEMENTED_TYPES = [\n    'timestamp_s',\n    'timestamp_ms',\n    'timestamp_ns',\n    'timestamp_tz',\n    'hugeint',\n    'dec_18_6',\n    'dec38_10',\n    'uuid',\n    'map',\n];\n\n// These types are supported, but not the full range returned from the test_all_types() table function, here we define\n// the limits we do expect to be supported.\nconst PARTIALLY_IMPLEMENTED_TYPES = ['date', 'timestamp'];\nconst PARTIALLY_IMPLEMENTED_ANSWER_MAP: AnswerObjectType = {\n    date: [MINIMUM_DATE.valueOf(), MAXIMUM_DATE.valueOf(), null],\n    timestamp: [MINIMUM_DATE.valueOf(), MAXIMUM_DATE.valueOf(), null],\n};\n\n// Subqueries that return the limits of the subset of the full range that is implemented\nconst PARTIALLY_IMPLEMENTED_TYPES_SUBSTITUTIONS = [\n    `(SELECT array_extract(['${MINIMUM_DATE_STR}'::Date,'${MAXIMUM_DATE_STR}'::Date,null],i)) as date`,\n    `(SELECT array_extract(['${MINIMUM_DATE_STR}'::Timestamp,'${MAXIMUM_DATE_STR}'::Timestamp,null],i)) as timestamp`,\n];\n\n// These types do not work with default configuration, but have\nconst TYPES_REQUIRING_CUSTOM_CONFIG = ['dec_4_1', 'dec_9_4'];\n\n// Types that are fully supported.\nconst FULLY_IMPLEMENTED_ANSWER_MAP: AnswerObjectType = {\n    bool: [false, true, null],\n    tinyint: [-128, 127, null],\n    smallint: [-32768, 32767, null],\n    int: [-2147483648, 2147483647, null],\n    utinyint: [0, 255, null],\n    usmallint: [0, 65535, null],\n    uint: [0, 4294967295, null],\n    ubigint: [BigInt(0), BigInt('18446744073709551615'), null],\n    bigint: [BigInt('-9223372036854775808'), BigInt('9223372036854775807'), null],\n\n    // Note that we multiply by thousand (and add 999 for the max) because the value returned by DuckDB is in microseconds,\n    // whereas the Date object is in milliseconds.\n    time: [BigInt(0), BigInt(new Date('1970-01-01T23:59:59.999+00:00').valueOf()) * BigInt(1000) + BigInt(999), null],\n    time_tz: [\n        BigInt(0),\n        BigInt(new Date('1970-01-01T23:59:59.999+00:00').valueOf()) * BigInt(1000) + BigInt(999),\n        null,\n    ],\n    interval: [BigInt(0), BigInt(MAX_INTERVAL_US), null],\n\n    float: [-3.4028234663852886e38, 3.4028234663852886e38, null],\n    double: [-1.7976931348623157e308, 1.7976931348623157e308, null],\n    varchar: ['\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86', 'goose', null],\n    small_enum: ['DUCK_DUCK_ENUM', 'GOOSE', null],\n    medium_enum: ['enum_0', 'enum_299', null],\n    large_enum: ['enum_0', 'enum_69999', null],\n\n    int_array: [[], [42, 999, null, null, -42], null],\n    varchar_array: [[], ['\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86', 'goose', null, ''], null],\n    nested_int_array: [[], [[], [42, 999, null, null, -42], null, [], [42, 999, null, null, -42]], null],\n\n    struct: ['{\"a\":null,\"b\":null}', '{\"a\":42,\"b\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\"}', null],\n    struct_of_arrays: [\n        '{\"a\":null,\"b\":null}',\n        '{\"a\":[42,999,null,null,-42],\"b\":[\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\",\"goose\",null,\"\"]}',\n        null,\n    ],\n    array_of_structs: [[], ['{\"a\":null,\"b\":null}', '{\"a\":42,\"b\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\"}', null], null],\n\n    // XXX sometimes throws\n    // map: ['{}', '{\"key1\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\",\"key2\":\"goose\"}', null],\n    blob: [\n        Uint8Array.from([\n            116, 104, 105, 115, 105, 115, 97, 108, 111, 110, 103, 98, 108, 111, 98, 0, 119, 105, 116, 104, 110, 117,\n            108, 108, 98, 121, 116, 101, 115,\n        ]),\n        Uint8Array.from([92, 120, 48, 48, 92, 120, 48, 48, 92, 120, 48, 48, 97]),\n        null,\n    ],\n};\n\n// Replacements for the values we knowingly don't support from the test_all_types query\nconst REPLACE_COLUMNS = PARTIALLY_IMPLEMENTED_TYPES.concat(NOT_IMPLEMENTED_TYPES).concat(TYPES_REQUIRING_CUSTOM_CONFIG);\n\nfunction unpack(v: any): any {\n    if (v === null) return null;\n\n    if (v instanceof Vector) {\n        const ret = Array.from(v.toArray());\n        for (let i = 0; i < ret.length; i++) {\n            if (!v.isValid(i)) {\n                ret[i] = null;\n            }\n        }\n        return unpack(ret);\n    } else if (v instanceof Array) {\n        const ret: any = [];\n        for (let i = 0; i < v.length; i++) {\n            ret[i] = unpack(v[i]);\n        }\n        return ret;\n    } else if (v instanceof Uint8Array) {\n        return v;\n    } else if (v instanceof Object) {\n        return JSON.stringify(v.toJSON());\n    }\n\n    return v;\n}\n\nfunction getValue(x: any): any {\n    if (typeof x?.valueOf === 'function') {\n        return x.valueOf();\n    } else {\n        return x;\n    }\n}\n\nconst ALL_TYPES_TEST: AllTypesTest[] = [\n    {\n        name: 'fully supported types',\n        query: `SELECT * REPLACE('not_implemented' as map) FROM test_all_types()`,\n        skip: REPLACE_COLUMNS,\n        answerMap: FULLY_IMPLEMENTED_ANSWER_MAP,\n        answerCount: REPLACE_COLUMNS.length + Object.keys(FULLY_IMPLEMENTED_ANSWER_MAP).length,\n        queryConfig: null,\n    },\n    {\n        name: 'partially supported types',\n        query: `SELECT ${PARTIALLY_IMPLEMENTED_TYPES_SUBSTITUTIONS.join(', ')}\n                FROM range(0, 3) tbl(i)`,\n        skip: [],\n        answerMap: PARTIALLY_IMPLEMENTED_ANSWER_MAP,\n        answerCount: PARTIALLY_IMPLEMENTED_TYPES.length,\n        queryConfig: null,\n    },\n    {\n        name: 'types with custom config',\n        query: `SELECT ${TYPES_REQUIRING_CUSTOM_CONFIG.join(',')} FROM test_all_types()`,\n        skip: [],\n        answerMap: {\n            dec_4_1: [-999.9000000000001, 999.9000000000001, null],\n            dec_9_4: [-99999.99990000001, 99999.99990000001, null],\n        },\n        answerCount: TYPES_REQUIRING_CUSTOM_CONFIG.length,\n        queryConfig: {\n            castDecimalToDouble: true,\n        },\n    },\n];\n\nexport function testAllTypes(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection | null;\n\n    beforeEach(() => {\n        db().flushFiles();\n    });\n\n    afterEach(() => {\n        if (conn) {\n            conn.close();\n            conn = null;\n        }\n        db().flushFiles();\n        db().dropFiles();\n    });\n    describe('Test All Types', () => {\n        for (const test of ALL_TYPES_TEST) {\n            it(test.name, () => {\n                if (test.queryConfig) db().open({ query: test.queryConfig });\n\n                conn = db().connect();\n\n                const results = conn.query(test.query);\n                expect(results.numCols).toEqual(test.answerCount);\n\n                const skip = new Map();\n                for (const s of test.skip) {\n                    skip.set(s, true);\n                }\n                for (let i = 0; i < results.numCols; i++) {\n                    const name = results.schema.fields[i].name;\n                    const col = results.getChildAt(i);\n                    if (skip.get(name)) continue;\n                    expect(col).not.toBeNull();\n                    expect(col?.length).not.toEqual(0);\n\n                    expect(unpack(getValue(col!.get(0))))\n                        .withContext(name)\n                        .toEqual(test.answerMap[name][0]); // Min\n                    expect(unpack(getValue(col!.get(1))))\n                        .withContext(name)\n                        .toEqual(test.answerMap[name][1]); // Max\n                    expect(col!.get(2)).toEqual(test.answerMap[name][2]); // Null\n                }\n            });\n        }\n    });\n}\n\nexport function testAllTypesAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n\n    describe('Test All Types Async', () => {\n        for (const test of ALL_TYPES_TEST) {\n            it(test.name, async () => {\n                if (test.queryConfig) db().open({ query: test.queryConfig });\n\n                conn = await db().connect();\n                const results = await conn.query(test.query);\n                expect(results.numCols).toEqual(test.answerCount);\n\n                const skip = new Map();\n                for (const s of test.skip) {\n                    skip.set(s, true);\n                }\n                for (let i = 0; i < results.numCols; i++) {\n                    const name = results.schema.fields[i].name;\n                    const col = results.getChildAt(i);\n                    if (skip.get(name)) continue;\n                    expect(col).not.toBeNull();\n                    expect(col?.length).not.toEqual(0);\n\n                    expect(Object.keys(test.answerMap)).toContain(name);\n                    expect(unpack(getValue(col!.get(0))))\n                        .withContext(name)\n                        .toEqual(test.answerMap[name][0]); // Min\n                    expect(unpack(getValue(col!.get(1))))\n                        .withContext(name)\n                        .toEqual(test.answerMap[name][1]); // Max\n                    expect(col!.get(2)).toEqual(test.answerMap[name][2]); // Null\n                }\n            });\n        }\n    });\n}\n", "import * as duckdb from '../src/';\nimport { getS3Params, S3Params, S3PayloadParams, createS3Headers, uriEncode, getHTTPUrl } from '../src/utils';\nimport { AsyncDuckDBConnection, DuckDBBindings, DuckDBBindingsBase, DuckDBModule } from '../src/';\nimport BROWSER_RUNTIME from '../src/bindings/runtime_browser';\n\n// S3 config for tests\nconst BUCKET_NAME = 'test-bucket';\nconst ACCESS_KEY_ID = 'S3RVER';\nconst ACCESS_KEY_SECRET = 'S3RVER';\nconst S3_ENDPOINT = 'http://localhost:4923';\nconst S3_REGION = 'eu-west-1';\n\nenum AWSConfigType {\n    EMPTY,\n    VALID,\n    INVALID,\n}\nconst setAwsConfig = async function (conn: AsyncDuckDBConnection, type: AWSConfigType = AWSConfigType.VALID) {\n    switch (type) {\n        case AWSConfigType.EMPTY:\n            await conn.query(\"SET s3_region='';\");\n            await conn.query(\"SET s3_access_key_id='';\");\n            await conn.query(\"SET s3_secret_access_key='';\");\n            await conn.query(\"SET s3_session_token='';\");\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\n            break;\n        case AWSConfigType.VALID:\n            await conn.query(`SET s3_region='${S3_REGION}';`);\n            await conn.query(`SET s3_access_key_id='${ACCESS_KEY_ID}';`);\n            await conn.query(`SET s3_secret_access_key='${ACCESS_KEY_SECRET}';`);\n            await conn.query(\"SET s3_session_token='';\");\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\n            break;\n        case AWSConfigType.INVALID:\n            await conn.query(\"SET s3_region='a-very-remote-and-non-existent-s3-region';\");\n            await conn.query(\"SET s3_access_key_id='THISACCESSKEYIDISNOTVALID';\");\n            await conn.query(\"SET s3_secret_access_key='THISSECRETACCESSKEYISNOTVALID';\");\n            await conn.query(\"SET s3_session_token='INVALIDSESSIONTOKEN';\");\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\n            break;\n    }\n};\n\nexport function testHTTPFS(sdb: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection | null;\n\n    const getModule = function () {\n        let module: DuckDBModule | null = null;\n        conn!.useUnsafe((bindings: DuckDBBindings, con_number: number) => {\n            module = (bindings as DuckDBBindingsBase).mod;\n        });\n        expect(module).toBeDefined();\n        return module;\n    };\n    const reset = async () => {\n        sdb().reset();\n        conn = sdb().connect();\n    };\n    beforeEach(async () => await reset());\n    afterEach(async () => await reset());\n\n    describe('HTTPFS', () => {\n        it('s3 config is set correctly', async () => {\n            const module = getModule();\n\n            // Default values are empty\n            const globalFileInfo = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            const cacheEpoch = globalFileInfo!.cacheEpoch;\n            expect(globalFileInfo?.s3Config).toBeDefined();\n            expect(globalFileInfo?.s3Config?.region).toEqual('');\n            expect(globalFileInfo?.s3Config?.accessKeyId).toEqual('');\n            expect(globalFileInfo?.s3Config?.secretAccessKey).toEqual('');\n            expect(globalFileInfo?.s3Config?.sessionToken).toEqual('');\n            expect(globalFileInfo?.s3Config?.endpoint).toEqual('');\n\n            // Confirm settings are correctly set\n            conn!.query(\"SET s3_region='a-very-remote-and-non-existent-s3-region';\");\n            conn!.query(\"SET s3_access_key_id='THISACCESSKEYIDISNOTVALID';\");\n            conn!.query(\"SET s3_secret_access_key='THISSECRETACCESSKEYISNOTVALID';\");\n            conn!.query(\"SET s3_session_token='ANICESESSIONTOKEN';\");\n            conn!.query(\"SET s3_endpoint='s3.some.sort.of.cloud';\");\n            const globalFileInfoUpdated = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoUpdated?.s3Config).toBeDefined();\n            expect(globalFileInfoUpdated?.cacheEpoch).toEqual(cacheEpoch + 5);\n            const params = getS3Params(globalFileInfoUpdated?.s3Config, 's3://test-bucket/testfile.txt', 'GET');\n            expect(params.url).toEqual('/testfile.txt');\n            expect(params.query).toEqual('');\n            expect(params.host).toEqual('test-bucket.s3.some.sort.of.cloud');\n            expect(params.region).toEqual('a-very-remote-and-non-existent-s3-region');\n            expect(params.service).toEqual('s3');\n            expect(params.method).toEqual('GET');\n            expect(params.accessKeyId).toEqual('THISACCESSKEYIDISNOTVALID');\n            expect(params.secretAccessKey).toEqual('THISSECRETACCESSKEYISNOTVALID');\n            expect(params.sessionToken).toEqual('ANICESESSIONTOKEN');\n\n            // Cover full http endpoint config\n            conn!.query(\"SET s3_endpoint='http://localhost:1337';\");\n            const globalFileInfoFullHttpEndpoint = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            const paramsFullHttpEndpoint = getS3Params(\n                globalFileInfoFullHttpEndpoint?.s3Config,\n                's3://test-bucket/testfile.txt',\n                'GET',\n            );\n            expect(paramsFullHttpEndpoint.host).toEqual('localhost:1337');\n\n            // Reset should clear config\n            await reset();\n            const globalFileInfoCleared = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            const paramsCleared = getS3Params(globalFileInfoCleared?.s3Config, 's3://test-bucket/testfile.txt', 'GET');\n            expect(paramsCleared.url).toEqual('/testfile.txt');\n            expect(paramsCleared.query).toEqual('');\n            expect(paramsCleared.host).toEqual('test-bucket.s3.amazonaws.com');\n            expect(paramsCleared.region).toEqual('');\n            expect(paramsCleared.service).toEqual('s3');\n            expect(paramsCleared.method).toEqual('GET');\n            expect(paramsCleared.accessKeyId).toEqual('');\n            expect(paramsCleared.secretAccessKey).toEqual('');\n            expect(paramsCleared.sessionToken).toEqual('');\n        });\n\n        it('url parsing is correct', () => {\n            const module = getModule();\n\n            conn!.query(\"SET s3_endpoint='';\");\n            const globalFileInfoDefault = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoDefault?.s3Config).toBeDefined();\n            const defaultUrl = getHTTPUrl(globalFileInfoDefault?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\n            expect(defaultUrl).toEqual(`https://${BUCKET_NAME}.s3.amazonaws.com/test-file.csv`);\n\n            conn!.query(\"SET s3_endpoint='https://duckdblabs.com';\");\n            const globalFileInfoFullUrl = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoFullUrl?.s3Config).toBeDefined();\n            const fullUrl = getHTTPUrl(globalFileInfoFullUrl?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\n            expect(fullUrl).toEqual(`https://duckdblabs.com/${BUCKET_NAME}/test-file.csv`);\n\n            conn!.query(\"SET s3_endpoint='duckdblabs.com';\");\n            const globalFileInfoDomain = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoDomain?.s3Config).toBeDefined();\n            const domainOnlyUrl = getHTTPUrl(globalFileInfoDomain?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\n            expect(domainOnlyUrl).toEqual(`https://${BUCKET_NAME}.duckdblabs.com/test-file.csv`);\n        });\n\n        // validate authorization headers for known requests, based on: https://czak.pl/2015/09/15/s3-rest-api-with-curl.html\n        it('s3 helper passes validation', () => {\n            const testParams1: S3Params = {\n                url: '/',\n                query: '',\n                host: 'my-precious-bucket.s3.amazonaws.com',\n                region: 'us-east-1',\n                service: 's3',\n                method: 'GET',\n                accessKeyId: 'AKIAIOSFODNN7EXAMPLE',\n                secretAccessKey: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY',\n                sessionToken: '',\n                dateNow: '20150915',\n                datetimeNow: '20150915T124500Z',\n            };\n            const result = createS3Headers(testParams1).get('Authorization');\n            expect(result).toEqual(\n                'AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20150915/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=182072eb53d85c36b2d791a1fa46a12d23454ec1e921b02075c23aee40166d5a',\n            );\n\n            const canonical_query_string = 'delimiter=%2F&encoding-type=url&list-type=2&prefix='; // aws s3 ls <bucket>\n            const testParams2: S3Params = {\n                url: '/',\n                query: canonical_query_string,\n                host: 'my-precious-bucket.s3.eu-west-1.amazonaws.com',\n                region: 'eu-west-1',\n                service: 's3',\n                method: 'GET',\n                accessKeyId: 'ASIAYSPIOYDTHTBIITVC',\n                secretAccessKey: 'vs1BZPxSL2qVARBSg5vCMKJsavCoEPlo/HSHRaVe',\n                sessionToken:\n                    'IQoJb3JpZ2luX2VjENX//////////wEaCWV1LXdlc3QtMSJHMEUCIQDfjzs9BYHrEXDMU/NR+PHV1uSTr7CSVSQdjKSfiPRLdgIgCCztF0VMbi9+uHHAfBVKhV4t9MlUrQg3VAOIsLxrWyoqlAIIHRAAGgw1ODk0MzQ4OTY2MTQiDOGl2DsYxENcKCbh+irxARe91faI+hwUhT60sMGRFg0GWefKnPclH4uRFzczrDOcJlAAaQRJ7KOsT8BrJlrY1jSgjkO7PkVjPp92vi6lJX77bg99MkUTJActiOKmd84XvAE5bFc/jFbqechtBjXzopAPkKsGuaqAhCenXnFt6cwq+LZikv/NJGVw7TRphLV+Aq9PSL9XwdzIgsW2qXwe1c3rxDNj53yStRZHVggdxJ0OgHx5v040c98gFphzSULHyg0OY6wmCMTYcswpb4kO2IIi6AiD9cY25TlwPKRKPi5CdBsTPnyTeW62u7PvwK0fTSy4ZuJUuGKQnH2cKmCXquEwoOHEiQY6nQH9fzY/EDGHMRxWWhxu0HiqIfsuFqC7GS0p0ToKQE+pzNsvVwMjZc+KILIDDQpdCWRIwu53I5PZy2Cvk+3y4XLvdZKQCsAKqeOc4c94UAS4NmUT7mCDOuRV0cLBVM8F0JYBGrUxyI+YoIvHhQWmnRLuKgTb5PkF7ZWrXBHFWG5/tZDOvBbbaCWTlRCL9b0Vpg5+BM/81xd8jChP4w83',\n                dateNow: '20210904',\n                datetimeNow: '20210904T121746Z',\n            };\n            const result2 = createS3Headers(testParams2).get('Authorization');\n            expect(result2).toEqual(\n                'AWS4-HMAC-SHA256 Credential=ASIAYSPIOYDTHTBIITVC/20210904/eu-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=4d9d6b59d7836b6485f6ad822de97be40287da30347d83042ea7fbed530dc4c0',\n            );\n\n            const testParams3: S3Params = {\n                url: '/correct_auth_test.csv',\n                query: '',\n                host: 'test-bucket-ceiveran.s3.amazonaws.com',\n                region: 'eu-west-1',\n                service: 's3',\n                method: 'PUT',\n                accessKeyId: 'S3RVER',\n                secretAccessKey: 'S3RVER',\n                sessionToken: '',\n                dateNow: '20220121',\n                datetimeNow: '20220121T141452Z',\n            };\n            const test3PayloadParams: S3PayloadParams = {\n                contentHash: '28a0cf6ac5c4cb73793091fe6ecc6a68bf90855ac9186158748158f50241bb0c',\n                contentType: 'text/data;charset=utf-8',\n            };\n            const result3 = createS3Headers(testParams3, test3PayloadParams).get('Authorization');\n            expect(result3).toEqual(\n                'AWS4-HMAC-SHA256 Credential=S3RVER/20220121/eu-west-1/s3/aws4_request, SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=5d9a6cbfaa78a6d0f2ab7df0445e2f1cc9c80cd3655ac7de9e7219c036f23f02',\n            );\n\n            expect(uriEncode('/category=Books/')).toEqual('/category%3DBooks/');\n            expect(uriEncode('/?category=Books&title=Ducks Retreat/')).toEqual(\n                '/%3Fcategory%3DBooks%26title%3DDucks%20Retreat/',\n            );\n            expect(uriEncode('/?category=Books&title=Ducks Retreat/', true)).toEqual(\n                '%2F%3Fcategory%3DBooks%26title%3DDucks%20Retreat%2F',\n            );\n        });\n    });\n}\n\nexport function testHTTPFSAsync(\n    adb: () => duckdb.AsyncDuckDB,\n    resolveData: (url: string) => Promise<Uint8Array | null>,\n    baseDir: string,\n): void {\n    let conn: duckdb.AsyncDuckDBConnection | null;\n\n    // PUTs an S3 file to the S3 test server\n    const putTestFileToS3 = async function (fileName: string, format: string, test_data: Uint8Array | null) {\n        await adb().registerFileBuffer('test_file.parquet', test_data!);\n        if (!conn) {\n            conn = await adb().connect();\n        }\n        await setAwsConfig(conn, AWSConfigType.VALID);\n        await conn.send(`CREATE TABLE test_table AS (SELECT * FROM parquet_scan('test_file.parquet'));`);\n        await conn.query(`COPY test_table TO 's3://${BUCKET_NAME}/${fileName}.${format}' (FORMAT '${format}');`);\n        await adb().flushFiles();\n        await adb().dropFiles();\n    };\n\n    // Requires an open conn\n    const assertTestFileResultCorrect = async function (result: any, test_data: Uint8Array | null) {\n        await adb().registerFileBuffer('test_file_baseline.parquet', test_data!);\n        const result_baseline = await conn!.query(`SELECT * FROM parquet_scan('test_file_baseline.parquet');`);\n        expect(result.getChildAt(0).toArray()).toEqual(result_baseline.getChildAt(0)?.toArray());\n    };\n\n    // Reset databases between tests\n    const reset = async () => {\n        await adb().reset();\n        conn = await adb().connect();\n    };\n    beforeEach(async () => await reset());\n    afterEach(async () => await reset());\n\n    describe('HTTPFS Async', () => {\n        it('can fetch https file', async () => {\n            const results = await conn!.query(\n                `select * from \"https://raw.githubusercontent.com/duckdb/duckdb-wasm/master/data/test.csv\";`,\n            );\n            expect(results.getChildAt(2)?.get(2)).toEqual(9);\n        });\n\n        it('can read and write csv file from S3 with correct auth credentials', async () => {\n            let data = await resolveData('/uni/studenten.parquet');\n            await setAwsConfig(conn!);\n            await putTestFileToS3('correct_auth_test', 'csv', data);\n            const results_with_auth = await conn!.query(`select * from \"s3://${BUCKET_NAME}/correct_auth_test.csv\";`);\n            data = await resolveData('/uni/studenten.parquet');\n            assertTestFileResultCorrect(results_with_auth, data);\n        });\n\n        it('can read and write parquet file from S3 with correct auth credentials', async () => {\n            let data = await resolveData('/uni/studenten.parquet');\n            await putTestFileToS3('correct_auth_test', 'parquet', data);\n            await setAwsConfig(conn!);\n            const results_with_auth = await conn!.query(\n                `select * from \"s3://${BUCKET_NAME}/correct_auth_test.parquet\";`,\n            );\n            data = await resolveData('/uni/studenten.parquet');\n            assertTestFileResultCorrect(results_with_auth, data);\n        });\n\n        it('can not read a file with incorrect credentials', async () => {\n            const data = await resolveData('/uni/studenten.parquet');\n            await putTestFileToS3('incorrect_auth_test', 'parquet', data);\n            await setAwsConfig(conn!, AWSConfigType.INVALID);\n            await expectAsync(\n                conn!.query(`select * from \"s3://${BUCKET_NAME}/incorrect_auth_test.csv\";`),\n            ).toBeRejected();\n        });\n\n        it('properly invalidates file caches on settings update.', async () => {\n            const data = await resolveData('/tpch/0_01/parquet/lineitem.parquet');\n            await putTestFileToS3('file_cache_invalidation_test', 'parquet', data);\n            await setAwsConfig(conn!);\n            const results_correct = await conn!.query(\n                `select l_partkey from \"s3://${BUCKET_NAME}/file_cache_invalidation_test.parquet\" limit 1;`,\n            );\n            expect(results_correct.getChildAt(0)?.get(0)).toEqual(1552);\n            await setAwsConfig(conn!, AWSConfigType.INVALID);\n            await expectAsync(\n                conn!.query(`select avg(l_partkey) from \"s3://${BUCKET_NAME}/lineitem.parquet\";`),\n            ).toBeRejected();\n        });\n\n        it('write after read throws incorrect flag error without dropping files', async () => {\n            await setAwsConfig(conn!);\n            await conn!.query(\n                `COPY (SELECT * FROM range(1000,1010) tbl(i)) TO 's3://${BUCKET_NAME}/test_written.csv' (FORMAT 'csv');`,\n            );\n            const result = await conn!.query(`SELECT * FROM \"s3://${BUCKET_NAME}/test_written.csv\";`);\n            expect(result.getChildAt(0)?.get(6)).toEqual(1006);\n            await expectAsync(\n                conn!.query(\n                    `COPY (SELECT * FROM range(2000,2010) tbl(i)) TO 's3://${BUCKET_NAME}/test_written.csv' (FORMAT 'csv');`,\n                ),\n            ).toBeRejectedWithError('File is not opened in write mode');\n        });\n    });\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\n\nexport function testBindings(db: () => duckdb.DuckDBBindings, baseURL: string): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(() => {\n        conn = db().connect();\n    });\n\n    afterEach(() => {\n        conn.close();\n        db().flushFiles();\n        db().dropFiles();\n    });\n\n    describe('DuckDBBindings', () => {\n        describe('error handling', () => {\n            it('INVALID SQL', async () => {\n                let error: Error | null = null;\n                try {\n                    conn.send('INVALID');\n                } catch (e: any) {\n                    error = e;\n                }\n                expect(error).not.toBe(null);\n            });\n        });\n\n        //describe('Open', () => {\n        // XXX apparently synchronous XHR on the main thread does not allow for arraybuffer response type?\n        // it('Remote TPCH 0_01', async () => {\n        //     await db().registerFileURL('tpch_0_01.db', `${baseURL}/tpch/0_01/duckdb/db`);\n        //     db().open('tpch_0_01.db');\n        // });\n        //});\n\n        describe('Reset', () => {\n            it('table must disappear', async () => {\n                await db().reset();\n                conn = db().connect();\n                conn.query('CREATE TABLE foo (a int)');\n                let table = conn.query<{ name: arrow.Utf8 }>('PRAGMA show_tables;');\n                let rows = table.toArray();\n                expect(rows.length).toEqual(1);\n                expect(rows[0]?.name).toEqual('foo');\n                await db().reset();\n                conn = db().connect();\n                table = conn.query<{ name: arrow.Utf8 }>('PRAGMA show_tables;');\n                rows = table.toArray();\n                expect(rows.length).toEqual(0);\n            });\n        });\n\n        describe('Prepared Statement', () => {\n            it('Materialized', async () => {\n                const stmt = conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\n                const result = stmt.query(234);\n                expect(result.numRows).toBe(10001);\n                stmt.close();\n            });\n\n            it('Streaming', async () => {\n                const stmt = conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\n                const stream = stmt.send(234);\n                let size = 0;\n                for (const batch of stream) {\n                    size += batch.numRows;\n                }\n                expect(size).toBe(10001);\n                conn.close();\n            });\n            it('Typecheck', async () => {\n                conn.query(`CREATE TABLE typecheck (\n                    a BOOLEAN DEFAULT NULL,\n                    b TINYINT DEFAULT NULL,\n                    c SMALLINT DEFAULT NULL,\n                    d INTEGER DEFAULT NULL,\n                    e BIGINT DEFAULT NULL,\n                    f FLOAT DEFAULT NULL,\n                    g DOUBLE DEFAULT NULL,\n                    h CHAR(11) DEFAULT NULL,\n                    i VARCHAR(11) DEFAULT NULL\n                )`);\n\n                const stmt = conn.prepare('INSERT INTO typecheck VALUES(?,?,?,?,?,?,?,?,?)');\n                expect(() =>\n                    stmt.query(true, 100, 10_000, 1_000_000, 5_000_000_000, 0.5, Math.PI, 'hello world', 'hi'),\n                ).not.toThrow();\n                expect(() =>\n                    stmt.query(\n                        'test', // varchar for bool\n                        100,\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                expect(() =>\n                    stmt.query(\n                        true,\n                        10_000, // smallint for tinyint\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                expect(() =>\n                    stmt.query(\n                        true,\n                        100,\n                        1_000_000, // int for smallint\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                expect(() =>\n                    stmt.query(\n                        true,\n                        100,\n                        10_000,\n                        5_000_000_000, // bigint for int\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                conn.close();\n            });\n        });\n    });\n}\n\nexport function testAsyncBindings(adb: () => duckdb.AsyncDuckDB, baseURL: string): void {\n    beforeEach(async () => {});\n\n    afterEach(async () => {\n        await adb().flushFiles();\n        await adb().dropFiles();\n        await adb().open({\n            path: ':memory:',\n        });\n    });\n\n    describe('Bindings', () => {\n        describe('Open', () => {\n            it('Remote TPCH 0_01', async () => {\n                await adb().registerFileURL('tpch_0_01.db', `${baseURL}/tpch/0_01/duckdb/db`);\n                await adb().open({\n                    path: 'tpch_0_01.db',\n                });\n                const conn = await adb().connect();\n                const table = await conn.query<{\n                    a: arrow.Int;\n                }>('select count(*)::INTEGER as a from lineitem');\n                const rows = table.toArray();\n                expect(rows.length).toEqual(1);\n                expect(rows[0]?.a).toEqual(60175);\n            });\n        });\n\n        describe('Patching', () => {\n            it('Count(*) Default', async () => {\n                await adb().open({\n                    path: ':memory:',\n                    query: {\n                        castBigIntToDouble: false,\n                    },\n                });\n                const conn = await adb().connect();\n                const table = await conn.query('select 1::BIGINT');\n                expect(table.schema.fields.length).toEqual(1);\n                expect(table.schema.fields[0].typeId).toEqual(arrow.Type.Int);\n            });\n\n            it('Count(*) No BigInt', async () => {\n                await adb().open({\n                    path: ':memory:',\n                    query: {\n                        castBigIntToDouble: true,\n                    },\n                });\n                const conn = await adb().connect();\n                const table = await conn.query('select 1::BIGINT');\n                expect(table.schema.fields.length).toEqual(1);\n                expect(table.schema.fields[0].typeId).toEqual(arrow.Type.Float);\n            });\n        });\n\n        describe('Prepared Statement', () => {\n            it('Materialized', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare('SELECT v + ? FROM generate_series(0, 10000) as t(v);');\n                const result = await stmt.query(234);\n                expect(result.numRows).toBe(10001);\n                await stmt.close();\n            });\n\n            it('Streaming', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\n                const stream = await stmt.send(234);\n                let size = 0;\n                for await (const batch of stream) {\n                    size += batch.numRows;\n                }\n                expect(size).toBe(10001);\n                await conn.close();\n            });\n            it('Typecheck', async () => {\n                const conn = await adb().connect();\n                await conn.query(`CREATE TABLE typecheck (\n                    a BOOLEAN DEFAULT NULL,\n                    b TINYINT DEFAULT NULL,\n                    c SMALLINT DEFAULT NULL,\n                    d INTEGER DEFAULT NULL,\n                    e BIGINT DEFAULT NULL,\n                    f FLOAT DEFAULT NULL,\n                    g DOUBLE DEFAULT NULL,\n                    h CHAR(11) DEFAULT NULL,\n                    i VARCHAR(11) DEFAULT NULL\n                )`);\n\n                const stmt = await conn.prepare('INSERT INTO typecheck VALUES(?,?,?,?,?,?,?,?,?)');\n\n                const expectToThrow = async (fn: () => Promise<void>) => {\n                    let throwed = false;\n                    try {\n                        await fn();\n                    } catch (e) {\n                        throwed = true;\n                    }\n                    expect(throwed).toBe(true);\n                };\n                expectToThrow(async () => {\n                    await stmt.query(\n                        'test', // varchar for bool\n                        100,\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                expectToThrow(async () => {\n                    await stmt.query(\n                        true,\n                        10_000, // smallint for tinyint\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                expectToThrow(async () => {\n                    await stmt.query(\n                        true,\n                        100,\n                        1_000_000, // int for smallint\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                expectToThrow(async () => {\n                    await stmt.query(\n                        true,\n                        100,\n                        10_000,\n                        5_000_000_000, // bigint for int\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                await conn.close();\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\n\nconst testRows = 10000;\n\nexport function testBatchStream(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(() => {\n        conn = db().connect();\n    });\n\n    afterEach(() => {\n        conn.close();\n        db().flushFiles();\n        db().dropFiles();\n    });\n\n    describe('Arrow Record-Batches Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', () => {\n                const result = conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', () => {\n                const result = conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', () => {\n                const result = conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', () => {\n                const result = conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', () => {\n                const result = conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Record-Batches Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', () => {\n                const result = conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', () => {\n                const result = conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', () => {\n                const result = conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', () => {\n                const result = conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', () => {\n                const result = conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', () => {\n                const table = conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', () => {\n                const table = conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', () => {\n                const table = conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v.valueOf()).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', () => {\n                const table = conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', () => {\n                const table = conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', () => {\n                const table = conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\n\nconst testRows = 10000;\n\nexport function testAsyncBatchStream(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        conn = await db().connect();\n    });\n\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n\n    describe('AsyncDuckDB', () => {\n        it('ping', async () => {\n            await db().ping();\n        });\n    });\n\n    describe('Arrow Record-Batches Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const result = await conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const result = await conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n\n        describe('scripts', () => {\n            it('test1', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS x, (sin(v) * 100 + 100)::INTEGER AS y FROM generate_series(0, ${testRows}) as t(v)\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(2);\n                    for (const row of batch) {\n                        expect(row!.x).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Record-Batches Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const result = await conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const result = await conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const table = await conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const table = await conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const table = await conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v.valueOf()).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const table = await conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const table = await conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const table = await conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\nimport * as arrow from 'apache-arrow';\n\nconst decoder = new TextDecoder();\n\nexport function testFilesystem(\n    db: () => duckdb.AsyncDuckDB,\n    resolveData: (url: string) => Promise<Uint8Array | null>,\n    baseDir: string,\n): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        conn = await db().connect();\n    });\n\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n\n    describe('File buffer registration', () => {\n        const test = async () => {\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        };\n        it('File buffer used once', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await test();\n        });\n        it('File buffer registered twice', async () => {\n            const students0 = await resolveData('/uni/studenten.parquet');\n            const students1 = await resolveData('/uni/studenten.parquet');\n            expect(students0).not.toBeNull();\n            expect(students1).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students0!);\n            await test();\n            await db().registerFileBuffer('studenten.parquet', students1!);\n            await test();\n        });\n        it('File buffer used twice', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await test();\n            await test();\n        });\n    });\n\n    describe('Parquet Scans', () => {\n        it('single table from buffer', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        });\n\n        it('simple join', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            const hoeren = await resolveData('/uni/hoeren.parquet');\n            const vorlesungen = await resolveData('/uni/vorlesungen.parquet');\n            expect(students).not.toBeNull();\n            expect(hoeren).not.toBeNull();\n            expect(vorlesungen).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerFileBuffer('hoeren.parquet', hoeren!);\n            await db().registerFileBuffer('vorlesungen.parquet', vorlesungen!);\n\n            const result = await conn.send(`\n                    SELECT students.matrnr, vorlesungen.titel\n                    FROM parquet_scan('studenten.parquet') students\n                    INNER JOIN parquet_scan('hoeren.parquet') hoeren ON (students.matrnr = hoeren.matrnr)\n                    INNER JOIN parquet_scan('vorlesungen.parquet') vorlesungen ON (vorlesungen.vorlnr = hoeren.vorlnr);\n                `);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int; titel: arrow.Utf8 }>(batches);\n            expect(table.numCols).toBe(2);\n            const flat = [];\n            for (const row of table) {\n                flat.push({\n                    matrnr: row?.matrnr,\n                    titel: row?.titel?.toString(),\n                });\n            }\n            expect(flat).toEqual([\n                { matrnr: 26120, titel: 'Grundz\u00FCge' },\n                { matrnr: 27550, titel: 'Grundz\u00FCge' },\n                { matrnr: 27550, titel: 'Logik' },\n                { matrnr: 28106, titel: 'Ethik' },\n                { matrnr: 28106, titel: 'Wissenschaftstheorie' },\n                { matrnr: 28106, titel: 'Bioethik' },\n                { matrnr: 28106, titel: 'Der Wiener Kreis' },\n                { matrnr: 29120, titel: 'Grundz\u00FCge' },\n                { matrnr: 29120, titel: 'Ethik' },\n                { matrnr: 29120, titel: 'M\u00E4eutik' },\n                { matrnr: 29555, titel: 'Glaube und Wissen' },\n                { matrnr: 25403, titel: 'Glaube und Wissen' },\n            ]);\n        });\n    });\n\n    describe('Writing', () => {\n        it('Copy To CSV Buffer', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerEmptyFileBuffer('students.csv');\n            await conn.query(`CREATE TABLE students AS SELECT * FROM parquet_scan('studenten.parquet');`);\n            await conn.query(`COPY students TO 'students.csv' WITH (HEADER 1, DELIMITER ';', FORMAT CSV);`);\n            await conn.query(`DROP TABLE IF EXISTS students`);\n            const outBuffer = await db().copyFileToBuffer('students.csv');\n            expect(outBuffer).not.toBeNull();\n            const text = decoder.decode(outBuffer!);\n            expect(text).toBe(`matrnr;name;semester\n24002;Xenokrates;18\n25403;Jonas;12\n26120;Fichte;10\n26830;Aristoxenos;8\n27550;Schopenhauer;6\n28106;Carnap;3\n29120;Theophrastos;2\n29555;Feuerbach;2\n`);\n        });\n\n        it('Copy To Parquet', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerEmptyFileBuffer('students2.parquet');\n            await conn.query(`CREATE TABLE students2 AS SELECT * FROM parquet_scan('studenten.parquet');`);\n            await conn.query(`COPY students2 TO 'students2.parquet' (FORMAT PARQUET);`);\n            const url = await db().copyFileToBuffer('students2.parquet');\n            expect(url).not.toBeNull();\n        });\n\n        it('Copy To Parquet And Load Again', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerEmptyFileBuffer('students3.parquet');\n            await conn.query(`CREATE TABLE students3 AS SELECT * FROM parquet_scan('studenten.parquet');`);\n            await conn.query(`COPY students3 TO 'students3.parquet' (FORMAT PARQUET);`);\n            const url = await db().copyFileToBuffer('students3.parquet');\n            expect(url).not.toBeNull();\n            await conn.query(`CREATE TABLE students4 AS SELECT * FROM parquet_scan('students3.parquet');`);\n            const result = await conn.send(`SELECT matrnr FROM students4;`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        });\n    });\n\n    describe('File access', () => {\n        it('Small Parquet file', async () => {\n            await db().registerFileURL('studenten.parquet', `${baseDir}/uni/studenten.parquet`);\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        });\n\n        it('Large Parquet file', async () => {\n            await db().registerFileURL('lineitem.parquet', `${baseDir}/tpch/0_01/parquet/lineitem.parquet`);\n            const result = await conn.send(`SELECT count(*)::INTEGER as cnt FROM parquet_scan('lineitem.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ cnt: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.get(0)).toBeGreaterThan(60_000);\n        });\n    });\n\n    describe('Export', () => {\n        it('Generate Series as CSV', async () => {\n            await conn.query('CREATE TABLE foo AS SELECT * FROM generate_series(1, 5) t(v)');\n            await conn.query(`EXPORT DATABASE '/tmp/duckdbexportcsv'`);\n\n            const results = await db().globFiles('/tmp/duckdbexportcsv/*');\n            expect(results).not.toEqual([]);\n            expect(results.length).toEqual(3);\n            const filenames = results.map(file => file.fileName).sort();\n            expect(filenames).toEqual([\n                '/tmp/duckdbexportcsv/0_foo.csv',\n                '/tmp/duckdbexportcsv/load.sql',\n                '/tmp/duckdbexportcsv/schema.sql',\n            ]);\n\n            const csv_buffer_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/0_foo.csv');\n            const load_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/load.sql');\n            const schema_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/schema.sql');\n            expect(load_script_utf8.length).not.toEqual(0);\n            expect(schema_script_utf8.length).not.toEqual(0);\n            expect(csv_buffer_utf8.length).not.toEqual(0);\n\n            const load_script = decoder.decode(load_script_utf8);\n            const schema_script = decoder.decode(schema_script_utf8);\n            const csv_buffer = decoder.decode(csv_buffer_utf8);\n            expect(load_script.trim()).toEqual(\n                `COPY foo FROM '/tmp/duckdbexportcsv/0_foo.csv' (FORMAT 'csv', quote '\"', delimiter ',', header 0);`,\n            );\n            expect(schema_script.trim()).toEqual(`CREATE TABLE foo(v BIGINT);`);\n            expect(csv_buffer.trim()).toEqual(`1\\n2\\n3\\n4\\n5`);\n        });\n\n        it('Generate Series as Parquet', async () => {\n            await conn.query('CREATE TABLE foo AS SELECT * FROM generate_series(1, 5) t(v)');\n            await conn.query(`EXPORT DATABASE '/tmp/duckdbexportparquet' (FORMAT PARQUET)`);\n\n            const results = await db().globFiles('/tmp/duckdbexportparquet/*');\n            expect(results).not.toEqual([]);\n            expect(results.length).toEqual(3);\n            const filenames = results.map(file => file.fileName).sort();\n            expect(filenames).toEqual([\n                '/tmp/duckdbexportparquet/0_foo.parquet',\n                '/tmp/duckdbexportparquet/load.sql',\n                '/tmp/duckdbexportparquet/schema.sql',\n            ]);\n\n            const parquet_buffer = await db().copyFileToBuffer('/tmp/duckdbexportparquet/0_foo.parquet');\n            const load_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportparquet/load.sql');\n            const schema_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportparquet/schema.sql');\n            expect(load_script_utf8.length).not.toEqual(0);\n            expect(schema_script_utf8.length).not.toEqual(0);\n            expect(parquet_buffer.length).not.toEqual(0);\n\n            const content = await conn.query(\n                `SELECT v::integer FROM parquet_scan('/tmp/duckdbexportparquet/0_foo.parquet')`,\n            );\n            expect(content.nullCount).toEqual(0);\n            expect(content.numRows).toEqual(5);\n            expect(content.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 3, 4, 5]));\n        });\n    });\n\n    describe('Copy', () => {\n        it('Generate Series as Parquet', async () => {\n            await conn.query(\n                `COPY (SELECT * FROM generate_series(1, 5) t(v)) TO '/tmp/duckdbcopytest.parquet' (FORMAT 'parquet')`,\n            );\n            const results = await db().globFiles('/tmp/duckdbcopytest*');\n            expect(results).not.toEqual([]);\n            expect(results.length).toEqual(1);\n            const filenames = results.map(file => file.fileName).sort();\n            expect(filenames).toEqual(['/tmp/duckdbcopytest.parquet']);\n            const parquet_buffer = await db().copyFileToBuffer('/tmp/duckdbcopytest.parquet');\n            expect(parquet_buffer.length).not.toEqual(0);\n            const content = await conn.query(`SELECT v::integer FROM parquet_scan('/tmp/duckdbcopytest.parquet')`);\n            expect(content.numRows).toEqual(5);\n            expect(content.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 3, 4, 5]));\n        });\n    });\n}\n", "import * as arrow from 'apache-arrow';\n\nexport interface Column {\n    name: string;\n    values: any[];\n}\n\nexport function compareTable(table: arrow.Table, expected: Column[]): void {\n    // Check column count\n    const colCount = expected.length;\n    expect(table.numCols).toEqual(colCount);\n    if (colCount == 0) return;\n\n    // Check columns\n    const rowCount = expected[0].values.length;\n    for (let i = 0; i < colCount; ++i) {\n        expect(expected[i].values.length).toEqual(rowCount);\n        expect(table.getChildAt(i)?.length).toEqual(rowCount);\n        expect(table.schema.fields[i]?.name).toEqual(expected[i].name);\n    }\n\n    // Compare the actual values\n    for (let i = 0; i < colCount; ++i) {\n        const col = table.getChildAt(i)!;\n        const have = [];\n        for (let j = 0; j < rowCount; ++j) {\n            have.push(col.get(j));\n        }\n        expect(have).toEqual(expected[i].values);\n    }\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\nimport { Column, compareTable } from './table_test';\n\n/// Unfortunately, arrow.Table.from does not build a proper Schema.\n/// When it does, we might want to switch back to arrow.Table here instead\n/// of arrow Schema + ArrowBatch.\ninterface ArrowInsertTest {\n    name: string;\n    schema: arrow.Schema;\n    batches: ArrowBatch[];\n    options: duckdb.ArrowInsertOptions;\n    query: string;\n    expectedColumns: Column[];\n}\n\ninterface ArrowBatch {\n    numRows: number;\n    columns: arrow.Data[];\n}\n\nconst buildUtf8Array = (values: string[]) => {\n    const builder = new arrow.Utf8Builder({\n        type: new arrow.Utf8(),\n    });\n    for (const v of values) {\n        builder.append(v);\n    }\n    builder.finish();\n    return builder.flush();\n};\n\nexport function generateXInt32(n: number, cols: number): number[][] {\n    const columns = [];\n    for (let j = 0; j < cols; ++j) {\n        const column = [];\n        for (let i = 0; i < n; ++i) {\n            column.push(i);\n        }\n        columns.push(column);\n    }\n    return columns;\n}\n\nexport function generateArrowXInt32(n: number, cols: number): [arrow.Schema, arrow.RecordBatch[]] {\n    const columns = generateXInt32(n, cols);\n    const fields = [];\n    for (let j = 0; j < cols; ++j) {\n        fields.push(new arrow.Field(`v${j}`, new arrow.Int32()));\n    }\n    const schema = new arrow.Schema(fields);\n    const batches = [];\n    for (let i = 0; i < n; ) {\n        const rows = Math.min(1000, n - i);\n        const data = arrow.makeData({\n            type: new arrow.Struct(fields),\n            children: columns.map(c =>\n                arrow.makeData({\n                    type: new arrow.Int32(),\n                    data: new Int32Array(c.slice(i, i + rows)),\n                }),\n            ),\n        });\n        batches.push(new arrow.RecordBatch(schema, data));\n        i += rows;\n    }\n    return [schema, batches];\n}\n\nconst ARROW_INSERT_TESTS: ArrowInsertTest[] = [\n    {\n        name: 'integers_1',\n        schema: new arrow.Schema([\n            new arrow.Field('a', new arrow.Int32()),\n            new arrow.Field('b', new arrow.Int32()),\n            new arrow.Field('c', new arrow.Int32()),\n        ]),\n        batches: [\n            {\n                numRows: 3,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([2, 5, 8]) }),\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([3, 6, 9]) }),\n                ],\n            },\n        ],\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'combined_1',\n        schema: new arrow.Schema([\n            new arrow.Field('a', new arrow.Int32()),\n            new arrow.Field('b', new arrow.Int16()),\n            new arrow.Field('c', new arrow.Utf8()),\n        ]),\n        batches: [\n            {\n                numRows: 3,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([2, 5, 8]) }),\n                    buildUtf8Array(['3', '6', '9']),\n                ],\n            },\n        ],\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: ['3', '6', '9'] },\n        ],\n    },\n    {\n        name: 'combined_2',\n        schema: new arrow.Schema([\n            new arrow.Field('a', new arrow.Int32()),\n            new arrow.Field('b', new arrow.Int16()),\n            new arrow.Field('c', new arrow.Utf8()),\n        ]),\n        batches: [\n            {\n                numRows: 3,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([2, 5, 8]) }),\n                    buildUtf8Array(['3', '6', '9']),\n                ],\n            },\n            {\n                numRows: 2,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([10, 13]) }),\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([11, 14]) }),\n                    buildUtf8Array(['12', '15']),\n                ],\n            },\n        ],\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7, 10, 13] },\n            { name: 'b', values: [2, 5, 8, 11, 14] },\n            { name: 'c', values: ['3', '6', '9', '12', '15'] },\n        ],\n    },\n];\n\nexport function testArrowInsert(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(async () => {\n        db().flushFiles();\n        conn = db().connect();\n    });\n    afterEach(async () => {\n        conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('Arrow insert from iterable', () => {\n        for (const test of ARROW_INSERT_TESTS) {\n            it(test.name, () => {\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const batches = test.batches.map(b => {\n                    const data = arrow.makeData({\n                        type: new arrow.Struct(test.schema.fields),\n                        children: b.columns,\n                    });\n                    return new arrow.RecordBatch(test.schema, data);\n                });\n                const table = new arrow.Table(test.schema, batches);\n                conn.insertArrowTable(table, test.options);\n                const results = conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n\nexport function testArrowInsertAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('Arrow async insert from iterable', () => {\n        for (const test of ARROW_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const batches = test.batches.map(b => {\n                    const data = arrow.makeData({\n                        type: new arrow.Struct(test.schema.fields),\n                        children: b.columns,\n                    });\n                    return new arrow.RecordBatch(test.schema, data);\n                });\n                const table = new arrow.Table(test.schema, batches);\n                await conn.insertArrowTable(table, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n    describe('Arrow async insert from table', () => {\n        it('simple integers', async () => {\n            await conn.query(`DROP TABLE IF EXISTS insert_from_table`);\n            const table = new arrow.Table({\n                a: arrow.makeVector(new Int32Array([1, 4, 7])),\n                b: arrow.makeVector(new Int32Array([2, 5, 8])),\n                c: arrow.vectorFromArray<arrow.Utf8>(['3', '6', '9']),\n            });\n            await conn.insertArrowTable(table, {\n                name: 'insert_from_vectors',\n            });\n            const results = await conn.query('select * from insert_from_vectors');\n            compareTable(results, [\n                { name: 'a', values: [1, 4, 7] },\n                { name: 'b', values: [2, 5, 8] },\n                { name: 'c', values: ['3', '6', '9'] },\n            ]);\n        });\n    });\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\nimport { Column, compareTable } from './table_test';\n\nfunction describeBrowser(description: string, specDefinitions: () => void): void {\n    if (typeof window !== 'undefined') {\n        describe(description, specDefinitions);\n    }\n}\n\nconst encoder = new TextEncoder();\n\ninterface JSONInsertTest {\n    name: string;\n    input: string;\n    options: duckdb.JSONInsertOptions;\n    query: string;\n    expectedColumns: Column[];\n}\n\nconst JSON_INSERT_TESTS: JSONInsertTest[] = [\n    {\n        name: 'rows_integers',\n        input: `[\n            {\"a\":1, \"b\":2, \"c\":3},\n            {\"a\":4, \"b\":5, \"c\":6},\n            {\"a\":7, \"b\":8, \"c\":9},\n        ]`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'cols_integers',\n        input: `{\n            \"a\": [1, 4, 7],\n            \"b\": [2, 5, 8],\n            \"c\": [3, 6, 9]\n        }`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'options_1',\n        input: `[\n            {\"a\":1, \"b\":2, \"c\":3},\n            {\"a\":4, \"b\":5, \"c\":6},\n            {\"a\":7, \"b\":8, \"c\":9},\n        ]`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n            shape: duckdb.JSONTableShape.ROW_ARRAY,\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.Utf8(),\n            },\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: ['3', '6', '9'] },\n        ],\n    },\n];\n\nconst TEST_FILE = 'TEST';\n\nexport function testJSONInsert(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(async () => {\n        db().flushFiles();\n        conn = db().connect();\n    });\n    afterEach(async () => {\n        conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('JSON Insert Sync', () => {\n        for (const test of JSON_INSERT_TESTS) {\n            it(test.name, () => {\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                db().registerFileBuffer(TEST_FILE, buffer);\n                conn.insertJSONFromPath(TEST_FILE, test.options);\n                const results = conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n\nexport function testJSONInsertAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('JSON Insert Buffer Async', () => {\n        for (const test of JSON_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                await db().registerFileBuffer(TEST_FILE, buffer);\n                await conn.insertJSONFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n\n    describeBrowser('JSON Insert Blob Async', () => {\n        for (const test of JSON_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                const blob = new Blob([buffer]);\n                await db().registerFileHandle(TEST_FILE, blob);\n                await conn.insertJSONFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\nimport { Column, compareTable } from './table_test';\n\nfunction describeBrowser(description: string, specDefinitions: () => void): void {\n    if (typeof window !== 'undefined') {\n        describe(description, specDefinitions);\n    }\n}\n\nconst encoder = new TextEncoder();\n\ninterface CSVInsertTest {\n    name: string;\n    input: string;\n    options: duckdb.CSVInsertOptions;\n    query: string;\n    expectedColumns: Column[];\n}\n\nconst CSV_INSERT_TESTS: CSVInsertTest[] = [\n    {\n        name: 'integers_auto_1',\n        input: `\"a\",\"b\",\"c\"\n1,2,3\n4,5,6\n7,8,9\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'integers_auto_2',\n        input: `a,b,c\n1,2,3\n4,5,6\n7,8,9\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'integers_auto_3',\n        input: `a,b,c`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'column0', values: ['a'] },\n            { name: 'column1', values: ['b'] },\n            { name: 'column2', values: ['c'] },\n        ],\n    },\n    {\n        name: 'integers_auto_2',\n        input: `a\n1\n4\n7\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [{ name: 'a', values: [1, 4, 7] }],\n    },\n    {\n        name: 'options_1',\n        input: `1,2,3\n4,5,6\n7,8,9\n`,\n        options: {\n            schema: 'main',\n            name: 'foo2',\n            header: false,\n            detect: false,\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.Utf8(),\n            },\n        },\n        query: 'SELECT * FROM main.foo2',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: ['3', '6', '9'] },\n        ],\n    },\n    {\n        name: 'options_2',\n        input: `1|2|01/02/2020\n4|5|01/03/2020\n7|8|01/04/2020\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n            detect: false,\n            header: false,\n            delimiter: '|',\n            dateFormat: '%m/%d/%Y',\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.DateDay(),\n            },\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            {\n                name: 'c',\n                values: [\n                    new Date(Date.UTC(2020, 0, 2)),\n                    new Date(Date.UTC(2020, 0, 3)),\n                    new Date(Date.UTC(2020, 0, 4)),\n                ],\n            },\n        ],\n    },\n    {\n        name: 'options_3',\n        input: `1|2|20:32:45 1992-03-02\n4|5|20:32:50 1992-03-02\n7|8|20:32:55 1992-03-02\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n            detect: false,\n            header: false,\n            delimiter: '|',\n            quote: \"'\",\n            timestampFormat: '%H:%M:%S %Y-%m-%d',\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.TimestampSecond(),\n            },\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            {\n                name: 'c',\n                values: [\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 45)).getTime(),\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 50)).getTime(),\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 55)).getTime(),\n                ],\n            },\n        ],\n    },\n];\n\nconst TEST_FILE = 'TEST';\n\nexport function testCSVInsert(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(async () => {\n        db().flushFiles();\n        conn = db().connect();\n    });\n    afterEach(async () => {\n        conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('CSV Insert Sync', () => {\n        for (const test of CSV_INSERT_TESTS) {\n            it(test.name, () => {\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                db().registerFileBuffer(TEST_FILE, buffer);\n                conn.insertCSVFromPath(TEST_FILE, test.options);\n                const results = conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n\nexport function testCSVInsertAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('CSV Insert Buffer Async', () => {\n        for (const test of CSV_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                await db().registerFileBuffer(TEST_FILE, buffer);\n                await conn.insertCSVFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n\n    describeBrowser('CSV Insert Blob Async', () => {\n        for (const test of CSV_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                const blob = new Blob([buffer]);\n                await db().registerFileHandle(TEST_FILE, blob);\n                await conn.insertCSVFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n", "import * as duckdb from '../src/';\n\nexport function testTokenization(db: () => duckdb.DuckDBBindings): void {\n    describe('Tokenizer', () => {\n        it('SELECT 1', async () => {\n            expect(db().tokenize('SELECT 1')).toEqual({\n                offsets: [0, 7],\n                types: [4, 1],\n            });\n        });\n        it('SELECT * FROM region', async () => {\n            expect(db().tokenize('SELECT * FROM region')).toEqual({\n                offsets: [0, 7, 9, 14],\n                types: [4, 3, 4, 0],\n            });\n        });\n    });\n}\n\nexport function testTokenizationAsync(db: () => duckdb.AsyncDuckDB): void {\n    describe('Tokenizer', () => {\n        it('SELECT 1', async () => {\n            expect(await db().tokenize('SELECT 1')).toEqual({\n                offsets: [0, 7],\n                types: [4, 1],\n            });\n        });\n        it('SELECT * FROM region', async () => {\n            expect(await db().tokenize('SELECT * FROM region')).toEqual({\n                offsets: [0, 7, 9, 14],\n                types: [4, 3, 4, 0],\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\n\ninterface TableNameTest {\n    name: string;\n    input: string;\n    tables: string[];\n}\n\nconst TABLENAME_TESTS: TableNameTest[] = [\n    {\n        name: 'standard',\n        input: 'SELECT * FROM my_table',\n        tables: ['my_table'],\n    },\n    {\n        name: 'fetch_specific',\n        input: 'SELECT col_a FROM my_table',\n        tables: ['my_table'],\n    },\n    {\n        name: 'multiple_tables',\n        input: 'SELECT * FROM my_table1, my_table2, my_table3',\n        tables: ['my_table1', 'my_table2', 'my_table3'],\n    },\n    {\n        name: 'same_table_multiple_times',\n        input: 'SELECT col_a FROM my_table, my_table m2, my_table m3',\n        tables: ['my_table'],\n    },\n    {\n        name: 'subqueries',\n        input: 'SELECT * FROM (SELECT * FROM (SELECT * FROM my_table) bla) bla3',\n        tables: ['my_table'],\n    },\n    {\n        name: 'join',\n        input: 'SELECT col_a FROM my_table JOIN my_table2 ON (my_table.col_b=my_table2.col_d)',\n        tables: ['my_table', 'my_table2'],\n    },\n    {\n        name: 'scalar_subquery',\n        input: 'SELECT (SELECT COUNT(*) FROM my_table)',\n        tables: ['my_table'],\n    },\n    {\n        name: 'set_operations',\n        input: 'SELECT * FROM my_table UNION ALL SELECT * FROM my_table2 INTERSECT SELECT * FROM my_table3',\n        tables: ['my_table', 'my_table2', 'my_table3'],\n    },\n    {\n        name: 'window_functions',\n        input: 'SELECT row_number() OVER (ORDER BY (SELECT i+j FROM my_table2)) FROM my_table',\n        tables: ['my_table', 'my_table2'],\n    },\n];\n\nexport function testTableNames(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n    beforeEach(() => {\n        conn = db().connect();\n    });\n    afterEach(() => {\n        conn.close();\n    });\n    describe('TableNames', () => {\n        for (const test of TABLENAME_TESTS) {\n            it(test.name, () => {\n                const tables = conn.getTableNames(test.input);\n                expect(tables).toEqual(test.tables);\n            });\n        }\n    });\n}\n\nexport function testTableNamesAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n    beforeEach(async () => {\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n    });\n    describe('TableNames Async', () => {\n        for (const test of TABLENAME_TESTS) {\n            it(test.name, async () => {\n                const tables = await conn.getTableNames(test.input);\n                expect(tables).toEqual(test.tables);\n            });\n        }\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/332\nexport function test332(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('332', async () => {\n            await db().registerFileText(\n                'Products.csv',\n                `ProductGroup,Product,Year,Quarter,Revenue,Units,Count,Product Key,Reseller,Product Info,QuarterAsNumber\nElectronics,Phone,2018,Q1,103,7,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2018,Q1,102,4,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2019,Q1,98,12,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2018,Q1,104,3,1,2018-Q1,Samsung,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2019,Q1,83,7,1,2019-Q1,Google,Format=XML; <Properties>\u2026,1\nMedia,Theater,2018,Q1,17,4,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Theater,2019,Q1,20,7,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Movies,2018,Q1,25,12,1,2018-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nMedia,Movies,2019,Q1,26,13,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2018,Q2,105,5,1,2018-Q2,Samsung,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2019,Q2,82,15,1,2019-Q2,LG,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2018,Q2,99,4,1,2018-Q2,LG,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2019,Q2,84,20,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Theater,2018,Q2,17,4,1,2018-Q2,Microsoft,Format=XML; <Properties>\u2026,2\nMedia,Theater,2019,Q2,22,5,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Movies,2018,Q2,25,12,1,2018-Q2,Samsung,Format=XML; <Properties>\u2026,2\nMedia,Movies,2019,Q2,26,14,1,2019-Q2,Google,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2000,Q1,103,7,1,2000-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2001,Q1,102,4,1,2001-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2002,Q1,98,12,1,2002-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2003,Q1,104,3,1,2003-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2004,Q1,83,7,1,2004-Q1,Samsung,Format=XML; <Properties>\u2026,1\nMedia,Theater,2005,Q1,17,4,1,2005-Q1,Google,Format=XML; <Properties>\u2026,1\nMedia,Theater,2006,Q1,20,7,1,2006-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Movies,2007,Q1,25,12,1,2007-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Movies,2008,Q1,26,13,1,2008-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2009,Q2,105,5,1,2009-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2010,Q2,82,15,1,2010-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2011,Q2,99,4,1,2011-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2012,Q2,84,20,1,2012-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Theater,2013,Q2,17,4,1,2013-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Theater,2014,Q2,22,5,1,2014-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Movies,2015,Q2,25,12,1,2015-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Movies,2016,Q2,26,14,1,2016-Q2,Samsung,Format=XML; <Properties>\u2026,2\nMedia,Movies,2017,Q1,26,13,1,2017-Q1,Google,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2018,Q2,105,5,1,2018-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2019,Q2,82,15,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2020,Q2,99,4,1,2020-Q2,Microsoft,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2020,Q1,103,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2020,Q2,102,4,1,2020-Q2,Samsung,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2020,Q3,98,12,1,2020-Q3,LG,Format=XML; <Properties>\u2026,3\nElectronics,Computer,2020,Q4,104,3,1,2020-Q4,LG,Format=XML; <Properties>\u2026,4\nElectronics,Computer,2020,Q1,83,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Theater,2020,Q1,17,4,1,2020-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nMedia,Theater,2020,Q1,20,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\n`,\n            );\n            await conn.query(\"CREATE TABLE products AS SELECT * FROM 'Products.csv'\");\n            const all = await conn.query('SELECT * FROM products');\n            expect(all.schema.fields.length).toBe(11);\n            expect(all.schema.fields[0].name).toBe('ProductGroup');\n            const insensitive = await conn.query<{\n                ProductGroup: arrow.Utf8;\n            }>('SELECT productgroup FROM products GROUP BY productgroup');\n            expect(insensitive.schema.fields.length).toBe(1);\n            expect(insensitive.schema.fields[0].name).toBe('ProductGroup');\n            expect(insensitive.toArray().length).toEqual(2);\n            await conn.query('DROP TABLE products');\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/334\nexport function test334(adb: () => duckdb.AsyncDuckDB): void {\n    describe('GitHub issues', () => {\n        describe('334', () => {\n            it('CSV insert', async () => {\n                await adb().registerFileText(`data.csv`, '1|foo\\n2|bar\\n');\n                const conn = await adb().connect();\n                await conn.insertCSVFromPath('data.csv', {\n                    schema: 'main',\n                    name: 'foo',\n                    detect: false,\n                    header: false,\n                    delimiter: '|',\n                    columns: {\n                        col1: new arrow.Int32(),\n                        col2: new arrow.Utf8(),\n                    },\n                });\n                await conn.query('DROP TABLE IF EXISTS foo');\n                await conn.close();\n                await adb().dropFile('data.csv');\n            });\n            it('JSON row insert', async () => {\n                await adb().registerFileText(\n                    'rows.json',\n                    `[\n                    { \"col1\": 1, \"col2\": \"foo\" },\n                    { \"col1\": 2, \"col2\": \"bar\" },\n                ]`,\n                );\n                const conn = await adb().connect();\n                await conn.insertJSONFromPath('rows.json', { name: 'rows' });\n                await conn.query('DROP TABLE IF EXISTS rows');\n                await conn.close();\n                await adb().dropFile('rows.json');\n            });\n            it('JSON column insert', async () => {\n                await adb().registerFileText(\n                    'columns.json',\n                    `{\n                    \"col1\": [1, 2],\n                    \"col2\": [\"foo\", \"bar\"]\n                }`,\n                );\n                const conn = await adb().connect();\n                await conn.insertJSONFromPath('columns.json', { name: 'columns' });\n                await conn.query('DROP TABLE IF EXISTS columns');\n                await conn.close();\n                await adb().dropFile('columns.json');\n            });\n            it('Query result materialized', async () => {\n                const conn = await adb().connect();\n                await conn.query<{ v: arrow.Int }>(`\n                SELECT * FROM generate_series(1, 100) t(v)\n            `);\n                await conn.close();\n            });\n            it('Query result streamed', async () => {\n                const conn = await adb().connect();\n                for await (const batch of await conn.send<{ v: arrow.Int }>(`\n                SELECT * FROM generate_series(1, 100) t(v)\n            `)) {\n                    expect(batch.numRows).toBeGreaterThan(0);\n                }\n                await conn.close();\n            });\n            it('Prepared statement materialized', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare(`SELECT v + ? FROM generate_series(0, 10000) as t(v);`);\n                await stmt.query(234);\n                await stmt.close();\n                await conn.close();\n            });\n            it('Prepared statement streamed', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare(`SELECT v + ? FROM generate_series(0, 10000) as t(v);`);\n                for await (const batch of await stmt.send(234)) {\n                    expect(batch.numRows).toBeGreaterThan(0);\n                }\n                await stmt.close();\n                await conn.close();\n            });\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/393\nexport function test393(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('393', async () => {\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castTimestampToDate: false,\n                },\n            });\n            conn = await db().connect();\n            const resultWithoutCast = await conn.query<{\n                ts: arrow.TimestampMillisecond;\n            }>(`SELECT TIMESTAMP '1992-03-22 01:02:03' as ts`);\n            expect(resultWithoutCast.toArray()[0]?.ts).toEqual(new Date(Date.UTC(1992, 2, 22, 1, 2, 3)).getTime());\n\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castTimestampToDate: true,\n                },\n            });\n            conn = await db().connect();\n            const resultWithCast = await conn.query<{\n                ts: arrow.DateMillisecond;\n            }>(`SELECT TIMESTAMP '1992-03-22 01:02:03' as ts`);\n            expect(resultWithCast.toArray()[0]?.ts).toEqual(new Date(Date.UTC(1992, 2, 22, 1, 2, 3)));\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/448\nexport function test448(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('448', async () => {\n            conn = await db().connect();\n            await conn.query(`create temp table test448(i integer)`);\n            await conn.query(`insert into test448 values (1),(2),(1)`);\n            let result = await conn.query(`select * from test448`);\n            expect(result.numCols).toBe(1);\n            expect(result.numRows).toBe(3);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 1]));\n            result = await conn.query<{ i: arrow.Map_<arrow.Int32, arrow.Uint64> }>(`select histogram(i) from test448`);\n            expect(result.numCols).toBe(1);\n            expect(result.numRows).toBe(1);\n            const array = result.getChildAt(0)!.toArray();\n            expect(array.length).toEqual(1);\n            expect(array[0].toString()).toEqual('{1: 2, 2: 1}');\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/470\nexport function test470(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('470', async () => {\n            // Baseline without cast: we expect an error to be thrown because of the duration type that is emitted\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castDurationToTime64: false,\n                },\n            });\n            conn = await db().connect();\n            conn.query<{\n                interval: arrow.TimeMicrosecond;\n            }>(`SELECT INTERVAL '3' MONTH AS interval`)\n                .then(x => fail('Query is expected to fail due to duration type not being implemented'))\n                .catch(x => {\n                    expect(x).toEqual(new Error('Unrecognized type: \"Duration\" (18)'));\n                });\n\n            // Cast explicitly enabled: Time64 value is returned\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castDurationToTime64: true,\n                },\n            });\n            conn = await db().connect();\n            const resultWithCast = await conn.query<{\n                interval: arrow.TimeMicrosecond;\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\n            expect(resultWithCast.toArray()[0]?.interval?.toString()).toEqual('7776000000000');\n\n            // Cast should be on by default\n            await db().open({\n                path: ':memory:',\n                query: {},\n            });\n            conn = await db().connect();\n            const resultWithDefault = await conn.query<{\n                interval: arrow.TimeMicrosecond;\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\n            expect(resultWithDefault.toArray()[0]?.interval?.toString()).toEqual('7776000000000');\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/477\n// Note that when ArrowJS supports negative decimals, castDecimalToDouble should probably be deprecated.\nexport function test477(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('477', async () => {\n            // Baseline without cast: we expect the negative decimal values to not work accurately\n            await db().open({\n                path: ':memory:',\n                query: {},\n            });\n            conn = await db().connect();\n            const resultWithoutCast = await conn.query(`SELECT (-1.9)::DECIMAL(2,1) as decimal`);\n            expect(resultWithoutCast.schema.fields[0].type.scale).toEqual(1);\n            expect(resultWithoutCast.schema.fields[0].type.precision).toEqual(2);\n            // If this assertion breaks, arrow JS was likely updated to handle negative values\n            expect(resultWithoutCast.toArray()[0]?.decimal == -19).toBe(false);\n\n            // Using castDecimalToDouble we force decimals to be cast to doubles, note the inevitable imprecision.\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castDecimalToDouble: true,\n                },\n            });\n            conn = await db().connect();\n            const resultWithCast = await conn.query<{\n                decimal: arrow.Float64;\n            }>(`SELECT (-1.9)::DECIMAL(2,1) as decimal`);\n            expect(resultWithCast.toArray()[0]?.decimal).toEqual(-1.9000000000000001);\n        });\n    });\n}\n", "import * as duckdb from '../../src/';\nimport { test332 } from './github_332.test';\nimport { test334 } from './github_334.test';\nimport { test393 } from './github_393.test';\nimport { test448 } from './github_448.test';\nimport { test470 } from './github_470.test';\nimport { test477 } from \"./github_477.test\";\n\nexport function testRegressionAsync(adb: () => duckdb.AsyncDuckDB): void {\n    test332(adb);\n    test334(adb);\n    test393(adb);\n    test448(adb);\n    test470(adb);\n    test477(adb);\n}\n", "import * as duckdb from '../src/';\nimport { Float64, Int32, Utf8 } from 'apache-arrow';\n\nexport function testUDF(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n    beforeEach(() => {\n        conn = db().connect();\n    });\n\n    afterEach(() => {\n        conn.close();\n        db().flushFiles();\n        db().dropFiles();\n    });\n\n    describe('UDF', () => {\n        it('simple', async () => {\n            conn.createScalarFunction('jsudf', new Int32(), a => a);\n\n            const result = conn.query(\n                'SELECT max(jsudf(v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([10000]));\n        });\n\n        it('double', async () => {\n            conn.createScalarFunction('jsudf2', new Float64(), a => a);\n\n            const result = conn.query(\n                'SELECT max(jsudf2(v::DOUBLE))::DOUBLE as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Float64Array([10000]));\n        });\n\n        it('2 args', async () => {\n            conn.createScalarFunction('jsudf3', new Int32(), (a, b) => a + b);\n\n            const result = conn.query(\n                'SELECT max(jsudf3(v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([20000]));\n        });\n\n        it('3 args', async () => {\n            conn.createScalarFunction('jsudf3args', new Int32(), (a, b, c) => a + b + c);\n\n            const result = conn.query(\n                'SELECT max(jsudf3args(v::INTEGER, v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([30000]));\n        });\n\n        it('4 args', async () => {\n            conn.createScalarFunction('jsudf4args', new Int32(), (a, b, c, d) => a + b + c + d);\n\n            const result = conn.query(\n                'SELECT max(jsudf4args(v::INTEGER, v::INTEGER, v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([40000]));\n        });\n\n        it('noargs', async () => {\n            conn.createScalarFunction('jsudf4', new Int32(), () => 42);\n            const result = conn.query('SELECT max(jsudf4())::INTEGER as foo FROM generate_series(1, 10000) as t(v)');\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([42]));\n        });\n        it('withnulls', async () => {\n            conn.createScalarFunction('jsudf5', new Int32(), a => (a == undefined ? -100 : a));\n            const result = conn.query(\n                'SELECT min(jsudf5((case when v % 2 = 0 then v else null end)::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\n        });\n\n        it('stringparam', async () => {\n            function jsudf6(s: string) {\n                return s.length;\n            }\n            conn.createScalarFunction('jsudf6', new Int32(), jsudf6);\n            const result = conn.query(\n                \"SELECT max(jsudf6('str_' || v))::INTEGER as foo FROM generate_series(1, 10000) as t(v)\",\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([9]));\n        });\n\n        it('stringparamnulls', async () => {\n            function jsudf7(s: string) {\n                if (s == undefined) {\n                    return 0;\n                } else {\n                    return s.length;\n                }\n            }\n            conn.createScalarFunction('jsudf7', new Int32(), jsudf7);\n            const result = conn.query(\n                \"SELECT max(jsudf7((case when v % 2 = 0 then 'str_' || v else null end)::VARCHAR))::INTEGER as foo FROM generate_series(1, 10000) as t(v)\",\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([9]));\n        });\n\n        it('nullintreturn', async () => {\n            conn.createScalarFunction('jsudf8', new Int32(), a => undefined);\n\n            const result = conn.query(\n                'SELECT max(COALESCE(jsudf8(v::INTEGER), 42))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([42]));\n        });\n\n        it('stringreturn', async () => {\n            conn.createScalarFunction('jsudf9', new Utf8(), a => 'Hello ' + a);\n\n            const result = conn.query(\n                'SELECT max(LENGTH(jsudf9(v::INTEGER)))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([11]));\n        });\n\n        it('nullstringreturn', async () => {\n            conn.createScalarFunction('jsudf10', new Utf8(), a => (a % 2 == 0 ? 'Hello' : undefined));\n\n            const result = conn.query(\n                'SELECT COUNT(jsudf10(v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([5000]));\n        });\n    });\n}\n", "import * as duckdb_blocking from '../src/targets/duckdb-browser-blocking';\nimport * as duckdb from '../src/targets/duckdb';\nimport * as check from 'wasm-feature-detect';\n\n// Configure the worker\nconst DUCKDB_BUNDLES: duckdb.DuckDBBundles = {\n    mvp: {\n        mainModule: new URL('/static/duckdb-mvp.wasm', window.location.href).href,\n        mainWorker: new URL('/static/duckdb-browser-mvp.worker.js', window.location.href).href,\n    },\n    eh: {\n        mainModule: new URL('/static/duckdb-eh.wasm', window.location.href).href,\n        mainWorker: new URL('/static/duckdb-browser-eh.worker.js', window.location.href).href,\n    },\n    coi: {\n        mainModule: new URL('/static/duckdb-coi.wasm', window.location.href).href,\n        mainWorker: new URL('/static/duckdb-browser-coi.worker.js', window.location.href).href,\n        pthreadWorker: new URL('/static/duckdb-browser-coi.pthread.worker.js', window.location.href).href,\n    },\n};\nlet DUCKDB_BUNDLE: duckdb.DuckDBBundle | null = null;\n\ndescribe('wasm check', () => {\n    it('worker and wasm urls', async () => {\n        if (\n            (await duckdb.getPlatformFeatures()).crossOriginIsolated &&\n            (await check.exceptions()) &&\n            (await check.threads())\n        ) {\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.coi!.mainModule);\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.coi!.mainWorker);\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(DUCKDB_BUNDLES.coi!.pthreadWorker);\n        }\n        if ((await check.exceptions()) && !(await check.threads())) {\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.eh!.mainModule);\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.eh!.mainWorker);\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(null);\n        }\n        if (!(await check.exceptions())) {\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.mvp!.mainModule);\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.mvp!.mainWorker);\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(null);\n        }\n    });\n});\n\n// Loading debug symbols, especially for WASM take insanely long so we just disable the test timeout\njasmine.DEFAULT_TIMEOUT_INTERVAL = 60000;\n\n// Resolve a buffer by fetching from disk\nconst resolveBuffer = async (url: string) => {\n    const req = await fetch(`/data${url}`);\n    if (!req.ok) return null;\n    return new Uint8Array(await req.arrayBuffer());\n};\n\n// Resolve test data\nconst resolveData = async (url: string) => {\n    switch (url) {\n        case '/uni/all.zip':\n            return await resolveBuffer('/uni/all.zip');\n        case '/uni/assistenten.parquet':\n            return await resolveBuffer('/uni/assistenten.parquet');\n        case '/uni/studenten.parquet':\n            return await resolveBuffer('/uni/studenten.parquet');\n        case '/uni/hoeren.parquet':\n            return await resolveBuffer('/uni/hoeren.parquet');\n        case '/uni/vorlesungen.parquet':\n            return await resolveBuffer('/uni/vorlesungen.parquet');\n        case '/tpch/0_01/parquet/lineitem.parquet':\n            return await resolveBuffer('/tpch/0_01/parquet/lineitem.parquet');\n        default:\n            return null;\n    }\n};\n\n// Test environment\nlet db: duckdb_blocking.DuckDBBindings | null = null;\nlet adb: duckdb.AsyncDuckDB | null = null;\nlet worker: Worker | null = null;\n\nbeforeAll(async () => {\n    const logger = new duckdb_blocking.VoidLogger();\n    db = await duckdb_blocking.createDuckDB(DUCKDB_BUNDLES, logger, duckdb_blocking.BROWSER_RUNTIME);\n    await db.instantiate(_ => {});\n\n    DUCKDB_BUNDLE = await duckdb.selectBundle(DUCKDB_BUNDLES);\n    worker = await duckdb.createWorker(DUCKDB_BUNDLE!.mainWorker!);\n    adb = new duckdb.AsyncDuckDB(logger, worker);\n    await adb.instantiate(DUCKDB_BUNDLE!.mainModule, DUCKDB_BUNDLE!.pthreadWorker);\n});\n\nafterAll(async () => {\n    if (worker) worker.terminate();\n});\n\nimport { testAllTypes, testAllTypesAsync } from './all_types.test';\nimport { testHTTPFS, testHTTPFSAsync } from './httpfs_test';\nimport { testBindings, testAsyncBindings } from './bindings.test';\nimport { testBatchStream } from './batch_stream.test';\nimport { testAsyncBatchStream } from './batch_stream_async.test';\nimport { testFilesystem } from './filesystem.test';\nimport { testArrowInsert, testArrowInsertAsync } from './insert_arrow.test';\nimport { testJSONInsert, testJSONInsertAsync } from './insert_json.test';\nimport { testCSVInsert, testCSVInsertAsync } from './insert_csv.test';\nimport { testTokenization, testTokenizationAsync } from './tokenizer.test';\nimport { testTableNames, testTableNamesAsync } from './tablenames.test';\nimport { testRegressionAsync } from './regression';\nimport { testUDF } from './udf.test';\n\nconst baseURL = window.location.origin;\nconst dataURL = `${baseURL}/data`;\n\ntestHTTPFS(() => db!);\ntestHTTPFSAsync(() => adb!, resolveData, dataURL);\ntestUDF(() => db!);\ntestTableNames(() => db!);\ntestTableNamesAsync(() => adb!);\ntestRegressionAsync(() => adb!);\ntestAllTypes(() => db!);\ntestAllTypesAsync(() => adb!);\ntestBindings(() => db!, dataURL);\ntestAsyncBindings(() => adb!, dataURL);\ntestBatchStream(() => db!);\ntestAsyncBatchStream(() => adb!);\ntestFilesystem(() => adb!, resolveData, dataURL);\ntestArrowInsert(() => db!);\ntestArrowInsertAsync(() => adb!);\ntestJSONInsert(() => db!);\ntestJSONInsertAsync(() => adb!);\ntestCSVInsert(() => db!);\ntestCSVInsertAsync(() => adb!);\ntestTokenization(() => db!);\ntestTokenizationAsync(() => adb!);\n"],
  "mappings": "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",
  "names": []
}
